#include "qt_widgets_c_global.h"
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr(QObject* parent, void (*callback)(void *, QTableWidgetItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QTableWidgetItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QTableWidgetItem * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QTableWidgetItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr() { }

Q_SIGNALS:
    void emit_(QTableWidgetItem * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref(QObject* parent, void (*callback)(void *, QScrollerProperties const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QScrollerProperties const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QScrollerProperties const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QScrollerProperties const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref() { }

Q_SIGNALS:
    void emit_(QScrollerProperties const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref(QObject* parent, void (*callback)(void *, QBrush const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QBrush const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QBrush const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QBrush const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref() { }

Q_SIGNALS:
    void emit_(QBrush const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr(QObject* parent, void (*callback)(void *, QListWidgetItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QListWidgetItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QListWidgetItem * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QListWidgetItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr() { }

Q_SIGNALS:
    void emit_(QListWidgetItem * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref(QObject* parent, void (*callback)(void *, QDate const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QDate const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QDate const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QDate const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref() { }

Q_SIGNALS:
    void emit_(QDate const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle(QObject* parent, void (*callback)(void *, Qt::ToolButtonStyle), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, Qt::ToolButtonStyle), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(Qt::ToolButtonStyle arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, Qt::ToolButtonStyle)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle() { }

Q_SIGNALS:
    void emit_(Qt::ToolButtonStyle arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref(QObject* parent, void (*callback)(void *, QString const *, QString const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QString const *, QString const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QString const & arg0, QString const & arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0, &arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QString const *, QString const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref() { }

Q_SIGNALS:
    void emit_(QString const & arg0, QString const & arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref(QObject* parent, void (*callback)(void *, QStringList const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QStringList const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QStringList const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QStringList const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref() { }

Q_SIGNALS:
    void emit_(QStringList const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF(QObject* parent, void (*callback)(void *, QRect const *, QPointF const *, QPointF const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QRect const *, QPointF const *, QPointF const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QRect arg0, QPointF arg1, QPointF arg2) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), new QRect(arg0), new QPointF(arg1), new QPointF(arg2));
        }
    }

private:
    ritual::Callback<void (*)(void *, QRect const *, QPointF const *, QPointF const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF() { }

Q_SIGNALS:
    void emit_(QRect arg0, QPointF arg1, QPointF arg2);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr(QObject* parent, void (*callback)(void *, QUndoStack *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QUndoStack *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QUndoStack * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QUndoStack *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr() { }

Q_SIGNALS:
    void emit_(QUndoStack * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref(QObject* parent, void (*callback)(void *, QString const *, QString const *, QString const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QString const *, QString const *, QString const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QString const & arg0, QString const & arg1, QString const & arg2) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0, &arg1, &arg2);
        }
    }

private:
    ritual::Callback<void (*)(void *, QString const *, QString const *, QString const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref() { }

Q_SIGNALS:
    void emit_(QString const & arg0, QString const & arg1, QString const & arg2);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref(QObject* parent, void (*callback)(void *, QPoint const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QPoint const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QPoint const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QPoint const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref() { }

Q_SIGNALS:
    void emit_(QPoint const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref(QObject* parent, void (*callback)(void *, QIcon const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QIcon const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QIcon const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QIcon const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref() { }

Q_SIGNALS:
    void emit_(QIcon const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea(QObject* parent, void (*callback)(void *, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QFlags< Qt::DockWidgetArea > arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), int(arg0));
        }
    }

private:
    ritual::Callback<void (*)(void *, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea() { }

Q_SIGNALS:
    void emit_(QFlags< Qt::DockWidgetArea > arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature(QObject* parent, void (*callback)(void *, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QFlags< QDockWidget::DockWidgetFeature > arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), int(arg0));
        }
    }

private:
    ritual::Callback<void (*)(void *, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature() { }

Q_SIGNALS:
    void emit_(QFlags< QDockWidget::DockWidgetFeature > arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr(QObject* parent, void (*callback)(void *, QMdiSubWindow *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QMdiSubWindow *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QMdiSubWindow * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QMdiSubWindow *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr() { }

Q_SIGNALS:
    void emit_(QMdiSubWindow * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea(QObject* parent, void (*callback)(void *, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QFlags< Qt::ToolBarArea > arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), int(arg0));
        }
    }

private:
    ritual::Callback<void (*)(void *, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea() { }

Q_SIGNALS:
    void emit_(QFlags< Qt::ToolBarArea > arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref(QObject* parent, void (*callback)(void *, QList< QModelIndex > const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QList< QModelIndex > const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QModelIndexList const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QList< QModelIndex > const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref() { }

Q_SIGNALS:
    void emit_(QModelIndexList const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint(QObject* parent, void (*callback)(void *, QWidget *, QAbstractItemDelegate::EndEditHint), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QWidget *, QAbstractItemDelegate::EndEditHint), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QWidget * arg0, QAbstractItemDelegate::EndEditHint arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QWidget *, QAbstractItemDelegate::EndEditHint)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint() { }

Q_SIGNALS:
    void emit_(QWidget * arg0, QAbstractItemDelegate::EndEditHint arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr(QObject* parent, void (*callback)(void *, QAbstractButton *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QAbstractButton *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QAbstractButton * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QAbstractButton *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr() { }

Q_SIGNALS:
    void emit_(QAbstractButton * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QScroller_State : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QScroller_State(QObject* parent, void (*callback)(void *, QScroller::State), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QScroller::State), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QScroller::State arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QScroller::State)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QScroller_State : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QScroller_State() { }

Q_SIGNALS:
    void emit_(QScroller::State arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF(QObject* parent, void (*callback)(void *, QRect const *, QPointF const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QRect const *, QPointF const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QRect arg0, QPointF arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), new QRect(arg0), new QPointF(arg1));
        }
    }

private:
    ritual::Callback<void (*)(void *, QRect const *, QPointF const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF() { }

Q_SIGNALS:
    void emit_(QRect arg0, QPointF arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr(QObject* parent, void (*callback)(void *, QWidget *, QWidget *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QWidget *, QWidget *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QWidget * arg0, QWidget * arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QWidget *, QWidget *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr() { }

Q_SIGNALS:
    void emit_(QWidget * arg0, QWidget * arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder(QObject* parent, void (*callback)(void *, int, Qt::SortOrder), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int, Qt::SortOrder), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(int arg0, Qt::SortOrder arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, int, Qt::SortOrder)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder() { }

Q_SIGNALS:
    void emit_(int arg0, Qt::SortOrder arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason(QObject* parent, void (*callback)(void *, QSystemTrayIcon::ActivationReason), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QSystemTrayIcon::ActivationReason), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QSystemTrayIcon::ActivationReason arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QSystemTrayIcon::ActivationReason)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason() { }

Q_SIGNALS:
    void emit_(QSystemTrayIcon::ActivationReason arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState(QObject* parent, void (*callback)(void *, int, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QFlags< Qt::WindowState > arg0, QFlags< Qt::WindowState > arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), int(arg0), int(arg1));
        }
    }

private:
    ritual::Callback<void (*)(void *, int, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState() { }

Q_SIGNALS:
    void emit_(QFlags< Qt::WindowState > arg0, QFlags< Qt::WindowState > arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool(QObject* parent, void (*callback)(void *, QAbstractButton *, bool), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QAbstractButton *, bool), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QAbstractButton * arg0, bool arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QAbstractButton *, bool)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool() { }

Q_SIGNALS:
    void emit_(QAbstractButton * arg0, bool arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref(QObject* parent, void (*callback)(void *, QPointF const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QPointF const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QPointF const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QPointF const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref() { }

Q_SIGNALS:
    void emit_(QPointF const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr(QObject* parent, void (*callback)(void *, QTableWidgetItem *, QTableWidgetItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QTableWidgetItem *, QTableWidgetItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QTableWidgetItem * arg0, QTableWidgetItem * arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QTableWidgetItem *, QTableWidgetItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr() { }

Q_SIGNALS:
    void emit_(QTableWidgetItem * arg0, QTableWidgetItem * arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr(QObject* parent, void (*callback)(void *, QGraphicsItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QGraphicsItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QGraphicsItem * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QGraphicsItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr() { }

Q_SIGNALS:
    void emit_(QGraphicsItem * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref(QObject* parent, void (*callback)(void *, QTime const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QTime const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QTime const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QTime const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref() { }

Q_SIGNALS:
    void emit_(QTime const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr(QObject* parent, void (*callback)(void *, QGraphicsItem *, QGraphicsItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QGraphicsItem *, QGraphicsItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QGraphicsItem * arg0, QGraphicsItem * arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QGraphicsItem *, QGraphicsItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr() { }

Q_SIGNALS:
    void emit_(QGraphicsItem * arg0, QGraphicsItem * arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QRect : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QRect(QObject* parent, void (*callback)(void *, QRect const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QRect const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QRect arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), new QRect(arg0));
        }
    }

private:
    ritual::Callback<void (*)(void *, QRect const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QRect : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QRect() { }

Q_SIGNALS:
    void emit_(QRect arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref(QObject* parent, void (*callback)(void *, QList< QRectF > const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QList< QRectF > const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QList< QRectF > const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QList< QRectF > const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref() { }

Q_SIGNALS:
    void emit_(QList< QRectF > const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int(QObject* parent, void (*callback)(void *, QRect const *, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QRect const *, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QRect const & arg0, int arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QRect const *, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int() { }

Q_SIGNALS:
    void emit_(QRect const & arg0, int arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref(QObject* parent, void (*callback)(void *, QDateTime const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QDateTime const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QDateTime const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QDateTime const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref() { }

Q_SIGNALS:
    void emit_(QDateTime const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref(QObject* parent, void (*callback)(void *, QKeySequence const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QKeySequence const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QKeySequence const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QKeySequence const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref() { }

Q_SIGNALS:
    void emit_(QKeySequence const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr(QObject* parent, void (*callback)(void *, QTreeWidgetItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QTreeWidgetItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QTreeWidgetItem * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QTreeWidgetItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr() { }

Q_SIGNALS:
    void emit_(QTreeWidgetItem * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint(QObject* parent, void (*callback)(void *, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QFlags< QGraphicsBlurEffect::BlurHint > arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), int(arg0));
        }
    }

private:
    ritual::Callback<void (*)(void *, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint() { }

Q_SIGNALS:
    void emit_(QFlags< QGraphicsBlurEffect::BlurHint > arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr(QObject* parent, void (*callback)(void *, QAction *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QAction *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QAction * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QAction *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr() { }

Q_SIGNALS:
    void emit_(QAction * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason(QObject* parent, void (*callback)(void *, QGraphicsItem *, QGraphicsItem *, Qt::FocusReason), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QGraphicsItem *, QGraphicsItem *, Qt::FocusReason), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QGraphicsItem * arg0, QGraphicsItem * arg1, Qt::FocusReason arg2) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1, arg2);
        }
    }

private:
    ritual::Callback<void (*)(void *, QGraphicsItem *, QGraphicsItem *, Qt::FocusReason)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason() { }

Q_SIGNALS:
    void emit_(QGraphicsItem * arg0, QGraphicsItem * arg1, Qt::FocusReason arg2);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr(QObject* parent, void (*callback)(void *, QListWidgetItem *, QListWidgetItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QListWidgetItem *, QListWidgetItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QListWidgetItem * arg0, QListWidgetItem * arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QListWidgetItem *, QListWidgetItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr() { }

Q_SIGNALS:
    void emit_(QListWidgetItem * arg0, QListWidgetItem * arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr(QObject* parent, void (*callback)(void *, QDockWidget *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QDockWidget *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QDockWidget * arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QDockWidget *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr() { }

Q_SIGNALS:
    void emit_(QDockWidget * arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref(QObject* parent, void (*callback)(void *, QTextCharFormat const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QTextCharFormat const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QTextCharFormat const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QTextCharFormat const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref() { }

Q_SIGNALS:
    void emit_(QTextCharFormat const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref(QObject* parent, void (*callback)(void *, QColor const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QColor const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QColor const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QColor const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref() { }

Q_SIGNALS:
    void emit_(QColor const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr(QObject* parent, void (*callback)(void *, QTreeWidgetItem *, QTreeWidgetItem *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QTreeWidgetItem *, QTreeWidgetItem *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QTreeWidgetItem * arg0, QTreeWidgetItem * arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QTreeWidgetItem *, QTreeWidgetItem *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr() { }

Q_SIGNALS:
    void emit_(QTreeWidgetItem * arg0, QTreeWidgetItem * arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState(QObject* parent, void (*callback)(void *, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QFlags< Qt::WindowState > arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), int(arg0));
        }
    }

private:
    ritual::Callback<void (*)(void *, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState() { }

Q_SIGNALS:
    void emit_(QFlags< Qt::WindowState > arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int(QObject* parent, void (*callback)(void *, QTreeWidgetItem *, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QTreeWidgetItem *, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QTreeWidgetItem * arg0, int arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, QTreeWidgetItem *, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int() { }

Q_SIGNALS:
    void emit_(QTreeWidgetItem * arg0, int arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea(QObject* parent, void (*callback)(void *, Qt::DockWidgetArea), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, Qt::DockWidgetArea), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(Qt::DockWidgetArea arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, Qt::DockWidgetArea)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea() { }

Q_SIGNALS:
    void emit_(Qt::DockWidgetArea arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_int_bool : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_int_bool(QObject* parent, void (*callback)(void *, int, bool), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int, bool), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(int arg0, bool arg1) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1);
        }
    }

private:
    ritual::Callback<void (*)(void *, int, bool)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_int_bool : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_int_bool() { }

Q_SIGNALS:
    void emit_(int arg0, bool arg1);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref(QObject* parent, void (*callback)(void *, QList< QUrl > const *), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, QList< QUrl > const *), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(QList< QUrl > const & arg0) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), &arg0);
        }
    }

private:
    ritual::Callback<void (*)(void *, QList< QUrl > const *)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref() { }

Q_SIGNALS:
    void emit_(QList< QUrl > const & arg0);
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_slot_wrapper.h".
class ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int(QObject* parent, void (*callback)(void *, int, int, int, int), void (*deleter)(void*), void* data)
    : QObject(parent)
    {
        set(callback, deleter, data);
    }

    void set(void (*callback)(void *, int, int, int, int), void (*deleter)(void*), void* data) {
        m_callback.set(callback, deleter, data);
    }

public Q_SLOTS:
    void slot_(int arg0, int arg1, int arg2, int arg3) {
        auto callback = m_callback.get();
        if (callback) {
            callback(m_callback.data(), arg0, arg1, arg2, arg3);
        }
    }

private:
    ritual::Callback<void (*)(void *, int, int, int, int)> m_callback;
};
// Class generated by ritual.
// See the template at "ritual/templates/c_lib/qt_signal_wrapper.h".
class ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int : public QObject {
    Q_OBJECT
public:
    ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int() { }

Q_SIGNALS:
    void emit_(int arg0, int arg1, int arg2, int arg3);
};
extern "C" {
RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSizePolicy_staticMetaObject() {
  return &QSizePolicy::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWidget_staticMetaObject() {
  return &QWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractButton_staticMetaObject() {
  return &QAbstractButton::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractSpinBox_staticMetaObject() {
  return &QAbstractSpinBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractSlider_staticMetaObject() {
  return &QAbstractSlider::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSlider_staticMetaObject() {
  return &QSlider::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStyle_staticMetaObject() {
  return &QStyle::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTabBar_staticMetaObject() {
  return &QTabBar::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTabWidget_staticMetaObject() {
  return &QTabWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QRubberBand_staticMetaObject() {
  return &QRubberBand::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFrame_staticMetaObject() {
  return &QFrame::staticMetaObject;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOption_version(QStyleOption const * this_ptr) {
  return this_ptr->version;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_version(QStyleOption * this_ptr, int value) {
  this_ptr->version = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOption_type(QStyleOption const * this_ptr) {
  return this_ptr->type;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_type(QStyleOption * this_ptr, int value) {
  this_ptr->type = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOption_state(QStyleOption const * this_ptr) {
  return int(this_ptr->state);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_state(QStyleOption * this_ptr, int value) {
  this_ptr->state = QFlags< QStyle::StateFlag >(value);
}


RITUAL_EXPORT Qt::LayoutDirection ctr_qt_widgets_ffi_QStyleOption_direction(QStyleOption const * this_ptr) {
  return this_ptr->direction;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_direction(QStyleOption * this_ptr, Qt::LayoutDirection value) {
  this_ptr->direction = value;
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QStyleOption_rect(QStyleOption const * this_ptr) {
  return &this_ptr->rect;
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyleOption_rect_mut(QStyleOption * this_ptr) {
  return &this_ptr->rect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_rect(QStyleOption * this_ptr, QRect const * value) {
  this_ptr->rect = *value;
}


RITUAL_EXPORT QFontMetrics const * ctr_qt_widgets_ffi_QStyleOption_fontMetrics(QStyleOption const * this_ptr) {
  return &this_ptr->fontMetrics;
}


RITUAL_EXPORT QFontMetrics * ctr_qt_widgets_ffi_QStyleOption_fontMetrics_mut(QStyleOption * this_ptr) {
  return &this_ptr->fontMetrics;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_fontMetrics(QStyleOption * this_ptr, QFontMetrics const * value) {
  this_ptr->fontMetrics = *value;
}


RITUAL_EXPORT QPalette const * ctr_qt_widgets_ffi_QStyleOption_palette(QStyleOption const * this_ptr) {
  return &this_ptr->palette;
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QStyleOption_palette_mut(QStyleOption * this_ptr) {
  return &this_ptr->palette;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_palette(QStyleOption * this_ptr, QPalette const * value) {
  this_ptr->palette = *value;
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_QStyleOption_styleObject(QStyleOption const * this_ptr) {
  return this_ptr->styleObject;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOption_styleObject(QStyleOption * this_ptr, QObject * value) {
  this_ptr->styleObject = value;
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QStyleOptionFocusRect_backgroundColor(QStyleOptionFocusRect const * this_ptr) {
  return &this_ptr->backgroundColor;
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QStyleOptionFocusRect_backgroundColor_mut(QStyleOptionFocusRect * this_ptr) {
  return &this_ptr->backgroundColor;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionFocusRect_backgroundColor(QStyleOptionFocusRect * this_ptr, QColor const * value) {
  this_ptr->backgroundColor = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionFrame_lineWidth(QStyleOptionFrame const * this_ptr) {
  return this_ptr->lineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionFrame_lineWidth(QStyleOptionFrame * this_ptr, int value) {
  this_ptr->lineWidth = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionFrame_midLineWidth(QStyleOptionFrame const * this_ptr) {
  return this_ptr->midLineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionFrame_midLineWidth(QStyleOptionFrame * this_ptr, int value) {
  this_ptr->midLineWidth = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionFrame_features(QStyleOptionFrame const * this_ptr) {
  return int(this_ptr->features);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionFrame_features(QStyleOptionFrame * this_ptr, int value) {
  this_ptr->features = QFlags< QStyleOptionFrame::FrameFeature >(value);
}


RITUAL_EXPORT QFrame::Shape ctr_qt_widgets_ffi_QStyleOptionFrame_frameShape(QStyleOptionFrame const * this_ptr) {
  return this_ptr->frameShape;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionFrame_frameShape(QStyleOptionFrame * this_ptr, QFrame::Shape value) {
  this_ptr->frameShape = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_lineWidth(QStyleOptionTabWidgetFrame const * this_ptr) {
  return this_ptr->lineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_lineWidth(QStyleOptionTabWidgetFrame * this_ptr, int value) {
  this_ptr->lineWidth = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_midLineWidth(QStyleOptionTabWidgetFrame const * this_ptr) {
  return this_ptr->midLineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_midLineWidth(QStyleOptionTabWidgetFrame * this_ptr, int value) {
  this_ptr->midLineWidth = value;
}


RITUAL_EXPORT QTabBar::Shape ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_shape(QStyleOptionTabWidgetFrame const * this_ptr) {
  return this_ptr->shape;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_shape(QStyleOptionTabWidgetFrame * this_ptr, QTabBar::Shape value) {
  this_ptr->shape = value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_tabBarSize(QStyleOptionTabWidgetFrame const * this_ptr) {
  return &this_ptr->tabBarSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_tabBarSize_mut(QStyleOptionTabWidgetFrame * this_ptr) {
  return &this_ptr->tabBarSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_tabBarSize(QStyleOptionTabWidgetFrame * this_ptr, QSize const * value) {
  this_ptr->tabBarSize = *value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_rightCornerWidgetSize(QStyleOptionTabWidgetFrame const * this_ptr) {
  return &this_ptr->rightCornerWidgetSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_rightCornerWidgetSize_mut(QStyleOptionTabWidgetFrame * this_ptr) {
  return &this_ptr->rightCornerWidgetSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_rightCornerWidgetSize(QStyleOptionTabWidgetFrame * this_ptr, QSize const * value) {
  this_ptr->rightCornerWidgetSize = *value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_leftCornerWidgetSize(QStyleOptionTabWidgetFrame const * this_ptr) {
  return &this_ptr->leftCornerWidgetSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_leftCornerWidgetSize_mut(QStyleOptionTabWidgetFrame * this_ptr) {
  return &this_ptr->leftCornerWidgetSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_leftCornerWidgetSize(QStyleOptionTabWidgetFrame * this_ptr, QSize const * value) {
  this_ptr->leftCornerWidgetSize = *value;
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_tabBarRect(QStyleOptionTabWidgetFrame const * this_ptr) {
  return &this_ptr->tabBarRect;
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_tabBarRect_mut(QStyleOptionTabWidgetFrame * this_ptr) {
  return &this_ptr->tabBarRect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_tabBarRect(QStyleOptionTabWidgetFrame * this_ptr, QRect const * value) {
  this_ptr->tabBarRect = *value;
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_selectedTabRect(QStyleOptionTabWidgetFrame const * this_ptr) {
  return &this_ptr->selectedTabRect;
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_selectedTabRect_mut(QStyleOptionTabWidgetFrame * this_ptr) {
  return &this_ptr->selectedTabRect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabWidgetFrame_selectedTabRect(QStyleOptionTabWidgetFrame * this_ptr, QRect const * value) {
  this_ptr->selectedTabRect = *value;
}


RITUAL_EXPORT QTabBar::Shape ctr_qt_widgets_ffi_QStyleOptionTabBarBase_shape(QStyleOptionTabBarBase const * this_ptr) {
  return this_ptr->shape;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabBarBase_shape(QStyleOptionTabBarBase * this_ptr, QTabBar::Shape value) {
  this_ptr->shape = value;
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QStyleOptionTabBarBase_tabBarRect(QStyleOptionTabBarBase const * this_ptr) {
  return &this_ptr->tabBarRect;
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyleOptionTabBarBase_tabBarRect_mut(QStyleOptionTabBarBase * this_ptr) {
  return &this_ptr->tabBarRect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabBarBase_tabBarRect(QStyleOptionTabBarBase * this_ptr, QRect const * value) {
  this_ptr->tabBarRect = *value;
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QStyleOptionTabBarBase_selectedTabRect(QStyleOptionTabBarBase const * this_ptr) {
  return &this_ptr->selectedTabRect;
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyleOptionTabBarBase_selectedTabRect_mut(QStyleOptionTabBarBase * this_ptr) {
  return &this_ptr->selectedTabRect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabBarBase_selectedTabRect(QStyleOptionTabBarBase * this_ptr, QRect const * value) {
  this_ptr->selectedTabRect = *value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionTabBarBase_documentMode(QStyleOptionTabBarBase const * this_ptr) {
  return this_ptr->documentMode;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabBarBase_documentMode(QStyleOptionTabBarBase * this_ptr, bool value) {
  this_ptr->documentMode = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionHeader_section(QStyleOptionHeader const * this_ptr) {
  return this_ptr->section;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_section(QStyleOptionHeader * this_ptr, int value) {
  this_ptr->section = value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionHeader_text(QStyleOptionHeader const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionHeader_text_mut(QStyleOptionHeader * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_text(QStyleOptionHeader * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionHeader_textAlignment(QStyleOptionHeader const * this_ptr) {
  return int(this_ptr->textAlignment);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_textAlignment(QStyleOptionHeader * this_ptr, int value) {
  this_ptr->textAlignment = QFlags< Qt::AlignmentFlag >(value);
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionHeader_icon(QStyleOptionHeader const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionHeader_icon_mut(QStyleOptionHeader * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_icon(QStyleOptionHeader * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionHeader_iconAlignment(QStyleOptionHeader const * this_ptr) {
  return int(this_ptr->iconAlignment);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_iconAlignment(QStyleOptionHeader * this_ptr, int value) {
  this_ptr->iconAlignment = QFlags< Qt::AlignmentFlag >(value);
}


RITUAL_EXPORT QStyleOptionHeader::SectionPosition ctr_qt_widgets_ffi_QStyleOptionHeader_position(QStyleOptionHeader const * this_ptr) {
  return this_ptr->position;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_position(QStyleOptionHeader * this_ptr, QStyleOptionHeader::SectionPosition value) {
  this_ptr->position = value;
}


RITUAL_EXPORT QStyleOptionHeader::SelectedPosition ctr_qt_widgets_ffi_QStyleOptionHeader_selectedPosition(QStyleOptionHeader const * this_ptr) {
  return this_ptr->selectedPosition;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_selectedPosition(QStyleOptionHeader * this_ptr, QStyleOptionHeader::SelectedPosition value) {
  this_ptr->selectedPosition = value;
}


RITUAL_EXPORT QStyleOptionHeader::SortIndicator ctr_qt_widgets_ffi_QStyleOptionHeader_sortIndicator(QStyleOptionHeader const * this_ptr) {
  return this_ptr->sortIndicator;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_sortIndicator(QStyleOptionHeader * this_ptr, QStyleOptionHeader::SortIndicator value) {
  this_ptr->sortIndicator = value;
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QStyleOptionHeader_orientation(QStyleOptionHeader const * this_ptr) {
  return this_ptr->orientation;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionHeader_orientation(QStyleOptionHeader * this_ptr, Qt::Orientation value) {
  this_ptr->orientation = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionButton_features(QStyleOptionButton const * this_ptr) {
  return int(this_ptr->features);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionButton_features(QStyleOptionButton * this_ptr, int value) {
  this_ptr->features = QFlags< QStyleOptionButton::ButtonFeature >(value);
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionButton_text(QStyleOptionButton const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionButton_text_mut(QStyleOptionButton * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionButton_text(QStyleOptionButton * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionButton_icon(QStyleOptionButton const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionButton_icon_mut(QStyleOptionButton * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionButton_icon(QStyleOptionButton * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionButton_iconSize(QStyleOptionButton const * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionButton_iconSize_mut(QStyleOptionButton * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionButton_iconSize(QStyleOptionButton * this_ptr, QSize const * value) {
  this_ptr->iconSize = *value;
}


RITUAL_EXPORT QTabBar::Shape ctr_qt_widgets_ffi_QStyleOptionTab_shape(QStyleOptionTab const * this_ptr) {
  return this_ptr->shape;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_shape(QStyleOptionTab * this_ptr, QTabBar::Shape value) {
  this_ptr->shape = value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionTab_text(QStyleOptionTab const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionTab_text_mut(QStyleOptionTab * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_text(QStyleOptionTab * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionTab_icon(QStyleOptionTab const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionTab_icon_mut(QStyleOptionTab * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_icon(QStyleOptionTab * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTab_row(QStyleOptionTab const * this_ptr) {
  return this_ptr->row;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_row(QStyleOptionTab * this_ptr, int value) {
  this_ptr->row = value;
}


RITUAL_EXPORT QStyleOptionTab::TabPosition ctr_qt_widgets_ffi_QStyleOptionTab_position(QStyleOptionTab const * this_ptr) {
  return this_ptr->position;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_position(QStyleOptionTab * this_ptr, QStyleOptionTab::TabPosition value) {
  this_ptr->position = value;
}


RITUAL_EXPORT QStyleOptionTab::SelectedPosition ctr_qt_widgets_ffi_QStyleOptionTab_selectedPosition(QStyleOptionTab const * this_ptr) {
  return this_ptr->selectedPosition;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_selectedPosition(QStyleOptionTab * this_ptr, QStyleOptionTab::SelectedPosition value) {
  this_ptr->selectedPosition = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTab_cornerWidgets(QStyleOptionTab const * this_ptr) {
  return int(this_ptr->cornerWidgets);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_cornerWidgets(QStyleOptionTab * this_ptr, int value) {
  this_ptr->cornerWidgets = QFlags< QStyleOptionTab::CornerWidget >(value);
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionTab_iconSize(QStyleOptionTab const * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionTab_iconSize_mut(QStyleOptionTab * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_iconSize(QStyleOptionTab * this_ptr, QSize const * value) {
  this_ptr->iconSize = *value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionTab_documentMode(QStyleOptionTab const * this_ptr) {
  return this_ptr->documentMode;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_documentMode(QStyleOptionTab * this_ptr, bool value) {
  this_ptr->documentMode = value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionTab_leftButtonSize(QStyleOptionTab const * this_ptr) {
  return &this_ptr->leftButtonSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionTab_leftButtonSize_mut(QStyleOptionTab * this_ptr) {
  return &this_ptr->leftButtonSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_leftButtonSize(QStyleOptionTab * this_ptr, QSize const * value) {
  this_ptr->leftButtonSize = *value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionTab_rightButtonSize(QStyleOptionTab const * this_ptr) {
  return &this_ptr->rightButtonSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionTab_rightButtonSize_mut(QStyleOptionTab * this_ptr) {
  return &this_ptr->rightButtonSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_rightButtonSize(QStyleOptionTab * this_ptr, QSize const * value) {
  this_ptr->rightButtonSize = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTab_features(QStyleOptionTab const * this_ptr) {
  return int(this_ptr->features);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTab_features(QStyleOptionTab * this_ptr, int value) {
  this_ptr->features = QFlags< QStyleOptionTab::TabFeature >(value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTabV4_tabIndex(QStyleOptionTabV4 const * this_ptr) {
  return this_ptr->tabIndex;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTabV4_tabIndex(QStyleOptionTabV4 * this_ptr, int value) {
  this_ptr->tabIndex = value;
}


RITUAL_EXPORT QStyleOptionToolBar::ToolBarPosition ctr_qt_widgets_ffi_QStyleOptionToolBar_positionOfLine(QStyleOptionToolBar const * this_ptr) {
  return this_ptr->positionOfLine;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBar_positionOfLine(QStyleOptionToolBar * this_ptr, QStyleOptionToolBar::ToolBarPosition value) {
  this_ptr->positionOfLine = value;
}


RITUAL_EXPORT QStyleOptionToolBar::ToolBarPosition ctr_qt_widgets_ffi_QStyleOptionToolBar_positionWithinLine(QStyleOptionToolBar const * this_ptr) {
  return this_ptr->positionWithinLine;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBar_positionWithinLine(QStyleOptionToolBar * this_ptr, QStyleOptionToolBar::ToolBarPosition value) {
  this_ptr->positionWithinLine = value;
}


RITUAL_EXPORT Qt::ToolBarArea ctr_qt_widgets_ffi_QStyleOptionToolBar_toolBarArea(QStyleOptionToolBar const * this_ptr) {
  return this_ptr->toolBarArea;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBar_toolBarArea(QStyleOptionToolBar * this_ptr, Qt::ToolBarArea value) {
  this_ptr->toolBarArea = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionToolBar_features(QStyleOptionToolBar const * this_ptr) {
  return int(this_ptr->features);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBar_features(QStyleOptionToolBar * this_ptr, int value) {
  this_ptr->features = QFlags< QStyleOptionToolBar::ToolBarFeature >(value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionToolBar_lineWidth(QStyleOptionToolBar const * this_ptr) {
  return this_ptr->lineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBar_lineWidth(QStyleOptionToolBar * this_ptr, int value) {
  this_ptr->lineWidth = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionToolBar_midLineWidth(QStyleOptionToolBar const * this_ptr) {
  return this_ptr->midLineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBar_midLineWidth(QStyleOptionToolBar * this_ptr, int value) {
  this_ptr->midLineWidth = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionProgressBar_minimum(QStyleOptionProgressBar const * this_ptr) {
  return this_ptr->minimum;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_minimum(QStyleOptionProgressBar * this_ptr, int value) {
  this_ptr->minimum = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionProgressBar_maximum(QStyleOptionProgressBar const * this_ptr) {
  return this_ptr->maximum;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_maximum(QStyleOptionProgressBar * this_ptr, int value) {
  this_ptr->maximum = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionProgressBar_progress(QStyleOptionProgressBar const * this_ptr) {
  return this_ptr->progress;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_progress(QStyleOptionProgressBar * this_ptr, int value) {
  this_ptr->progress = value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionProgressBar_text(QStyleOptionProgressBar const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionProgressBar_text_mut(QStyleOptionProgressBar * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_text(QStyleOptionProgressBar * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionProgressBar_textAlignment(QStyleOptionProgressBar const * this_ptr) {
  return int(this_ptr->textAlignment);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_textAlignment(QStyleOptionProgressBar * this_ptr, int value) {
  this_ptr->textAlignment = QFlags< Qt::AlignmentFlag >(value);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionProgressBar_textVisible(QStyleOptionProgressBar const * this_ptr) {
  return this_ptr->textVisible;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_textVisible(QStyleOptionProgressBar * this_ptr, bool value) {
  this_ptr->textVisible = value;
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QStyleOptionProgressBar_orientation(QStyleOptionProgressBar const * this_ptr) {
  return this_ptr->orientation;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_orientation(QStyleOptionProgressBar * this_ptr, Qt::Orientation value) {
  this_ptr->orientation = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionProgressBar_invertedAppearance(QStyleOptionProgressBar const * this_ptr) {
  return this_ptr->invertedAppearance;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_invertedAppearance(QStyleOptionProgressBar * this_ptr, bool value) {
  this_ptr->invertedAppearance = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionProgressBar_bottomToTop(QStyleOptionProgressBar const * this_ptr) {
  return this_ptr->bottomToTop;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionProgressBar_bottomToTop(QStyleOptionProgressBar * this_ptr, bool value) {
  this_ptr->bottomToTop = value;
}


RITUAL_EXPORT QStyleOptionMenuItem::MenuItemType ctr_qt_widgets_ffi_QStyleOptionMenuItem_menuItemType(QStyleOptionMenuItem const * this_ptr) {
  return this_ptr->menuItemType;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_menuItemType(QStyleOptionMenuItem * this_ptr, QStyleOptionMenuItem::MenuItemType value) {
  this_ptr->menuItemType = value;
}


RITUAL_EXPORT QStyleOptionMenuItem::CheckType ctr_qt_widgets_ffi_QStyleOptionMenuItem_checkType(QStyleOptionMenuItem const * this_ptr) {
  return this_ptr->checkType;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_checkType(QStyleOptionMenuItem * this_ptr, QStyleOptionMenuItem::CheckType value) {
  this_ptr->checkType = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionMenuItem_checked(QStyleOptionMenuItem const * this_ptr) {
  return this_ptr->checked;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_checked(QStyleOptionMenuItem * this_ptr, bool value) {
  this_ptr->checked = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionMenuItem_menuHasCheckableItems(QStyleOptionMenuItem const * this_ptr) {
  return this_ptr->menuHasCheckableItems;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_menuHasCheckableItems(QStyleOptionMenuItem * this_ptr, bool value) {
  this_ptr->menuHasCheckableItems = value;
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QStyleOptionMenuItem_menuRect(QStyleOptionMenuItem const * this_ptr) {
  return &this_ptr->menuRect;
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyleOptionMenuItem_menuRect_mut(QStyleOptionMenuItem * this_ptr) {
  return &this_ptr->menuRect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_menuRect(QStyleOptionMenuItem * this_ptr, QRect const * value) {
  this_ptr->menuRect = *value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionMenuItem_text(QStyleOptionMenuItem const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionMenuItem_text_mut(QStyleOptionMenuItem * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_text(QStyleOptionMenuItem * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionMenuItem_icon(QStyleOptionMenuItem const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionMenuItem_icon_mut(QStyleOptionMenuItem * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_icon(QStyleOptionMenuItem * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionMenuItem_maxIconWidth(QStyleOptionMenuItem const * this_ptr) {
  return this_ptr->maxIconWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_maxIconWidth(QStyleOptionMenuItem * this_ptr, int value) {
  this_ptr->maxIconWidth = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionMenuItem_tabWidth(QStyleOptionMenuItem const * this_ptr) {
  return this_ptr->tabWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_tabWidth(QStyleOptionMenuItem * this_ptr, int value) {
  this_ptr->tabWidth = value;
}


RITUAL_EXPORT QFont const * ctr_qt_widgets_ffi_QStyleOptionMenuItem_font(QStyleOptionMenuItem const * this_ptr) {
  return &this_ptr->font;
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QStyleOptionMenuItem_font_mut(QStyleOptionMenuItem * this_ptr) {
  return &this_ptr->font;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionMenuItem_font(QStyleOptionMenuItem * this_ptr, QFont const * value) {
  this_ptr->font = *value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionDockWidget_title(QStyleOptionDockWidget const * this_ptr) {
  return &this_ptr->title;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionDockWidget_title_mut(QStyleOptionDockWidget * this_ptr) {
  return &this_ptr->title;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionDockWidget_title(QStyleOptionDockWidget * this_ptr, QString const * value) {
  this_ptr->title = *value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionDockWidget_closable(QStyleOptionDockWidget const * this_ptr) {
  return this_ptr->closable;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionDockWidget_closable(QStyleOptionDockWidget * this_ptr, bool value) {
  this_ptr->closable = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionDockWidget_movable(QStyleOptionDockWidget const * this_ptr) {
  return this_ptr->movable;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionDockWidget_movable(QStyleOptionDockWidget * this_ptr, bool value) {
  this_ptr->movable = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionDockWidget_floatable(QStyleOptionDockWidget const * this_ptr) {
  return this_ptr->floatable;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionDockWidget_floatable(QStyleOptionDockWidget * this_ptr, bool value) {
  this_ptr->floatable = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionDockWidget_verticalTitleBar(QStyleOptionDockWidget const * this_ptr) {
  return this_ptr->verticalTitleBar;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionDockWidget_verticalTitleBar(QStyleOptionDockWidget * this_ptr, bool value) {
  this_ptr->verticalTitleBar = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionViewItem_displayAlignment(QStyleOptionViewItem const * this_ptr) {
  return int(this_ptr->displayAlignment);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_displayAlignment(QStyleOptionViewItem * this_ptr, int value) {
  this_ptr->displayAlignment = QFlags< Qt::AlignmentFlag >(value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionViewItem_decorationAlignment(QStyleOptionViewItem const * this_ptr) {
  return int(this_ptr->decorationAlignment);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_decorationAlignment(QStyleOptionViewItem * this_ptr, int value) {
  this_ptr->decorationAlignment = QFlags< Qt::AlignmentFlag >(value);
}


RITUAL_EXPORT Qt::TextElideMode ctr_qt_widgets_ffi_QStyleOptionViewItem_textElideMode(QStyleOptionViewItem const * this_ptr) {
  return this_ptr->textElideMode;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_textElideMode(QStyleOptionViewItem * this_ptr, Qt::TextElideMode value) {
  this_ptr->textElideMode = value;
}


RITUAL_EXPORT QStyleOptionViewItem::Position ctr_qt_widgets_ffi_QStyleOptionViewItem_decorationPosition(QStyleOptionViewItem const * this_ptr) {
  return this_ptr->decorationPosition;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_decorationPosition(QStyleOptionViewItem * this_ptr, QStyleOptionViewItem::Position value) {
  this_ptr->decorationPosition = value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionViewItem_decorationSize(QStyleOptionViewItem const * this_ptr) {
  return &this_ptr->decorationSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionViewItem_decorationSize_mut(QStyleOptionViewItem * this_ptr) {
  return &this_ptr->decorationSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_decorationSize(QStyleOptionViewItem * this_ptr, QSize const * value) {
  this_ptr->decorationSize = *value;
}


RITUAL_EXPORT QFont const * ctr_qt_widgets_ffi_QStyleOptionViewItem_font(QStyleOptionViewItem const * this_ptr) {
  return &this_ptr->font;
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QStyleOptionViewItem_font_mut(QStyleOptionViewItem * this_ptr) {
  return &this_ptr->font;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_font(QStyleOptionViewItem * this_ptr, QFont const * value) {
  this_ptr->font = *value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionViewItem_showDecorationSelected(QStyleOptionViewItem const * this_ptr) {
  return this_ptr->showDecorationSelected;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_showDecorationSelected(QStyleOptionViewItem * this_ptr, bool value) {
  this_ptr->showDecorationSelected = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionViewItem_features(QStyleOptionViewItem const * this_ptr) {
  return int(this_ptr->features);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_features(QStyleOptionViewItem * this_ptr, int value) {
  this_ptr->features = QFlags< QStyleOptionViewItem::ViewItemFeature >(value);
}


RITUAL_EXPORT QLocale const * ctr_qt_widgets_ffi_QStyleOptionViewItem_locale(QStyleOptionViewItem const * this_ptr) {
  return &this_ptr->locale;
}


RITUAL_EXPORT QLocale * ctr_qt_widgets_ffi_QStyleOptionViewItem_locale_mut(QStyleOptionViewItem * this_ptr) {
  return &this_ptr->locale;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_locale(QStyleOptionViewItem * this_ptr, QLocale const * value) {
  this_ptr->locale = *value;
}


RITUAL_EXPORT QWidget const * ctr_qt_widgets_ffi_QStyleOptionViewItem_widget(QStyleOptionViewItem const * this_ptr) {
  return this_ptr->widget;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_widget(QStyleOptionViewItem * this_ptr, QWidget const * value) {
  this_ptr->widget = value;
}


RITUAL_EXPORT QModelIndex const * ctr_qt_widgets_ffi_QStyleOptionViewItem_index(QStyleOptionViewItem const * this_ptr) {
  return &this_ptr->index;
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QStyleOptionViewItem_index_mut(QStyleOptionViewItem * this_ptr) {
  return &this_ptr->index;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_index(QStyleOptionViewItem * this_ptr, QModelIndex const * value) {
  this_ptr->index = *value;
}


RITUAL_EXPORT Qt::CheckState ctr_qt_widgets_ffi_QStyleOptionViewItem_checkState(QStyleOptionViewItem const * this_ptr) {
  return this_ptr->checkState;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_checkState(QStyleOptionViewItem * this_ptr, Qt::CheckState value) {
  this_ptr->checkState = value;
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionViewItem_icon(QStyleOptionViewItem const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionViewItem_icon_mut(QStyleOptionViewItem * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_icon(QStyleOptionViewItem * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionViewItem_text(QStyleOptionViewItem const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionViewItem_text_mut(QStyleOptionViewItem * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_text(QStyleOptionViewItem * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT QStyleOptionViewItem::ViewItemPosition ctr_qt_widgets_ffi_QStyleOptionViewItem_viewItemPosition(QStyleOptionViewItem const * this_ptr) {
  return this_ptr->viewItemPosition;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_viewItemPosition(QStyleOptionViewItem * this_ptr, QStyleOptionViewItem::ViewItemPosition value) {
  this_ptr->viewItemPosition = value;
}


RITUAL_EXPORT QBrush const * ctr_qt_widgets_ffi_QStyleOptionViewItem_backgroundBrush(QStyleOptionViewItem const * this_ptr) {
  return &this_ptr->backgroundBrush;
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QStyleOptionViewItem_backgroundBrush_mut(QStyleOptionViewItem * this_ptr) {
  return &this_ptr->backgroundBrush;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionViewItem_backgroundBrush(QStyleOptionViewItem * this_ptr, QBrush const * value) {
  this_ptr->backgroundBrush = *value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionToolBox_text(QStyleOptionToolBox const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionToolBox_text_mut(QStyleOptionToolBox * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBox_text(QStyleOptionToolBox * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionToolBox_icon(QStyleOptionToolBox const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionToolBox_icon_mut(QStyleOptionToolBox * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBox_icon(QStyleOptionToolBox * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT QStyleOptionToolBox::TabPosition ctr_qt_widgets_ffi_QStyleOptionToolBox_position(QStyleOptionToolBox const * this_ptr) {
  return this_ptr->position;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBox_position(QStyleOptionToolBox * this_ptr, QStyleOptionToolBox::TabPosition value) {
  this_ptr->position = value;
}


RITUAL_EXPORT QStyleOptionToolBox::SelectedPosition ctr_qt_widgets_ffi_QStyleOptionToolBox_selectedPosition(QStyleOptionToolBox const * this_ptr) {
  return this_ptr->selectedPosition;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolBox_selectedPosition(QStyleOptionToolBox * this_ptr, QStyleOptionToolBox::SelectedPosition value) {
  this_ptr->selectedPosition = value;
}


RITUAL_EXPORT QRubberBand::Shape ctr_qt_widgets_ffi_QStyleOptionRubberBand_shape(QStyleOptionRubberBand const * this_ptr) {
  return this_ptr->shape;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionRubberBand_shape(QStyleOptionRubberBand * this_ptr, QRubberBand::Shape value) {
  this_ptr->shape = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionRubberBand_opaque(QStyleOptionRubberBand const * this_ptr) {
  return this_ptr->opaque;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionRubberBand_opaque(QStyleOptionRubberBand * this_ptr, bool value) {
  this_ptr->opaque = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionComplex_subControls(QStyleOptionComplex const * this_ptr) {
  return int(this_ptr->subControls);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComplex_subControls(QStyleOptionComplex * this_ptr, int value) {
  this_ptr->subControls = QFlags< QStyle::SubControl >(value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionComplex_activeSubControls(QStyleOptionComplex const * this_ptr) {
  return int(this_ptr->activeSubControls);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComplex_activeSubControls(QStyleOptionComplex * this_ptr, int value) {
  this_ptr->activeSubControls = QFlags< QStyle::SubControl >(value);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QStyleOptionSlider_orientation(QStyleOptionSlider const * this_ptr) {
  return this_ptr->orientation;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_orientation(QStyleOptionSlider * this_ptr, Qt::Orientation value) {
  this_ptr->orientation = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSlider_minimum(QStyleOptionSlider const * this_ptr) {
  return this_ptr->minimum;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_minimum(QStyleOptionSlider * this_ptr, int value) {
  this_ptr->minimum = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSlider_maximum(QStyleOptionSlider const * this_ptr) {
  return this_ptr->maximum;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_maximum(QStyleOptionSlider * this_ptr, int value) {
  this_ptr->maximum = value;
}


RITUAL_EXPORT QSlider::TickPosition ctr_qt_widgets_ffi_QStyleOptionSlider_tickPosition(QStyleOptionSlider const * this_ptr) {
  return this_ptr->tickPosition;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_tickPosition(QStyleOptionSlider * this_ptr, QSlider::TickPosition value) {
  this_ptr->tickPosition = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSlider_tickInterval(QStyleOptionSlider const * this_ptr) {
  return this_ptr->tickInterval;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_tickInterval(QStyleOptionSlider * this_ptr, int value) {
  this_ptr->tickInterval = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionSlider_upsideDown(QStyleOptionSlider const * this_ptr) {
  return this_ptr->upsideDown;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_upsideDown(QStyleOptionSlider * this_ptr, bool value) {
  this_ptr->upsideDown = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSlider_sliderPosition(QStyleOptionSlider const * this_ptr) {
  return this_ptr->sliderPosition;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_sliderPosition(QStyleOptionSlider * this_ptr, int value) {
  this_ptr->sliderPosition = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSlider_sliderValue(QStyleOptionSlider const * this_ptr) {
  return this_ptr->sliderValue;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_sliderValue(QStyleOptionSlider * this_ptr, int value) {
  this_ptr->sliderValue = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSlider_singleStep(QStyleOptionSlider const * this_ptr) {
  return this_ptr->singleStep;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_singleStep(QStyleOptionSlider * this_ptr, int value) {
  this_ptr->singleStep = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSlider_pageStep(QStyleOptionSlider const * this_ptr) {
  return this_ptr->pageStep;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_pageStep(QStyleOptionSlider * this_ptr, int value) {
  this_ptr->pageStep = value;
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QStyleOptionSlider_notchTarget(QStyleOptionSlider const * this_ptr) {
  return this_ptr->notchTarget;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_notchTarget(QStyleOptionSlider * this_ptr, double value) {
  this_ptr->notchTarget = value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionSlider_dialWrapping(QStyleOptionSlider const * this_ptr) {
  return this_ptr->dialWrapping;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSlider_dialWrapping(QStyleOptionSlider * this_ptr, bool value) {
  this_ptr->dialWrapping = value;
}


RITUAL_EXPORT QAbstractSpinBox::ButtonSymbols ctr_qt_widgets_ffi_QStyleOptionSpinBox_buttonSymbols(QStyleOptionSpinBox const * this_ptr) {
  return this_ptr->buttonSymbols;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSpinBox_buttonSymbols(QStyleOptionSpinBox * this_ptr, QAbstractSpinBox::ButtonSymbols value) {
  this_ptr->buttonSymbols = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionSpinBox_stepEnabled(QStyleOptionSpinBox const * this_ptr) {
  return int(this_ptr->stepEnabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSpinBox_stepEnabled(QStyleOptionSpinBox * this_ptr, int value) {
  this_ptr->stepEnabled = QFlags< QAbstractSpinBox::StepEnabledFlag >(value);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionSpinBox_frame(QStyleOptionSpinBox const * this_ptr) {
  return this_ptr->frame;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSpinBox_frame(QStyleOptionSpinBox * this_ptr, bool value) {
  this_ptr->frame = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionToolButton_features(QStyleOptionToolButton const * this_ptr) {
  return int(this_ptr->features);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_features(QStyleOptionToolButton * this_ptr, int value) {
  this_ptr->features = QFlags< QStyleOptionToolButton::ToolButtonFeature >(value);
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionToolButton_icon(QStyleOptionToolButton const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionToolButton_icon_mut(QStyleOptionToolButton * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_icon(QStyleOptionToolButton * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionToolButton_iconSize(QStyleOptionToolButton const * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionToolButton_iconSize_mut(QStyleOptionToolButton * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_iconSize(QStyleOptionToolButton * this_ptr, QSize const * value) {
  this_ptr->iconSize = *value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionToolButton_text(QStyleOptionToolButton const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionToolButton_text_mut(QStyleOptionToolButton * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_text(QStyleOptionToolButton * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT Qt::ArrowType ctr_qt_widgets_ffi_QStyleOptionToolButton_arrowType(QStyleOptionToolButton const * this_ptr) {
  return this_ptr->arrowType;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_arrowType(QStyleOptionToolButton * this_ptr, Qt::ArrowType value) {
  this_ptr->arrowType = value;
}


RITUAL_EXPORT Qt::ToolButtonStyle ctr_qt_widgets_ffi_QStyleOptionToolButton_toolButtonStyle(QStyleOptionToolButton const * this_ptr) {
  return this_ptr->toolButtonStyle;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_toolButtonStyle(QStyleOptionToolButton * this_ptr, Qt::ToolButtonStyle value) {
  this_ptr->toolButtonStyle = value;
}


RITUAL_EXPORT QPoint const * ctr_qt_widgets_ffi_QStyleOptionToolButton_pos(QStyleOptionToolButton const * this_ptr) {
  return &this_ptr->pos;
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QStyleOptionToolButton_pos_mut(QStyleOptionToolButton * this_ptr) {
  return &this_ptr->pos;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_pos(QStyleOptionToolButton * this_ptr, QPoint const * value) {
  this_ptr->pos = *value;
}


RITUAL_EXPORT QFont const * ctr_qt_widgets_ffi_QStyleOptionToolButton_font(QStyleOptionToolButton const * this_ptr) {
  return &this_ptr->font;
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QStyleOptionToolButton_font_mut(QStyleOptionToolButton * this_ptr) {
  return &this_ptr->font;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionToolButton_font(QStyleOptionToolButton * this_ptr, QFont const * value) {
  this_ptr->font = *value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionComboBox_editable(QStyleOptionComboBox const * this_ptr) {
  return this_ptr->editable;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComboBox_editable(QStyleOptionComboBox * this_ptr, bool value) {
  this_ptr->editable = value;
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QStyleOptionComboBox_popupRect(QStyleOptionComboBox const * this_ptr) {
  return &this_ptr->popupRect;
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyleOptionComboBox_popupRect_mut(QStyleOptionComboBox * this_ptr) {
  return &this_ptr->popupRect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComboBox_popupRect(QStyleOptionComboBox * this_ptr, QRect const * value) {
  this_ptr->popupRect = *value;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStyleOptionComboBox_frame(QStyleOptionComboBox const * this_ptr) {
  return this_ptr->frame;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComboBox_frame(QStyleOptionComboBox * this_ptr, bool value) {
  this_ptr->frame = value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionComboBox_currentText(QStyleOptionComboBox const * this_ptr) {
  return &this_ptr->currentText;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionComboBox_currentText_mut(QStyleOptionComboBox * this_ptr) {
  return &this_ptr->currentText;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComboBox_currentText(QStyleOptionComboBox * this_ptr, QString const * value) {
  this_ptr->currentText = *value;
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionComboBox_currentIcon(QStyleOptionComboBox const * this_ptr) {
  return &this_ptr->currentIcon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionComboBox_currentIcon_mut(QStyleOptionComboBox * this_ptr) {
  return &this_ptr->currentIcon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComboBox_currentIcon(QStyleOptionComboBox * this_ptr, QIcon const * value) {
  this_ptr->currentIcon = *value;
}


RITUAL_EXPORT QSize const * ctr_qt_widgets_ffi_QStyleOptionComboBox_iconSize(QStyleOptionComboBox const * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyleOptionComboBox_iconSize_mut(QStyleOptionComboBox * this_ptr) {
  return &this_ptr->iconSize;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionComboBox_iconSize(QStyleOptionComboBox * this_ptr, QSize const * value) {
  this_ptr->iconSize = *value;
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionTitleBar_text(QStyleOptionTitleBar const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionTitleBar_text_mut(QStyleOptionTitleBar * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTitleBar_text(QStyleOptionTitleBar * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT QIcon const * ctr_qt_widgets_ffi_QStyleOptionTitleBar_icon(QStyleOptionTitleBar const * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyleOptionTitleBar_icon_mut(QStyleOptionTitleBar * this_ptr) {
  return &this_ptr->icon;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTitleBar_icon(QStyleOptionTitleBar * this_ptr, QIcon const * value) {
  this_ptr->icon = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTitleBar_titleBarState(QStyleOptionTitleBar const * this_ptr) {
  return this_ptr->titleBarState;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTitleBar_titleBarState(QStyleOptionTitleBar * this_ptr, int value) {
  this_ptr->titleBarState = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionTitleBar_titleBarFlags(QStyleOptionTitleBar const * this_ptr) {
  return int(this_ptr->titleBarFlags);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionTitleBar_titleBarFlags(QStyleOptionTitleBar * this_ptr, int value) {
  this_ptr->titleBarFlags = QFlags< Qt::WindowType >(value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionGroupBox_features(QStyleOptionGroupBox const * this_ptr) {
  return int(this_ptr->features);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGroupBox_features(QStyleOptionGroupBox * this_ptr, int value) {
  this_ptr->features = QFlags< QStyleOptionFrame::FrameFeature >(value);
}


RITUAL_EXPORT QString const * ctr_qt_widgets_ffi_QStyleOptionGroupBox_text(QStyleOptionGroupBox const * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyleOptionGroupBox_text_mut(QStyleOptionGroupBox * this_ptr) {
  return &this_ptr->text;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGroupBox_text(QStyleOptionGroupBox * this_ptr, QString const * value) {
  this_ptr->text = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionGroupBox_textAlignment(QStyleOptionGroupBox const * this_ptr) {
  return int(this_ptr->textAlignment);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGroupBox_textAlignment(QStyleOptionGroupBox * this_ptr, int value) {
  this_ptr->textAlignment = QFlags< Qt::AlignmentFlag >(value);
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QStyleOptionGroupBox_textColor(QStyleOptionGroupBox const * this_ptr) {
  return &this_ptr->textColor;
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QStyleOptionGroupBox_textColor_mut(QStyleOptionGroupBox * this_ptr) {
  return &this_ptr->textColor;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGroupBox_textColor(QStyleOptionGroupBox * this_ptr, QColor const * value) {
  this_ptr->textColor = *value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionGroupBox_lineWidth(QStyleOptionGroupBox const * this_ptr) {
  return this_ptr->lineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGroupBox_lineWidth(QStyleOptionGroupBox * this_ptr, int value) {
  this_ptr->lineWidth = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleOptionGroupBox_midLineWidth(QStyleOptionGroupBox const * this_ptr) {
  return this_ptr->midLineWidth;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGroupBox_midLineWidth(QStyleOptionGroupBox * this_ptr, int value) {
  this_ptr->midLineWidth = value;
}


RITUAL_EXPORT Qt::Corner ctr_qt_widgets_ffi_QStyleOptionSizeGrip_corner(QStyleOptionSizeGrip const * this_ptr) {
  return this_ptr->corner;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionSizeGrip_corner(QStyleOptionSizeGrip * this_ptr, Qt::Corner value) {
  this_ptr->corner = value;
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_exposedRect(QStyleOptionGraphicsItem const * this_ptr) {
  return &this_ptr->exposedRect;
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_exposedRect_mut(QStyleOptionGraphicsItem * this_ptr) {
  return &this_ptr->exposedRect;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGraphicsItem_exposedRect(QStyleOptionGraphicsItem * this_ptr, QRectF const * value) {
  this_ptr->exposedRect = *value;
}


RITUAL_EXPORT QMatrix const * ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_matrix(QStyleOptionGraphicsItem const * this_ptr) {
  return &this_ptr->matrix;
}


RITUAL_EXPORT QMatrix * ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_matrix_mut(QStyleOptionGraphicsItem * this_ptr) {
  return &this_ptr->matrix;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGraphicsItem_matrix(QStyleOptionGraphicsItem * this_ptr, QMatrix const * value) {
  this_ptr->matrix = *value;
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_levelOfDetail(QStyleOptionGraphicsItem const * this_ptr) {
  return this_ptr->levelOfDetail;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleOptionGraphicsItem_levelOfDetail(QStyleOptionGraphicsItem * this_ptr, double value) {
  this_ptr->levelOfDetail = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleHintReturn_version(QStyleHintReturn const * this_ptr) {
  return this_ptr->version;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleHintReturn_version(QStyleHintReturn * this_ptr, int value) {
  this_ptr->version = value;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyleHintReturn_type(QStyleHintReturn const * this_ptr) {
  return this_ptr->type;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleHintReturn_type(QStyleHintReturn * this_ptr, int value) {
  this_ptr->type = value;
}


RITUAL_EXPORT QRegion const * ctr_qt_widgets_ffi_QStyleHintReturnMask_region(QStyleHintReturnMask const * this_ptr) {
  return &this_ptr->region;
}


RITUAL_EXPORT QRegion * ctr_qt_widgets_ffi_QStyleHintReturnMask_region_mut(QStyleHintReturnMask * this_ptr) {
  return &this_ptr->region;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleHintReturnMask_region(QStyleHintReturnMask * this_ptr, QRegion const * value) {
  this_ptr->region = *value;
}


RITUAL_EXPORT QVariant const * ctr_qt_widgets_ffi_QStyleHintReturnVariant_variant(QStyleHintReturnVariant const * this_ptr) {
  return &this_ptr->variant;
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QStyleHintReturnVariant_variant_mut(QStyleHintReturnVariant * this_ptr) {
  return &this_ptr->variant;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QStyleHintReturnVariant_variant(QStyleHintReturnVariant * this_ptr, QVariant const * value) {
  this_ptr->variant = *value;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractItemDelegate_staticMetaObject() {
  return &QAbstractItemDelegate::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractScrollArea_staticMetaObject() {
  return &QAbstractScrollArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractItemView_staticMetaObject() {
  return &QAbstractItemView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAction_staticMetaObject() {
  return &QAction::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QActionGroup_staticMetaObject() {
  return &QActionGroup::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QApplication_staticMetaObject() {
  return &QApplication::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLayout_staticMetaObject() {
  return &QLayout::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGridLayout_staticMetaObject() {
  return &QGridLayout::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QBoxLayout_staticMetaObject() {
  return &QBoxLayout::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QHBoxLayout_staticMetaObject() {
  return &QHBoxLayout::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QVBoxLayout_staticMetaObject() {
  return &QVBoxLayout::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QButtonGroup_staticMetaObject() {
  return &QButtonGroup::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCalendarWidget_staticMetaObject() {
  return &QCalendarWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCheckBox_staticMetaObject() {
  return &QCheckBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDialog_staticMetaObject() {
  return &QDialog::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QColorDialog_staticMetaObject() {
  return &QColorDialog::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QColumnView_staticMetaObject() {
  return &QColumnView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QComboBox_staticMetaObject() {
  return &QComboBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPushButton_staticMetaObject() {
  return &QPushButton::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCommandLinkButton_staticMetaObject() {
  return &QCommandLinkButton::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCommonStyle_staticMetaObject() {
  return &QCommonStyle::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCompleter_staticMetaObject() {
  return &QCompleter::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDataWidgetMapper_staticMetaObject() {
  return &QDataWidgetMapper::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDateTimeEdit_staticMetaObject() {
  return &QDateTimeEdit::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTimeEdit_staticMetaObject() {
  return &QTimeEdit::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDateEdit_staticMetaObject() {
  return &QDateEdit::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDesktopWidget_staticMetaObject() {
  return &QDesktopWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDial_staticMetaObject() {
  return &QDial::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDialogButtonBox_staticMetaObject() {
  return &QDialogButtonBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDirModel_staticMetaObject() {
  return &QDirModel::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDockWidget_staticMetaObject() {
  return &QDockWidget::staticMetaObject;
}


RITUAL_EXPORT Qt::TileRule ctr_qt_widgets_ffi_QTileRules_horizontal(QTileRules const * this_ptr) {
  return this_ptr->horizontal;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QTileRules_horizontal(QTileRules * this_ptr, Qt::TileRule value) {
  this_ptr->horizontal = value;
}


RITUAL_EXPORT Qt::TileRule ctr_qt_widgets_ffi_QTileRules_vertical(QTileRules const * this_ptr) {
  return this_ptr->vertical;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QTileRules_vertical(QTileRules * this_ptr, Qt::TileRule value) {
  this_ptr->vertical = value;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QErrorMessage_staticMetaObject() {
  return &QErrorMessage::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFileDialog_staticMetaObject() {
  return &QFileDialog::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFileSystemModel_staticMetaObject() {
  return &QFileSystemModel::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFocusFrame_staticMetaObject() {
  return &QFocusFrame::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFontComboBox_staticMetaObject() {
  return &QFontComboBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFontDialog_staticMetaObject() {
  return &QFontDialog::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFormLayout_staticMetaObject() {
  return &QFormLayout::staticMetaObject;
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QFormLayout_TakeRowResult_labelItem(QFormLayout::TakeRowResult const * this_ptr) {
  return this_ptr->labelItem;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QFormLayout_TakeRowResult_labelItem(QFormLayout::TakeRowResult * this_ptr, QLayoutItem * value) {
  this_ptr->labelItem = value;
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QFormLayout_TakeRowResult_fieldItem(QFormLayout::TakeRowResult const * this_ptr) {
  return this_ptr->fieldItem;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QFormLayout_TakeRowResult_fieldItem(QFormLayout::TakeRowResult * this_ptr, QLayoutItem * value) {
  this_ptr->fieldItem = value;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGesture_staticMetaObject() {
  return &QGesture::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPanGesture_staticMetaObject() {
  return &QPanGesture::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPinchGesture_staticMetaObject() {
  return &QPinchGesture::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSwipeGesture_staticMetaObject() {
  return &QSwipeGesture::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTapGesture_staticMetaObject() {
  return &QTapGesture::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTapAndHoldGesture_staticMetaObject() {
  return &QTapAndHoldGesture::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsObject_staticMetaObject() {
  return &QGraphicsObject::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsTextItem_staticMetaObject() {
  return &QGraphicsTextItem::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsAnchor_staticMetaObject() {
  return &QGraphicsAnchor::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsEffect_staticMetaObject() {
  return &QGraphicsEffect::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_staticMetaObject() {
  return &QGraphicsColorizeEffect::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsBlurEffect_staticMetaObject() {
  return &QGraphicsBlurEffect::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_staticMetaObject() {
  return &QGraphicsDropShadowEffect::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_staticMetaObject() {
  return &QGraphicsOpacityEffect::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsItemAnimation_staticMetaObject() {
  return &QGraphicsItemAnimation::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsWidget_staticMetaObject() {
  return &QGraphicsWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsProxyWidget_staticMetaObject() {
  return &QGraphicsProxyWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsScene_staticMetaObject() {
  return &QGraphicsScene::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsTransform_staticMetaObject() {
  return &QGraphicsTransform::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsScale_staticMetaObject() {
  return &QGraphicsScale::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsRotation_staticMetaObject() {
  return &QGraphicsRotation::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QScrollArea_staticMetaObject() {
  return &QScrollArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsView_staticMetaObject() {
  return &QGraphicsView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGroupBox_staticMetaObject() {
  return &QGroupBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QHeaderView_staticMetaObject() {
  return &QHeaderView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLineEdit_staticMetaObject() {
  return &QLineEdit::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QInputDialog_staticMetaObject() {
  return &QInputDialog::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QItemDelegate_staticMetaObject() {
  return &QItemDelegate::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QKeyEventTransition_staticMetaObject() {
  return &QKeyEventTransition::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QKeySequenceEdit_staticMetaObject() {
  return &QKeySequenceEdit::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLabel_staticMetaObject() {
  return &QLabel::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLCDNumber_staticMetaObject() {
  return &QLCDNumber::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QListView_staticMetaObject() {
  return &QListView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QListWidget_staticMetaObject() {
  return &QListWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMainWindow_staticMetaObject() {
  return &QMainWindow::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMdiArea_staticMetaObject() {
  return &QMdiArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMdiSubWindow_staticMetaObject() {
  return &QMdiSubWindow::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMenu_staticMetaObject() {
  return &QMenu::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMenuBar_staticMetaObject() {
  return &QMenuBar::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMessageBox_staticMetaObject() {
  return &QMessageBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMouseEventTransition_staticMetaObject() {
  return &QMouseEventTransition::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QOpenGLWidget_staticMetaObject() {
  return &QOpenGLWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTextEdit_staticMetaObject() {
  return &QTextEdit::staticMetaObject;
}


RITUAL_EXPORT QTextCursor const * ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_cursor(QTextEdit::ExtraSelection const * this_ptr) {
  return &this_ptr->cursor;
}


RITUAL_EXPORT QTextCursor * ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_cursor_mut(QTextEdit::ExtraSelection * this_ptr) {
  return &this_ptr->cursor;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QTextEdit_ExtraSelection_cursor(QTextEdit::ExtraSelection * this_ptr, QTextCursor const * value) {
  this_ptr->cursor = *value;
}


RITUAL_EXPORT QTextCharFormat const * ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_format(QTextEdit::ExtraSelection const * this_ptr) {
  return &this_ptr->format;
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_format_mut(QTextEdit::ExtraSelection * this_ptr) {
  return &this_ptr->format;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_set_QTextEdit_ExtraSelection_format(QTextEdit::ExtraSelection * this_ptr, QTextCharFormat const * value) {
  this_ptr->format = *value;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPlainTextEdit_staticMetaObject() {
  return &QPlainTextEdit::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_staticMetaObject() {
  return &QPlainTextDocumentLayout::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QProgressBar_staticMetaObject() {
  return &QProgressBar::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QProgressDialog_staticMetaObject() {
  return &QProgressDialog::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QProxyStyle_staticMetaObject() {
  return &QProxyStyle::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QRadioButton_staticMetaObject() {
  return &QRadioButton::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QScrollBar_staticMetaObject() {
  return &QScrollBar::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QScroller_staticMetaObject() {
  return &QScroller::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QShortcut_staticMetaObject() {
  return &QShortcut::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSizeGrip_staticMetaObject() {
  return &QSizeGrip::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSpinBox_staticMetaObject() {
  return &QSpinBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDoubleSpinBox_staticMetaObject() {
  return &QDoubleSpinBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSplashScreen_staticMetaObject() {
  return &QSplashScreen::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSplitter_staticMetaObject() {
  return &QSplitter::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSplitterHandle_staticMetaObject() {
  return &QSplitterHandle::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStackedLayout_staticMetaObject() {
  return &QStackedLayout::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStackedWidget_staticMetaObject() {
  return &QStackedWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStatusBar_staticMetaObject() {
  return &QStatusBar::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStyledItemDelegate_staticMetaObject() {
  return &QStyledItemDelegate::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStylePlugin_staticMetaObject() {
  return &QStylePlugin::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSystemTrayIcon_staticMetaObject() {
  return &QSystemTrayIcon::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTableView_staticMetaObject() {
  return &QTableView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTableWidget_staticMetaObject() {
  return &QTableWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTextBrowser_staticMetaObject() {
  return &QTextBrowser::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QToolBar_staticMetaObject() {
  return &QToolBar::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QToolBox_staticMetaObject() {
  return &QToolBox::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QToolButton_staticMetaObject() {
  return &QToolButton::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTreeView_staticMetaObject() {
  return &QTreeView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTreeWidget_staticMetaObject() {
  return &QTreeWidget::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QUndoGroup_staticMetaObject() {
  return &QUndoGroup::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QUndoStack_staticMetaObject() {
  return &QUndoStack::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QUndoView_staticMetaObject() {
  return &QUndoView::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWidgetAction_staticMetaObject() {
  return &QWidgetAction::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWizard_staticMetaObject() {
  return &QWizard::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWizardPage_staticMetaObject() {
  return &QWizardPage::staticMetaObject;
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash(QSizePolicy const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QSizePolicy_QSizePolicy() {
  return new QSizePolicy();
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QSizePolicy_QSizePolicy1(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical, QSizePolicy::ControlType type) {
  return new QSizePolicy(horizontal, vertical, type);
}


RITUAL_EXPORT QSizePolicy::Policy ctr_qt_widgets_ffi_QSizePolicy_horizontalPolicy(QSizePolicy const * this_ptr) {
  return this_ptr->horizontalPolicy();
}


RITUAL_EXPORT QSizePolicy::Policy ctr_qt_widgets_ffi_QSizePolicy_verticalPolicy(QSizePolicy const * this_ptr) {
  return this_ptr->verticalPolicy();
}


RITUAL_EXPORT QSizePolicy::ControlType ctr_qt_widgets_ffi_QSizePolicy_controlType(QSizePolicy const * this_ptr) {
  return this_ptr->controlType();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setHorizontalPolicy(QSizePolicy * this_ptr, QSizePolicy::Policy d) {
  this_ptr->setHorizontalPolicy(d);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setVerticalPolicy(QSizePolicy * this_ptr, QSizePolicy::Policy d) {
  this_ptr->setVerticalPolicy(d);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setControlType(QSizePolicy * this_ptr, QSizePolicy::ControlType type) {
  this_ptr->setControlType(type);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSizePolicy_expandingDirections(QSizePolicy const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setHeightForWidth(QSizePolicy * this_ptr, bool b) {
  this_ptr->setHeightForWidth(b);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSizePolicy_hasHeightForWidth(QSizePolicy const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setWidthForHeight(QSizePolicy * this_ptr, bool b) {
  this_ptr->setWidthForHeight(b);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSizePolicy_hasWidthForHeight(QSizePolicy const * this_ptr) {
  return this_ptr->hasWidthForHeight();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSizePolicy_operator__(QSizePolicy const * this_ptr, QSizePolicy const * s) {
  return this_ptr->operator==(*s);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QSizePolicy_operator_QVariant(QSizePolicy const * this_ptr) {
  return new QVariant(this_ptr->operator QVariant());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSizePolicy_horizontalStretch(QSizePolicy const * this_ptr) {
  return this_ptr->horizontalStretch();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSizePolicy_verticalStretch(QSizePolicy const * this_ptr) {
  return this_ptr->verticalStretch();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setHorizontalStretch(QSizePolicy * this_ptr, int stretchFactor) {
  this_ptr->setHorizontalStretch(stretchFactor);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setVerticalStretch(QSizePolicy * this_ptr, int stretchFactor) {
  this_ptr->setVerticalStretch(stretchFactor);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSizePolicy_retainSizeWhenHidden(QSizePolicy const * this_ptr) {
  return this_ptr->retainSizeWhenHidden();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_setRetainSizeWhenHidden(QSizePolicy * this_ptr, bool retainSize) {
  this_ptr->setRetainSizeWhenHidden(retainSize);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_transpose(QSizePolicy * this_ptr) {
  this_ptr->transpose();
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QSizePolicy_transposed(QSizePolicy const * this_ptr) {
  return new QSizePolicy(this_ptr->transposed());
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__(QDataStream * arg1, QSizePolicy const * arg2) {
  return &operator<<(*arg1, *arg2);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__1(QDataStream * arg1, QSizePolicy * arg2) {
  return &operator>>(*arg1, *arg2);
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__2(QDebug const * dbg, QSizePolicy const * arg2) {
  return new QDebug(operator<<(*dbg, *arg2));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWidget_metaObject(QWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QWidget_qt_metacast(QWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_qt_metacall(QWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_tr(char const * s, char const * c, int n) {
  return new QString(QWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_QWidget(QWidget * parent, int f) {
  return new QWidget(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_dQWidget(QWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_devType(QWidget const * this_ptr) {
  return this_ptr->devType();
}


RITUAL_EXPORT unsigned long long ctr_qt_widgets_ffi_QWidget_winId(QWidget const * this_ptr) {
  return this_ptr->winId();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_createWinId(QWidget * this_ptr) {
  this_ptr->createWinId();
}


RITUAL_EXPORT unsigned long long ctr_qt_widgets_ffi_QWidget_internalWinId(QWidget const * this_ptr) {
  return this_ptr->internalWinId();
}


RITUAL_EXPORT unsigned long long ctr_qt_widgets_ffi_QWidget_effectiveWinId(QWidget const * this_ptr) {
  return this_ptr->effectiveWinId();
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QWidget_style(QWidget const * this_ptr) {
  return this_ptr->style();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setStyle(QWidget * this_ptr, QStyle * arg1) {
  this_ptr->setStyle(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isTopLevel(QWidget const * this_ptr) {
  return this_ptr->isTopLevel();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isWindow(QWidget const * this_ptr) {
  return this_ptr->isWindow();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isModal(QWidget const * this_ptr) {
  return this_ptr->isModal();
}


RITUAL_EXPORT Qt::WindowModality ctr_qt_widgets_ffi_QWidget_windowModality(QWidget const * this_ptr) {
  return this_ptr->windowModality();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowModality(QWidget * this_ptr, Qt::WindowModality windowModality) {
  this_ptr->setWindowModality(windowModality);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isEnabled(QWidget const * this_ptr) {
  return this_ptr->isEnabled();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isEnabledTo(QWidget const * this_ptr, QWidget const * arg1) {
  return this_ptr->isEnabledTo(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isEnabledToTLW(QWidget const * this_ptr) {
  return this_ptr->isEnabledToTLW();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setEnabled(QWidget * this_ptr, bool arg1) {
  this_ptr->setEnabled(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setDisabled(QWidget * this_ptr, bool arg1) {
  this_ptr->setDisabled(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowModified(QWidget * this_ptr, bool arg1) {
  this_ptr->setWindowModified(arg1);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QWidget_frameGeometry(QWidget const * this_ptr) {
  return new QRect(this_ptr->frameGeometry());
}


RITUAL_EXPORT QRect const * ctr_qt_widgets_ffi_QWidget_geometry(QWidget const * this_ptr) {
  return &this_ptr->geometry();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QWidget_normalGeometry(QWidget const * this_ptr) {
  return new QRect(this_ptr->normalGeometry());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_x(QWidget const * this_ptr) {
  return this_ptr->x();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_y(QWidget const * this_ptr) {
  return this_ptr->y();
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QWidget_pos(QWidget const * this_ptr) {
  return new QPoint(this_ptr->pos());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_frameSize(QWidget const * this_ptr) {
  return new QSize(this_ptr->frameSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_size(QWidget const * this_ptr) {
  return new QSize(this_ptr->size());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_width(QWidget const * this_ptr) {
  return this_ptr->width();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_height(QWidget const * this_ptr) {
  return this_ptr->height();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QWidget_rect(QWidget const * this_ptr) {
  return new QRect(this_ptr->rect());
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QWidget_childrenRect(QWidget const * this_ptr) {
  return new QRect(this_ptr->childrenRect());
}


RITUAL_EXPORT QRegion * ctr_qt_widgets_ffi_QWidget_childrenRegion(QWidget const * this_ptr) {
  return new QRegion(this_ptr->childrenRegion());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_minimumSize(QWidget const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_maximumSize(QWidget const * this_ptr) {
  return new QSize(this_ptr->maximumSize());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_minimumWidth(QWidget const * this_ptr) {
  return this_ptr->minimumWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_minimumHeight(QWidget const * this_ptr) {
  return this_ptr->minimumHeight();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_maximumWidth(QWidget const * this_ptr) {
  return this_ptr->maximumWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_maximumHeight(QWidget const * this_ptr) {
  return this_ptr->maximumHeight();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMinimumSize(QWidget * this_ptr, QSize const * arg1) {
  this_ptr->setMinimumSize(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMinimumSize1(QWidget * this_ptr, int minw, int minh) {
  this_ptr->setMinimumSize(minw, minh);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMaximumSize(QWidget * this_ptr, QSize const * arg1) {
  this_ptr->setMaximumSize(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMaximumSize1(QWidget * this_ptr, int maxw, int maxh) {
  this_ptr->setMaximumSize(maxw, maxh);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMinimumWidth(QWidget * this_ptr, int minw) {
  this_ptr->setMinimumWidth(minw);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMinimumHeight(QWidget * this_ptr, int minh) {
  this_ptr->setMinimumHeight(minh);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMaximumWidth(QWidget * this_ptr, int maxw) {
  this_ptr->setMaximumWidth(maxw);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMaximumHeight(QWidget * this_ptr, int maxh) {
  this_ptr->setMaximumHeight(maxh);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_sizeIncrement(QWidget const * this_ptr) {
  return new QSize(this_ptr->sizeIncrement());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setSizeIncrement(QWidget * this_ptr, QSize const * arg1) {
  this_ptr->setSizeIncrement(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setSizeIncrement1(QWidget * this_ptr, int w, int h) {
  this_ptr->setSizeIncrement(w, h);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_baseSize(QWidget const * this_ptr) {
  return new QSize(this_ptr->baseSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setBaseSize(QWidget * this_ptr, QSize const * arg1) {
  this_ptr->setBaseSize(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setBaseSize1(QWidget * this_ptr, int basew, int baseh) {
  this_ptr->setBaseSize(basew, baseh);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFixedSize(QWidget * this_ptr, QSize const * arg1) {
  this_ptr->setFixedSize(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFixedSize1(QWidget * this_ptr, int w, int h) {
  this_ptr->setFixedSize(w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFixedWidth(QWidget * this_ptr, int w) {
  this_ptr->setFixedWidth(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFixedHeight(QWidget * this_ptr, int h) {
  this_ptr->setFixedHeight(h);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QWidget_mapToGlobal(QWidget const * this_ptr, QPoint const * arg1) {
  return new QPoint(this_ptr->mapToGlobal(*arg1));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QWidget_mapFromGlobal(QWidget const * this_ptr, QPoint const * arg1) {
  return new QPoint(this_ptr->mapFromGlobal(*arg1));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QWidget_mapToParent(QWidget const * this_ptr, QPoint const * arg1) {
  return new QPoint(this_ptr->mapToParent(*arg1));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QWidget_mapFromParent(QWidget const * this_ptr, QPoint const * arg1) {
  return new QPoint(this_ptr->mapFromParent(*arg1));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QWidget_mapTo(QWidget const * this_ptr, QWidget const * arg1, QPoint const * arg2) {
  return new QPoint(this_ptr->mapTo(arg1, *arg2));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QWidget_mapFrom(QWidget const * this_ptr, QWidget const * arg1, QPoint const * arg2) {
  return new QPoint(this_ptr->mapFrom(arg1, *arg2));
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_window(QWidget const * this_ptr) {
  return this_ptr->window();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_nativeParentWidget(QWidget const * this_ptr) {
  return this_ptr->nativeParentWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_topLevelWidget(QWidget const * this_ptr) {
  return this_ptr->topLevelWidget();
}


RITUAL_EXPORT QPalette const * ctr_qt_widgets_ffi_QWidget_palette(QWidget const * this_ptr) {
  return &this_ptr->palette();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setPalette(QWidget * this_ptr, QPalette const * arg1) {
  this_ptr->setPalette(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setBackgroundRole(QWidget * this_ptr, QPalette::ColorRole arg1) {
  this_ptr->setBackgroundRole(arg1);
}


RITUAL_EXPORT QPalette::ColorRole ctr_qt_widgets_ffi_QWidget_backgroundRole(QWidget const * this_ptr) {
  return this_ptr->backgroundRole();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setForegroundRole(QWidget * this_ptr, QPalette::ColorRole arg1) {
  this_ptr->setForegroundRole(arg1);
}


RITUAL_EXPORT QPalette::ColorRole ctr_qt_widgets_ffi_QWidget_foregroundRole(QWidget const * this_ptr) {
  return this_ptr->foregroundRole();
}


RITUAL_EXPORT QFont const * ctr_qt_widgets_ffi_QWidget_font(QWidget const * this_ptr) {
  return &this_ptr->font();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFont(QWidget * this_ptr, QFont const * arg1) {
  this_ptr->setFont(*arg1);
}


RITUAL_EXPORT QFontMetrics * ctr_qt_widgets_ffi_QWidget_fontMetrics(QWidget const * this_ptr) {
  return new QFontMetrics(this_ptr->fontMetrics());
}


RITUAL_EXPORT QFontInfo * ctr_qt_widgets_ffi_QWidget_fontInfo(QWidget const * this_ptr) {
  return new QFontInfo(this_ptr->fontInfo());
}


RITUAL_EXPORT QCursor * ctr_qt_widgets_ffi_QWidget_cursor(QWidget const * this_ptr) {
  return new QCursor(this_ptr->cursor());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setCursor(QWidget * this_ptr, QCursor const * arg1) {
  this_ptr->setCursor(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_unsetCursor(QWidget * this_ptr) {
  this_ptr->unsetCursor();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMouseTracking(QWidget * this_ptr, bool enable) {
  this_ptr->setMouseTracking(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_hasMouseTracking(QWidget const * this_ptr) {
  return this_ptr->hasMouseTracking();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_underMouse(QWidget const * this_ptr) {
  return this_ptr->underMouse();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setTabletTracking(QWidget * this_ptr, bool enable) {
  this_ptr->setTabletTracking(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_hasTabletTracking(QWidget const * this_ptr) {
  return this_ptr->hasTabletTracking();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMask(QWidget * this_ptr, QBitmap const * arg1) {
  this_ptr->setMask(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setMask1(QWidget * this_ptr, QRegion const * arg1) {
  this_ptr->setMask(*arg1);
}


RITUAL_EXPORT QRegion * ctr_qt_widgets_ffi_QWidget_mask(QWidget const * this_ptr) {
  return new QRegion(this_ptr->mask());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_clearMask(QWidget * this_ptr) {
  this_ptr->clearMask();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render(QWidget * this_ptr, QPaintDevice * target, QPoint const * targetOffset, QRegion const * sourceRegion, int renderFlags) {
  this_ptr->render(target, *targetOffset, *sourceRegion, QFlags< QWidget::RenderFlag >(renderFlags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render1(QWidget * this_ptr, QPainter * painter, QPoint const * targetOffset, QRegion const * sourceRegion, int renderFlags) {
  this_ptr->render(painter, *targetOffset, *sourceRegion, QFlags< QWidget::RenderFlag >(renderFlags));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QWidget_grab(QWidget * this_ptr, QRect const * rectangle) {
  return new QPixmap(this_ptr->grab(*rectangle));
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_QWidget_graphicsEffect(QWidget const * this_ptr) {
  return this_ptr->graphicsEffect();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setGraphicsEffect(QWidget * this_ptr, QGraphicsEffect * effect) {
  this_ptr->setGraphicsEffect(effect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_grabGesture(QWidget * this_ptr, Qt::GestureType type, int flags) {
  this_ptr->grabGesture(type, QFlags< Qt::GestureFlag >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_ungrabGesture(QWidget * this_ptr, Qt::GestureType type) {
  this_ptr->ungrabGesture(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowTitle(QWidget * this_ptr, QString const * arg1) {
  this_ptr->setWindowTitle(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setStyleSheet(QWidget * this_ptr, QString const * styleSheet) {
  this_ptr->setStyleSheet(*styleSheet);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_styleSheet(QWidget const * this_ptr) {
  return new QString(this_ptr->styleSheet());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_windowTitle(QWidget const * this_ptr) {
  return new QString(this_ptr->windowTitle());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowIcon(QWidget * this_ptr, QIcon const * icon) {
  this_ptr->setWindowIcon(*icon);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QWidget_windowIcon(QWidget const * this_ptr) {
  return new QIcon(this_ptr->windowIcon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowIconText(QWidget * this_ptr, QString const * arg1) {
  this_ptr->setWindowIconText(*arg1);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_windowIconText(QWidget const * this_ptr) {
  return new QString(this_ptr->windowIconText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowRole(QWidget * this_ptr, QString const * arg1) {
  this_ptr->setWindowRole(*arg1);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_windowRole(QWidget const * this_ptr) {
  return new QString(this_ptr->windowRole());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowFilePath(QWidget * this_ptr, QString const * filePath) {
  this_ptr->setWindowFilePath(*filePath);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_windowFilePath(QWidget const * this_ptr) {
  return new QString(this_ptr->windowFilePath());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowOpacity(QWidget * this_ptr, double level) {
  this_ptr->setWindowOpacity(level);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QWidget_windowOpacity(QWidget const * this_ptr) {
  return this_ptr->windowOpacity();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isWindowModified(QWidget const * this_ptr) {
  return this_ptr->isWindowModified();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setToolTip(QWidget * this_ptr, QString const * arg1) {
  this_ptr->setToolTip(*arg1);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_toolTip(QWidget const * this_ptr) {
  return new QString(this_ptr->toolTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setToolTipDuration(QWidget * this_ptr, int msec) {
  this_ptr->setToolTipDuration(msec);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_toolTipDuration(QWidget const * this_ptr) {
  return this_ptr->toolTipDuration();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setStatusTip(QWidget * this_ptr, QString const * arg1) {
  this_ptr->setStatusTip(*arg1);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_statusTip(QWidget const * this_ptr) {
  return new QString(this_ptr->statusTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWhatsThis(QWidget * this_ptr, QString const * arg1) {
  this_ptr->setWhatsThis(*arg1);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_whatsThis(QWidget const * this_ptr) {
  return new QString(this_ptr->whatsThis());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_accessibleName(QWidget const * this_ptr) {
  return new QString(this_ptr->accessibleName());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setAccessibleName(QWidget * this_ptr, QString const * name) {
  this_ptr->setAccessibleName(*name);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidget_accessibleDescription(QWidget const * this_ptr) {
  return new QString(this_ptr->accessibleDescription());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setAccessibleDescription(QWidget * this_ptr, QString const * description) {
  this_ptr->setAccessibleDescription(*description);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setLayoutDirection(QWidget * this_ptr, Qt::LayoutDirection direction) {
  this_ptr->setLayoutDirection(direction);
}


RITUAL_EXPORT Qt::LayoutDirection ctr_qt_widgets_ffi_QWidget_layoutDirection(QWidget const * this_ptr) {
  return this_ptr->layoutDirection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_unsetLayoutDirection(QWidget * this_ptr) {
  this_ptr->unsetLayoutDirection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setLocale(QWidget * this_ptr, QLocale const * locale) {
  this_ptr->setLocale(*locale);
}


RITUAL_EXPORT QLocale * ctr_qt_widgets_ffi_QWidget_locale(QWidget const * this_ptr) {
  return new QLocale(this_ptr->locale());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_unsetLocale(QWidget * this_ptr) {
  this_ptr->unsetLocale();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isRightToLeft(QWidget const * this_ptr) {
  return this_ptr->isRightToLeft();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isLeftToRight(QWidget const * this_ptr) {
  return this_ptr->isLeftToRight();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFocus(QWidget * this_ptr) {
  this_ptr->setFocus();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isActiveWindow(QWidget const * this_ptr) {
  return this_ptr->isActiveWindow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_activateWindow(QWidget * this_ptr) {
  this_ptr->activateWindow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_clearFocus(QWidget * this_ptr) {
  this_ptr->clearFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFocus1(QWidget * this_ptr, Qt::FocusReason reason) {
  this_ptr->setFocus(reason);
}


RITUAL_EXPORT Qt::FocusPolicy ctr_qt_widgets_ffi_QWidget_focusPolicy(QWidget const * this_ptr) {
  return this_ptr->focusPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFocusPolicy(QWidget * this_ptr, Qt::FocusPolicy policy) {
  this_ptr->setFocusPolicy(policy);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_hasFocus(QWidget const * this_ptr) {
  return this_ptr->hasFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setTabOrder(QWidget * arg1, QWidget * arg2) {
  QWidget::setTabOrder(arg1, arg2);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setFocusProxy(QWidget * this_ptr, QWidget * arg1) {
  this_ptr->setFocusProxy(arg1);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_focusProxy(QWidget const * this_ptr) {
  return this_ptr->focusProxy();
}


RITUAL_EXPORT Qt::ContextMenuPolicy ctr_qt_widgets_ffi_QWidget_contextMenuPolicy(QWidget const * this_ptr) {
  return this_ptr->contextMenuPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setContextMenuPolicy(QWidget * this_ptr, Qt::ContextMenuPolicy policy) {
  this_ptr->setContextMenuPolicy(policy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_grabMouse(QWidget * this_ptr) {
  this_ptr->grabMouse();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_grabMouse1(QWidget * this_ptr, QCursor const * arg1) {
  this_ptr->grabMouse(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_releaseMouse(QWidget * this_ptr) {
  this_ptr->releaseMouse();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_grabKeyboard(QWidget * this_ptr) {
  this_ptr->grabKeyboard();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_releaseKeyboard(QWidget * this_ptr) {
  this_ptr->releaseKeyboard();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_grabShortcut(QWidget * this_ptr, QKeySequence const * key, Qt::ShortcutContext context) {
  return this_ptr->grabShortcut(*key, context);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_releaseShortcut(QWidget * this_ptr, int id) {
  this_ptr->releaseShortcut(id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setShortcutEnabled(QWidget * this_ptr, int id, bool enable) {
  this_ptr->setShortcutEnabled(id, enable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setShortcutAutoRepeat(QWidget * this_ptr, int id, bool enable) {
  this_ptr->setShortcutAutoRepeat(id, enable);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_mouseGrabber() {
  return QWidget::mouseGrabber();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_keyboardGrabber() {
  return QWidget::keyboardGrabber();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_updatesEnabled(QWidget const * this_ptr) {
  return this_ptr->updatesEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setUpdatesEnabled(QWidget * this_ptr, bool enable) {
  this_ptr->setUpdatesEnabled(enable);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_QWidget_graphicsProxyWidget(QWidget const * this_ptr) {
  return this_ptr->graphicsProxyWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_update(QWidget * this_ptr) {
  this_ptr->update();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_repaint(QWidget * this_ptr) {
  this_ptr->repaint();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_update1(QWidget * this_ptr, int x, int y, int w, int h) {
  this_ptr->update(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_update2(QWidget * this_ptr, QRect const * arg1) {
  this_ptr->update(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_update3(QWidget * this_ptr, QRegion const * arg1) {
  this_ptr->update(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_repaint1(QWidget * this_ptr, int x, int y, int w, int h) {
  this_ptr->repaint(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_repaint2(QWidget * this_ptr, QRect const * arg1) {
  this_ptr->repaint(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_repaint3(QWidget * this_ptr, QRegion const * arg1) {
  this_ptr->repaint(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setVisible(QWidget * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setHidden(QWidget * this_ptr, bool hidden) {
  this_ptr->setHidden(hidden);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_show(QWidget * this_ptr) {
  this_ptr->show();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_hide(QWidget * this_ptr) {
  this_ptr->hide();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_showMinimized(QWidget * this_ptr) {
  this_ptr->showMinimized();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_showMaximized(QWidget * this_ptr) {
  this_ptr->showMaximized();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_showFullScreen(QWidget * this_ptr) {
  this_ptr->showFullScreen();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_showNormal(QWidget * this_ptr) {
  this_ptr->showNormal();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_close(QWidget * this_ptr) {
  return this_ptr->close();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_raise(QWidget * this_ptr) {
  this_ptr->raise();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_lower(QWidget * this_ptr) {
  this_ptr->lower();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_stackUnder(QWidget * this_ptr, QWidget * arg1) {
  this_ptr->stackUnder(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_move(QWidget * this_ptr, int x, int y) {
  this_ptr->move(x, y);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_move1(QWidget * this_ptr, QPoint const * arg1) {
  this_ptr->move(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_resize(QWidget * this_ptr, int w, int h) {
  this_ptr->resize(w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_resize1(QWidget * this_ptr, QSize const * arg1) {
  this_ptr->resize(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setGeometry(QWidget * this_ptr, int x, int y, int w, int h) {
  this_ptr->setGeometry(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setGeometry1(QWidget * this_ptr, QRect const * arg1) {
  this_ptr->setGeometry(*arg1);
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QWidget_saveGeometry(QWidget const * this_ptr) {
  return new QByteArray(this_ptr->saveGeometry());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_restoreGeometry(QWidget * this_ptr, QByteArray const * geometry) {
  return this_ptr->restoreGeometry(*geometry);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_adjustSize(QWidget * this_ptr) {
  this_ptr->adjustSize();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isVisible(QWidget const * this_ptr) {
  return this_ptr->isVisible();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isVisibleTo(QWidget const * this_ptr, QWidget const * arg1) {
  return this_ptr->isVisibleTo(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isHidden(QWidget const * this_ptr) {
  return this_ptr->isHidden();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isMinimized(QWidget const * this_ptr) {
  return this_ptr->isMinimized();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isMaximized(QWidget const * this_ptr) {
  return this_ptr->isMaximized();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isFullScreen(QWidget const * this_ptr) {
  return this_ptr->isFullScreen();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_windowState(QWidget const * this_ptr) {
  return int(this_ptr->windowState());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowState(QWidget * this_ptr, int state) {
  this_ptr->setWindowState(QFlags< Qt::WindowState >(state));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_overrideWindowState(QWidget * this_ptr, int state) {
  this_ptr->overrideWindowState(QFlags< Qt::WindowState >(state));
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_sizeHint(QWidget const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidget_minimumSizeHint(QWidget const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QWidget_sizePolicy(QWidget const * this_ptr) {
  return new QSizePolicy(this_ptr->sizePolicy());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setSizePolicy(QWidget * this_ptr, QSizePolicy const * arg1) {
  this_ptr->setSizePolicy(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setSizePolicy1(QWidget * this_ptr, QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical) {
  this_ptr->setSizePolicy(horizontal, vertical);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_heightForWidth(QWidget const * this_ptr, int arg1) {
  return this_ptr->heightForWidth(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_hasHeightForWidth(QWidget const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT QRegion * ctr_qt_widgets_ffi_QWidget_visibleRegion(QWidget const * this_ptr) {
  return new QRegion(this_ptr->visibleRegion());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setContentsMargins(QWidget * this_ptr, int left, int top, int right, int bottom) {
  this_ptr->setContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setContentsMargins1(QWidget * this_ptr, QMargins const * margins) {
  this_ptr->setContentsMargins(*margins);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_getContentsMargins(QWidget const * this_ptr, int * left, int * top, int * right, int * bottom) {
  this_ptr->getContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT QMargins * ctr_qt_widgets_ffi_QWidget_contentsMargins(QWidget const * this_ptr) {
  return new QMargins(this_ptr->contentsMargins());
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QWidget_contentsRect(QWidget const * this_ptr) {
  return new QRect(this_ptr->contentsRect());
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_QWidget_layout(QWidget const * this_ptr) {
  return this_ptr->layout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setLayout(QWidget * this_ptr, QLayout * arg1) {
  this_ptr->setLayout(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_updateGeometry(QWidget * this_ptr) {
  this_ptr->updateGeometry();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setParent(QWidget * this_ptr, QWidget * parent) {
  this_ptr->setParent(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setParent1(QWidget * this_ptr, QWidget * parent, int f) {
  this_ptr->setParent(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_scroll(QWidget * this_ptr, int dx, int dy) {
  this_ptr->scroll(dx, dy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_scroll1(QWidget * this_ptr, int dx, int dy, QRect const * arg3) {
  this_ptr->scroll(dx, dy, *arg3);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_focusWidget(QWidget const * this_ptr) {
  return this_ptr->focusWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_nextInFocusChain(QWidget const * this_ptr) {
  return this_ptr->nextInFocusChain();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_previousInFocusChain(QWidget const * this_ptr) {
  return this_ptr->previousInFocusChain();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_acceptDrops(QWidget const * this_ptr) {
  return this_ptr->acceptDrops();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setAcceptDrops(QWidget * this_ptr, bool on) {
  this_ptr->setAcceptDrops(on);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_addAction(QWidget * this_ptr, QAction * action) {
  this_ptr->addAction(action);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_addActions(QWidget * this_ptr, QList< QAction * > const * actions) {
  this_ptr->addActions(*actions);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_insertActions(QWidget * this_ptr, QAction * before, QList< QAction * > const * actions) {
  this_ptr->insertActions(before, *actions);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_insertAction(QWidget * this_ptr, QAction * before, QAction * action) {
  this_ptr->insertAction(before, action);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_removeAction(QWidget * this_ptr, QAction * action) {
  this_ptr->removeAction(action);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QWidget_actions(QWidget const * this_ptr) {
  return new QList< QAction * >(this_ptr->actions());
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_parentWidget(QWidget const * this_ptr) {
  return this_ptr->parentWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowFlags(QWidget * this_ptr, int type) {
  this_ptr->setWindowFlags(QFlags< Qt::WindowType >(type));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_windowFlags(QWidget const * this_ptr) {
  return int(this_ptr->windowFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowFlag(QWidget * this_ptr, Qt::WindowType arg1, bool on) {
  this_ptr->setWindowFlag(arg1, on);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_overrideWindowFlags(QWidget * this_ptr, int type) {
  this_ptr->overrideWindowFlags(QFlags< Qt::WindowType >(type));
}


RITUAL_EXPORT Qt::WindowType ctr_qt_widgets_ffi_QWidget_windowType(QWidget const * this_ptr) {
  return this_ptr->windowType();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_find(unsigned long long arg1) {
  return QWidget::find(arg1);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_childAt(QWidget const * this_ptr, int x, int y) {
  return this_ptr->childAt(x, y);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_childAt1(QWidget const * this_ptr, QPoint const * p) {
  return this_ptr->childAt(*p);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setAttribute(QWidget * this_ptr, Qt::WidgetAttribute arg1, bool on) {
  this_ptr->setAttribute(arg1, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_testAttribute(QWidget const * this_ptr, Qt::WidgetAttribute arg1) {
  return this_ptr->testAttribute(arg1);
}


RITUAL_EXPORT QPaintEngine * ctr_qt_widgets_ffi_QWidget_paintEngine(QWidget const * this_ptr) {
  return this_ptr->paintEngine();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_ensurePolished(QWidget const * this_ptr) {
  this_ptr->ensurePolished();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_isAncestorOf(QWidget const * this_ptr, QWidget const * child) {
  return this_ptr->isAncestorOf(child);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidget_autoFillBackground(QWidget const * this_ptr) {
  return this_ptr->autoFillBackground();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setAutoFillBackground(QWidget * this_ptr, bool enabled) {
  this_ptr->setAutoFillBackground(enabled);
}


RITUAL_EXPORT QBackingStore * ctr_qt_widgets_ffi_QWidget_backingStore(QWidget const * this_ptr) {
  return this_ptr->backingStore();
}


RITUAL_EXPORT QWindow * ctr_qt_widgets_ffi_QWidget_windowHandle(QWidget const * this_ptr) {
  return this_ptr->windowHandle();
}


RITUAL_EXPORT QScreen * ctr_qt_widgets_ffi_QWidget_screen(QWidget const * this_ptr) {
  return this_ptr->screen();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_createWindowContainer(QWindow * window, QWidget * parent, int flags) {
  return QWidget::createWindowContainer(window, parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QWidget_inputMethodQuery(QWidget const * this_ptr, Qt::InputMethodQuery arg1) {
  return new QVariant(this_ptr->inputMethodQuery(arg1));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_inputMethodHints(QWidget const * this_ptr) {
  return int(this_ptr->inputMethodHints());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setInputMethodHints(QWidget * this_ptr, int hints) {
  this_ptr->setInputMethodHints(QFlags< Qt::InputMethodHint >(hints));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__3(QDebug const * arg1, QWidget const * arg2) {
  return new QDebug(operator<<(*arg1, arg2));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractButton_metaObject(QAbstractButton const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAbstractButton_qt_metacast(QAbstractButton * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractButton_qt_metacall(QAbstractButton * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractButton_tr(char const * s, char const * c, int n) {
  return new QString(QAbstractButton::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractButton_trUtf8(char const * s, char const * c, int n) {
  return new QString(QAbstractButton::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_dQAbstractButton(QAbstractButton * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setText(QAbstractButton * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractButton_text(QAbstractButton const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setIcon(QAbstractButton * this_ptr, QIcon const * icon) {
  this_ptr->setIcon(*icon);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QAbstractButton_icon(QAbstractButton const * this_ptr) {
  return new QIcon(this_ptr->icon());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractButton_iconSize(QAbstractButton const * this_ptr) {
  return new QSize(this_ptr->iconSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setShortcut(QAbstractButton * this_ptr, QKeySequence const * key) {
  this_ptr->setShortcut(*key);
}


RITUAL_EXPORT QKeySequence * ctr_qt_widgets_ffi_QAbstractButton_shortcut(QAbstractButton const * this_ptr) {
  return new QKeySequence(this_ptr->shortcut());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setCheckable(QAbstractButton * this_ptr, bool arg1) {
  this_ptr->setCheckable(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractButton_isCheckable(QAbstractButton const * this_ptr) {
  return this_ptr->isCheckable();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractButton_isChecked(QAbstractButton const * this_ptr) {
  return this_ptr->isChecked();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setDown(QAbstractButton * this_ptr, bool arg1) {
  this_ptr->setDown(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractButton_isDown(QAbstractButton const * this_ptr) {
  return this_ptr->isDown();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setAutoRepeat(QAbstractButton * this_ptr, bool arg1) {
  this_ptr->setAutoRepeat(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractButton_autoRepeat(QAbstractButton const * this_ptr) {
  return this_ptr->autoRepeat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setAutoRepeatDelay(QAbstractButton * this_ptr, int arg1) {
  this_ptr->setAutoRepeatDelay(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractButton_autoRepeatDelay(QAbstractButton const * this_ptr) {
  return this_ptr->autoRepeatDelay();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setAutoRepeatInterval(QAbstractButton * this_ptr, int arg1) {
  this_ptr->setAutoRepeatInterval(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractButton_autoRepeatInterval(QAbstractButton const * this_ptr) {
  return this_ptr->autoRepeatInterval();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setAutoExclusive(QAbstractButton * this_ptr, bool arg1) {
  this_ptr->setAutoExclusive(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractButton_autoExclusive(QAbstractButton const * this_ptr) {
  return this_ptr->autoExclusive();
}


RITUAL_EXPORT QButtonGroup * ctr_qt_widgets_ffi_QAbstractButton_group(QAbstractButton const * this_ptr) {
  return this_ptr->group();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setIconSize(QAbstractButton * this_ptr, QSize const * size) {
  this_ptr->setIconSize(*size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_animateClick(QAbstractButton * this_ptr, int msec) {
  this_ptr->animateClick(msec);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_click(QAbstractButton * this_ptr) {
  this_ptr->click();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_toggle(QAbstractButton * this_ptr) {
  this_ptr->toggle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_setChecked(QAbstractButton * this_ptr, bool arg1) {
  this_ptr->setChecked(arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractSpinBox_metaObject(QAbstractSpinBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAbstractSpinBox_qt_metacast(QAbstractSpinBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSpinBox_qt_metacall(QAbstractSpinBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractSpinBox_tr(char const * s, char const * c, int n) {
  return new QString(QAbstractSpinBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractSpinBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QAbstractSpinBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_QAbstractSpinBox_QAbstractSpinBox(QWidget * parent) {
  return new QAbstractSpinBox(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_dQAbstractSpinBox(QAbstractSpinBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QAbstractSpinBox::ButtonSymbols ctr_qt_widgets_ffi_QAbstractSpinBox_buttonSymbols(QAbstractSpinBox const * this_ptr) {
  return this_ptr->buttonSymbols();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setButtonSymbols(QAbstractSpinBox * this_ptr, QAbstractSpinBox::ButtonSymbols bs) {
  this_ptr->setButtonSymbols(bs);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setCorrectionMode(QAbstractSpinBox * this_ptr, QAbstractSpinBox::CorrectionMode cm) {
  this_ptr->setCorrectionMode(cm);
}


RITUAL_EXPORT QAbstractSpinBox::CorrectionMode ctr_qt_widgets_ffi_QAbstractSpinBox_correctionMode(QAbstractSpinBox const * this_ptr) {
  return this_ptr->correctionMode();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_hasAcceptableInput(QAbstractSpinBox const * this_ptr) {
  return this_ptr->hasAcceptableInput();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractSpinBox_text(QAbstractSpinBox const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractSpinBox_specialValueText(QAbstractSpinBox const * this_ptr) {
  return new QString(this_ptr->specialValueText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setSpecialValueText(QAbstractSpinBox * this_ptr, QString const * txt) {
  this_ptr->setSpecialValueText(*txt);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_wrapping(QAbstractSpinBox const * this_ptr) {
  return this_ptr->wrapping();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setWrapping(QAbstractSpinBox * this_ptr, bool w) {
  this_ptr->setWrapping(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setReadOnly(QAbstractSpinBox * this_ptr, bool r) {
  this_ptr->setReadOnly(r);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_isReadOnly(QAbstractSpinBox const * this_ptr) {
  return this_ptr->isReadOnly();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setKeyboardTracking(QAbstractSpinBox * this_ptr, bool kt) {
  this_ptr->setKeyboardTracking(kt);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_keyboardTracking(QAbstractSpinBox const * this_ptr) {
  return this_ptr->keyboardTracking();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setAlignment(QAbstractSpinBox * this_ptr, int flag) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(flag));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSpinBox_alignment(QAbstractSpinBox const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setFrame(QAbstractSpinBox * this_ptr, bool arg1) {
  this_ptr->setFrame(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_hasFrame(QAbstractSpinBox const * this_ptr) {
  return this_ptr->hasFrame();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setAccelerated(QAbstractSpinBox * this_ptr, bool on) {
  this_ptr->setAccelerated(on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_isAccelerated(QAbstractSpinBox const * this_ptr) {
  return this_ptr->isAccelerated();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_setGroupSeparatorShown(QAbstractSpinBox * this_ptr, bool shown) {
  this_ptr->setGroupSeparatorShown(shown);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_isGroupSeparatorShown(QAbstractSpinBox const * this_ptr) {
  return this_ptr->isGroupSeparatorShown();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractSpinBox_sizeHint(QAbstractSpinBox const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractSpinBox_minimumSizeHint(QAbstractSpinBox const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_interpretText(QAbstractSpinBox * this_ptr) {
  this_ptr->interpretText();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSpinBox_event(QAbstractSpinBox * this_ptr, QEvent * event) {
  return this_ptr->event(event);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QAbstractSpinBox_inputMethodQuery(QAbstractSpinBox const * this_ptr, Qt::InputMethodQuery arg1) {
  return new QVariant(this_ptr->inputMethodQuery(arg1));
}


RITUAL_EXPORT QValidator::State ctr_qt_widgets_ffi_QAbstractSpinBox_validate(QAbstractSpinBox const * this_ptr, QString * input, int * pos) {
  return this_ptr->validate(*input, *pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_fixup(QAbstractSpinBox const * this_ptr, QString * input) {
  this_ptr->fixup(*input);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_stepBy(QAbstractSpinBox * this_ptr, int steps) {
  this_ptr->stepBy(steps);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_stepUp(QAbstractSpinBox * this_ptr) {
  this_ptr->stepUp();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_stepDown(QAbstractSpinBox * this_ptr) {
  this_ptr->stepDown();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_selectAll(QAbstractSpinBox * this_ptr) {
  this_ptr->selectAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSpinBox_clear(QAbstractSpinBox * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractSlider_metaObject(QAbstractSlider const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAbstractSlider_qt_metacast(QAbstractSlider * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSlider_qt_metacall(QAbstractSlider * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractSlider_tr(char const * s, char const * c, int n) {
  return new QString(QAbstractSlider::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractSlider_trUtf8(char const * s, char const * c, int n) {
  return new QString(QAbstractSlider::trUtf8(s, c, n));
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_QAbstractSlider_QAbstractSlider(QWidget * parent) {
  return new QAbstractSlider(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_dQAbstractSlider(QAbstractSlider * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QAbstractSlider_orientation(QAbstractSlider const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setMinimum(QAbstractSlider * this_ptr, int arg1) {
  this_ptr->setMinimum(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSlider_minimum(QAbstractSlider const * this_ptr) {
  return this_ptr->minimum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setMaximum(QAbstractSlider * this_ptr, int arg1) {
  this_ptr->setMaximum(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSlider_maximum(QAbstractSlider const * this_ptr) {
  return this_ptr->maximum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setSingleStep(QAbstractSlider * this_ptr, int arg1) {
  this_ptr->setSingleStep(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSlider_singleStep(QAbstractSlider const * this_ptr) {
  return this_ptr->singleStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setPageStep(QAbstractSlider * this_ptr, int arg1) {
  this_ptr->setPageStep(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSlider_pageStep(QAbstractSlider const * this_ptr) {
  return this_ptr->pageStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setTracking(QAbstractSlider * this_ptr, bool enable) {
  this_ptr->setTracking(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSlider_hasTracking(QAbstractSlider const * this_ptr) {
  return this_ptr->hasTracking();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setSliderDown(QAbstractSlider * this_ptr, bool arg1) {
  this_ptr->setSliderDown(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSlider_isSliderDown(QAbstractSlider const * this_ptr) {
  return this_ptr->isSliderDown();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setSliderPosition(QAbstractSlider * this_ptr, int arg1) {
  this_ptr->setSliderPosition(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSlider_sliderPosition(QAbstractSlider const * this_ptr) {
  return this_ptr->sliderPosition();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setInvertedAppearance(QAbstractSlider * this_ptr, bool arg1) {
  this_ptr->setInvertedAppearance(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSlider_invertedAppearance(QAbstractSlider const * this_ptr) {
  return this_ptr->invertedAppearance();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setInvertedControls(QAbstractSlider * this_ptr, bool arg1) {
  this_ptr->setInvertedControls(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractSlider_invertedControls(QAbstractSlider const * this_ptr) {
  return this_ptr->invertedControls();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractSlider_value(QAbstractSlider const * this_ptr) {
  return this_ptr->value();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_triggerAction(QAbstractSlider * this_ptr, QAbstractSlider::SliderAction action) {
  this_ptr->triggerAction(action);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setValue(QAbstractSlider * this_ptr, int arg1) {
  this_ptr->setValue(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setOrientation(QAbstractSlider * this_ptr, Qt::Orientation arg1) {
  this_ptr->setOrientation(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractSlider_setRange(QAbstractSlider * this_ptr, int min, int max) {
  this_ptr->setRange(min, max);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSlider_metaObject(QSlider const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSlider_qt_metacast(QSlider * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSlider_qt_metacall(QSlider * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSlider_tr(char const * s, char const * c, int n) {
  return new QString(QSlider::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSlider_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSlider::trUtf8(s, c, n));
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_QSlider_QSlider(QWidget * parent) {
  return new QSlider(parent);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_QSlider_QSlider1(Qt::Orientation orientation, QWidget * parent) {
  return new QSlider(orientation, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSlider_dQSlider(QSlider * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSlider_sizeHint(QSlider const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSlider_minimumSizeHint(QSlider const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSlider_setTickPosition(QSlider * this_ptr, QSlider::TickPosition position) {
  this_ptr->setTickPosition(position);
}


RITUAL_EXPORT QSlider::TickPosition ctr_qt_widgets_ffi_QSlider_tickPosition(QSlider const * this_ptr) {
  return this_ptr->tickPosition();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSlider_setTickInterval(QSlider * this_ptr, int ti) {
  this_ptr->setTickInterval(ti);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSlider_tickInterval(QSlider const * this_ptr) {
  return this_ptr->tickInterval();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSlider_event(QSlider * this_ptr, QEvent * event) {
  return this_ptr->event(event);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStyle_metaObject(QStyle const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QStyle_qt_metacast(QStyle * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_qt_metacall(QStyle * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyle_tr(char const * s, char const * c, int n) {
  return new QString(QStyle::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyle_trUtf8(char const * s, char const * c, int n) {
  return new QString(QStyle::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_dQStyle(QStyle * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_polish(QStyle * this_ptr, QWidget * widget) {
  this_ptr->polish(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_unpolish(QStyle * this_ptr, QWidget * widget) {
  this_ptr->unpolish(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_polish1(QStyle * this_ptr, QApplication * application) {
  this_ptr->polish(application);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_unpolish1(QStyle * this_ptr, QApplication * application) {
  this_ptr->unpolish(application);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_polish2(QStyle * this_ptr, QPalette * palette) {
  this_ptr->polish(*palette);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_itemTextRect(QStyle const * this_ptr, QFontMetrics const * fm, QRect const * r, int flags, bool enabled, QString const * text) {
  return new QRect(this_ptr->itemTextRect(*fm, *r, flags, enabled, *text));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_itemPixmapRect(QStyle const * this_ptr, QRect const * r, int flags, QPixmap const * pixmap) {
  return new QRect(this_ptr->itemPixmapRect(*r, flags, *pixmap));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawItemText(QStyle const * this_ptr, QPainter * painter, QRect const * rect, int flags, QPalette const * pal, bool enabled, QString const * text, QPalette::ColorRole textRole) {
  this_ptr->drawItemText(painter, *rect, flags, *pal, enabled, *text, textRole);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawItemPixmap(QStyle const * this_ptr, QPainter * painter, QRect const * rect, int alignment, QPixmap const * pixmap) {
  this_ptr->drawItemPixmap(painter, *rect, alignment, *pixmap);
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QStyle_standardPalette(QStyle const * this_ptr) {
  return new QPalette(this_ptr->standardPalette());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawPrimitive(QStyle const * this_ptr, QStyle::PrimitiveElement pe, QStyleOption const * opt, QPainter * p, QWidget const * w) {
  this_ptr->drawPrimitive(pe, opt, p, w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawControl(QStyle const * this_ptr, QStyle::ControlElement element, QStyleOption const * opt, QPainter * p, QWidget const * w) {
  this_ptr->drawControl(element, opt, p, w);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_subElementRect(QStyle const * this_ptr, QStyle::SubElement subElement, QStyleOption const * option, QWidget const * widget) {
  return new QRect(this_ptr->subElementRect(subElement, option, widget));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawComplexControl(QStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPainter * p, QWidget const * widget) {
  this_ptr->drawComplexControl(cc, opt, p, widget);
}


RITUAL_EXPORT QStyle::SubControl ctr_qt_widgets_ffi_QStyle_hitTestComplexControl(QStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPoint const * pt, QWidget const * widget) {
  return this_ptr->hitTestComplexControl(cc, opt, *pt, widget);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_subControlRect(QStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QStyle::SubControl sc, QWidget const * widget) {
  return new QRect(this_ptr->subControlRect(cc, opt, sc, widget));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_pixelMetric(QStyle const * this_ptr, QStyle::PixelMetric metric, QStyleOption const * option, QWidget const * widget) {
  return this_ptr->pixelMetric(metric, option, widget);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyle_sizeFromContents(QStyle const * this_ptr, QStyle::ContentsType ct, QStyleOption const * opt, QSize const * contentsSize, QWidget const * w) {
  return new QSize(this_ptr->sizeFromContents(ct, opt, *contentsSize, w));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_styleHint(QStyle const * this_ptr, QStyle::StyleHint stylehint, QStyleOption const * opt, QWidget const * widget, QStyleHintReturn * returnData) {
  return this_ptr->styleHint(stylehint, opt, widget, returnData);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QStyle_standardPixmap(QStyle const * this_ptr, QStyle::StandardPixmap standardPixmap, QStyleOption const * opt, QWidget const * widget) {
  return new QPixmap(this_ptr->standardPixmap(standardPixmap, opt, widget));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyle_standardIcon(QStyle const * this_ptr, QStyle::StandardPixmap standardIcon, QStyleOption const * option, QWidget const * widget) {
  return new QIcon(this_ptr->standardIcon(standardIcon, option, widget));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QStyle_generatedIconPixmap(QStyle const * this_ptr, QIcon::Mode iconMode, QPixmap const * pixmap, QStyleOption const * opt) {
  return new QPixmap(this_ptr->generatedIconPixmap(iconMode, *pixmap, opt));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_visualRect(Qt::LayoutDirection direction, QRect const * boundingRect, QRect const * logicalRect) {
  return new QRect(QStyle::visualRect(direction, *boundingRect, *logicalRect));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QStyle_visualPos(Qt::LayoutDirection direction, QRect const * boundingRect, QPoint const * logicalPos) {
  return new QPoint(QStyle::visualPos(direction, *boundingRect, *logicalPos));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_sliderPositionFromValue(int min, int max, int val, int space, bool upsideDown) {
  return QStyle::sliderPositionFromValue(min, max, val, space, upsideDown);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_sliderValueFromPosition(int min, int max, int pos, int space, bool upsideDown) {
  return QStyle::sliderValueFromPosition(min, max, pos, space, upsideDown);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_visualAlignment(Qt::LayoutDirection direction, int alignment) {
  return int(QStyle::visualAlignment(direction, QFlags< Qt::AlignmentFlag >(alignment)));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_alignedRect(Qt::LayoutDirection direction, int alignment, QSize const * size, QRect const * rectangle) {
  return new QRect(QStyle::alignedRect(direction, QFlags< Qt::AlignmentFlag >(alignment), *size, *rectangle));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_layoutSpacing(QStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, QStyleOption const * option, QWidget const * widget) {
  return this_ptr->layoutSpacing(control1, control2, orientation, option, widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_combinedLayoutSpacing(QStyle const * this_ptr, int controls1, int controls2, Qt::Orientation orientation, QStyleOption * option, QWidget * widget) {
  return this_ptr->combinedLayoutSpacing(QFlags< QSizePolicy::ControlType >(controls1), QFlags< QSizePolicy::ControlType >(controls2), orientation, option, widget);
}


RITUAL_EXPORT QStyle const * ctr_qt_widgets_ffi_QStyle_proxy(QStyle const * this_ptr) {
  return this_ptr->proxy();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTabBar_metaObject(QTabBar const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTabBar_qt_metacast(QTabBar * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_qt_metacall(QTabBar * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabBar_tr(char const * s, char const * c, int n) {
  return new QString(QTabBar::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabBar_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTabBar::trUtf8(s, c, n));
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_QTabBar_QTabBar(QWidget * parent) {
  return new QTabBar(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_dQTabBar(QTabBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QTabBar::Shape ctr_qt_widgets_ffi_QTabBar_shape(QTabBar const * this_ptr) {
  return this_ptr->shape();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setShape(QTabBar * this_ptr, QTabBar::Shape shape) {
  this_ptr->setShape(shape);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_addTab(QTabBar * this_ptr, QString const * text) {
  return this_ptr->addTab(*text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_addTab1(QTabBar * this_ptr, QIcon const * icon, QString const * text) {
  return this_ptr->addTab(*icon, *text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_insertTab(QTabBar * this_ptr, int index, QString const * text) {
  return this_ptr->insertTab(index, *text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_insertTab1(QTabBar * this_ptr, int index, QIcon const * icon, QString const * text) {
  return this_ptr->insertTab(index, *icon, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_removeTab(QTabBar * this_ptr, int index) {
  this_ptr->removeTab(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_moveTab(QTabBar * this_ptr, int from, int to) {
  this_ptr->moveTab(from, to);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_isTabEnabled(QTabBar const * this_ptr, int index) {
  return this_ptr->isTabEnabled(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabEnabled(QTabBar * this_ptr, int index, bool enabled) {
  this_ptr->setTabEnabled(index, enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_isTabVisible(QTabBar const * this_ptr, int index) {
  return this_ptr->isTabVisible(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabVisible(QTabBar * this_ptr, int index, bool visible) {
  this_ptr->setTabVisible(index, visible);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabBar_tabText(QTabBar const * this_ptr, int index) {
  return new QString(this_ptr->tabText(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabText(QTabBar * this_ptr, int index, QString const * text) {
  this_ptr->setTabText(index, *text);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QTabBar_tabTextColor(QTabBar const * this_ptr, int index) {
  return new QColor(this_ptr->tabTextColor(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabTextColor(QTabBar * this_ptr, int index, QColor const * color) {
  this_ptr->setTabTextColor(index, *color);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QTabBar_tabIcon(QTabBar const * this_ptr, int index) {
  return new QIcon(this_ptr->tabIcon(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabIcon(QTabBar * this_ptr, int index, QIcon const * icon) {
  this_ptr->setTabIcon(index, *icon);
}


RITUAL_EXPORT Qt::TextElideMode ctr_qt_widgets_ffi_QTabBar_elideMode(QTabBar const * this_ptr) {
  return this_ptr->elideMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setElideMode(QTabBar * this_ptr, Qt::TextElideMode mode) {
  this_ptr->setElideMode(mode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabToolTip(QTabBar * this_ptr, int index, QString const * tip) {
  this_ptr->setTabToolTip(index, *tip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabBar_tabToolTip(QTabBar const * this_ptr, int index) {
  return new QString(this_ptr->tabToolTip(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabWhatsThis(QTabBar * this_ptr, int index, QString const * text) {
  this_ptr->setTabWhatsThis(index, *text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabBar_tabWhatsThis(QTabBar const * this_ptr, int index) {
  return new QString(this_ptr->tabWhatsThis(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabData(QTabBar * this_ptr, int index, QVariant const * data) {
  this_ptr->setTabData(index, *data);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QTabBar_tabData(QTabBar const * this_ptr, int index) {
  return new QVariant(this_ptr->tabData(index));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QTabBar_tabRect(QTabBar const * this_ptr, int index) {
  return new QRect(this_ptr->tabRect(index));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_tabAt(QTabBar const * this_ptr, QPoint const * pos) {
  return this_ptr->tabAt(*pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_currentIndex(QTabBar const * this_ptr) {
  return this_ptr->currentIndex();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabBar_count(QTabBar const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTabBar_sizeHint(QTabBar const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTabBar_minimumSizeHint(QTabBar const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setDrawBase(QTabBar * this_ptr, bool drawTheBase) {
  this_ptr->setDrawBase(drawTheBase);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_drawBase(QTabBar const * this_ptr) {
  return this_ptr->drawBase();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTabBar_iconSize(QTabBar const * this_ptr) {
  return new QSize(this_ptr->iconSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setIconSize(QTabBar * this_ptr, QSize const * size) {
  this_ptr->setIconSize(*size);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_usesScrollButtons(QTabBar const * this_ptr) {
  return this_ptr->usesScrollButtons();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setUsesScrollButtons(QTabBar * this_ptr, bool useButtons) {
  this_ptr->setUsesScrollButtons(useButtons);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_tabsClosable(QTabBar const * this_ptr) {
  return this_ptr->tabsClosable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabsClosable(QTabBar * this_ptr, bool closable) {
  this_ptr->setTabsClosable(closable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setTabButton(QTabBar * this_ptr, int index, QTabBar::ButtonPosition position, QWidget * widget) {
  this_ptr->setTabButton(index, position, widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QTabBar_tabButton(QTabBar const * this_ptr, int index, QTabBar::ButtonPosition position) {
  return this_ptr->tabButton(index, position);
}


RITUAL_EXPORT QTabBar::SelectionBehavior ctr_qt_widgets_ffi_QTabBar_selectionBehaviorOnRemove(QTabBar const * this_ptr) {
  return this_ptr->selectionBehaviorOnRemove();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setSelectionBehaviorOnRemove(QTabBar * this_ptr, QTabBar::SelectionBehavior behavior) {
  this_ptr->setSelectionBehaviorOnRemove(behavior);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_expanding(QTabBar const * this_ptr) {
  return this_ptr->expanding();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setExpanding(QTabBar * this_ptr, bool enabled) {
  this_ptr->setExpanding(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_isMovable(QTabBar const * this_ptr) {
  return this_ptr->isMovable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setMovable(QTabBar * this_ptr, bool movable) {
  this_ptr->setMovable(movable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_documentMode(QTabBar const * this_ptr) {
  return this_ptr->documentMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setDocumentMode(QTabBar * this_ptr, bool set) {
  this_ptr->setDocumentMode(set);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_autoHide(QTabBar const * this_ptr) {
  return this_ptr->autoHide();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setAutoHide(QTabBar * this_ptr, bool hide) {
  this_ptr->setAutoHide(hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabBar_changeCurrentOnDrag(QTabBar const * this_ptr) {
  return this_ptr->changeCurrentOnDrag();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setChangeCurrentOnDrag(QTabBar * this_ptr, bool change) {
  this_ptr->setChangeCurrentOnDrag(change);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabBar_accessibleTabName(QTabBar const * this_ptr, int index) {
  return new QString(this_ptr->accessibleTabName(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setAccessibleTabName(QTabBar * this_ptr, int index, QString const * name) {
  this_ptr->setAccessibleTabName(index, *name);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabBar_setCurrentIndex(QTabBar * this_ptr, int index) {
  this_ptr->setCurrentIndex(index);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTabWidget_metaObject(QTabWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTabWidget_qt_metacast(QTabWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_qt_metacall(QTabWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabWidget_tr(char const * s, char const * c, int n) {
  return new QString(QTabWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTabWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_QTabWidget_QTabWidget(QWidget * parent) {
  return new QTabWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_dQTabWidget(QTabWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_addTab(QTabWidget * this_ptr, QWidget * widget, QString const * arg2) {
  return this_ptr->addTab(widget, *arg2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_addTab1(QTabWidget * this_ptr, QWidget * widget, QIcon const * icon, QString const * label) {
  return this_ptr->addTab(widget, *icon, *label);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_insertTab(QTabWidget * this_ptr, int index, QWidget * widget, QString const * arg3) {
  return this_ptr->insertTab(index, widget, *arg3);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_insertTab1(QTabWidget * this_ptr, int index, QWidget * widget, QIcon const * icon, QString const * label) {
  return this_ptr->insertTab(index, widget, *icon, *label);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_removeTab(QTabWidget * this_ptr, int index) {
  this_ptr->removeTab(index);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_isTabEnabled(QTabWidget const * this_ptr, int index) {
  return this_ptr->isTabEnabled(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabEnabled(QTabWidget * this_ptr, int index, bool enabled) {
  this_ptr->setTabEnabled(index, enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_isTabVisible(QTabWidget const * this_ptr, int index) {
  return this_ptr->isTabVisible(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabVisible(QTabWidget * this_ptr, int index, bool visible) {
  this_ptr->setTabVisible(index, visible);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabWidget_tabText(QTabWidget const * this_ptr, int index) {
  return new QString(this_ptr->tabText(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabText(QTabWidget * this_ptr, int index, QString const * text) {
  this_ptr->setTabText(index, *text);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QTabWidget_tabIcon(QTabWidget const * this_ptr, int index) {
  return new QIcon(this_ptr->tabIcon(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabIcon(QTabWidget * this_ptr, int index, QIcon const * icon) {
  this_ptr->setTabIcon(index, *icon);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabToolTip(QTabWidget * this_ptr, int index, QString const * tip) {
  this_ptr->setTabToolTip(index, *tip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabWidget_tabToolTip(QTabWidget const * this_ptr, int index) {
  return new QString(this_ptr->tabToolTip(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabWhatsThis(QTabWidget * this_ptr, int index, QString const * text) {
  this_ptr->setTabWhatsThis(index, *text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTabWidget_tabWhatsThis(QTabWidget const * this_ptr, int index) {
  return new QString(this_ptr->tabWhatsThis(index));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_currentIndex(QTabWidget const * this_ptr) {
  return this_ptr->currentIndex();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QTabWidget_currentWidget(QTabWidget const * this_ptr) {
  return this_ptr->currentWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QTabWidget_widget(QTabWidget const * this_ptr, int index) {
  return this_ptr->widget(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_indexOf(QTabWidget const * this_ptr, QWidget * widget) {
  return this_ptr->indexOf(widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_count(QTabWidget const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QTabWidget::TabPosition ctr_qt_widgets_ffi_QTabWidget_tabPosition(QTabWidget const * this_ptr) {
  return this_ptr->tabPosition();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabPosition(QTabWidget * this_ptr, QTabWidget::TabPosition position) {
  this_ptr->setTabPosition(position);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_tabsClosable(QTabWidget const * this_ptr) {
  return this_ptr->tabsClosable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabsClosable(QTabWidget * this_ptr, bool closeable) {
  this_ptr->setTabsClosable(closeable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_isMovable(QTabWidget const * this_ptr) {
  return this_ptr->isMovable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setMovable(QTabWidget * this_ptr, bool movable) {
  this_ptr->setMovable(movable);
}


RITUAL_EXPORT QTabWidget::TabShape ctr_qt_widgets_ffi_QTabWidget_tabShape(QTabWidget const * this_ptr) {
  return this_ptr->tabShape();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabShape(QTabWidget * this_ptr, QTabWidget::TabShape s) {
  this_ptr->setTabShape(s);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTabWidget_sizeHint(QTabWidget const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTabWidget_minimumSizeHint(QTabWidget const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTabWidget_heightForWidth(QTabWidget const * this_ptr, int width) {
  return this_ptr->heightForWidth(width);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_hasHeightForWidth(QTabWidget const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setCornerWidget(QTabWidget * this_ptr, QWidget * w, Qt::Corner corner) {
  this_ptr->setCornerWidget(w, corner);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QTabWidget_cornerWidget(QTabWidget const * this_ptr, Qt::Corner corner) {
  return this_ptr->cornerWidget(corner);
}


RITUAL_EXPORT Qt::TextElideMode ctr_qt_widgets_ffi_QTabWidget_elideMode(QTabWidget const * this_ptr) {
  return this_ptr->elideMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setElideMode(QTabWidget * this_ptr, Qt::TextElideMode mode) {
  this_ptr->setElideMode(mode);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTabWidget_iconSize(QTabWidget const * this_ptr) {
  return new QSize(this_ptr->iconSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setIconSize(QTabWidget * this_ptr, QSize const * size) {
  this_ptr->setIconSize(*size);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_usesScrollButtons(QTabWidget const * this_ptr) {
  return this_ptr->usesScrollButtons();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setUsesScrollButtons(QTabWidget * this_ptr, bool useButtons) {
  this_ptr->setUsesScrollButtons(useButtons);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_documentMode(QTabWidget const * this_ptr) {
  return this_ptr->documentMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setDocumentMode(QTabWidget * this_ptr, bool set) {
  this_ptr->setDocumentMode(set);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTabWidget_tabBarAutoHide(QTabWidget const * this_ptr) {
  return this_ptr->tabBarAutoHide();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setTabBarAutoHide(QTabWidget * this_ptr, bool enabled) {
  this_ptr->setTabBarAutoHide(enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_clear(QTabWidget * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_QTabWidget_tabBar(QTabWidget const * this_ptr) {
  return this_ptr->tabBar();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setCurrentIndex(QTabWidget * this_ptr, int index) {
  this_ptr->setCurrentIndex(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setCurrentWidget(QTabWidget * this_ptr, QWidget * widget) {
  this_ptr->setCurrentWidget(widget);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QRubberBand_metaObject(QRubberBand const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QRubberBand_qt_metacast(QRubberBand * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QRubberBand_qt_metacall(QRubberBand * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QRubberBand_tr(char const * s, char const * c, int n) {
  return new QString(QRubberBand::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QRubberBand_trUtf8(char const * s, char const * c, int n) {
  return new QString(QRubberBand::trUtf8(s, c, n));
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_QRubberBand_QRubberBand(QRubberBand::Shape arg1, QWidget * arg2) {
  return new QRubberBand(arg1, arg2);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRubberBand_dQRubberBand(QRubberBand * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QRubberBand::Shape ctr_qt_widgets_ffi_QRubberBand_shape(QRubberBand const * this_ptr) {
  return this_ptr->shape();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRubberBand_setGeometry(QRubberBand * this_ptr, QRect const * r) {
  this_ptr->setGeometry(*r);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRubberBand_setGeometry1(QRubberBand * this_ptr, int x, int y, int w, int h) {
  this_ptr->setGeometry(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRubberBand_move(QRubberBand * this_ptr, int x, int y) {
  this_ptr->move(x, y);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRubberBand_move1(QRubberBand * this_ptr, QPoint const * p) {
  this_ptr->move(*p);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRubberBand_resize(QRubberBand * this_ptr, int w, int h) {
  this_ptr->resize(w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRubberBand_resize1(QRubberBand * this_ptr, QSize const * s) {
  this_ptr->resize(*s);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFrame_metaObject(QFrame const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QFrame_qt_metacast(QFrame * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFrame_qt_metacall(QFrame * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFrame_tr(char const * s, char const * c, int n) {
  return new QString(QFrame::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFrame_trUtf8(char const * s, char const * c, int n) {
  return new QString(QFrame::trUtf8(s, c, n));
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_QFrame_QFrame(QWidget * parent, int f) {
  return new QFrame(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFrame_dQFrame(QFrame * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFrame_frameStyle(QFrame const * this_ptr) {
  return this_ptr->frameStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFrame_setFrameStyle(QFrame * this_ptr, int arg1) {
  this_ptr->setFrameStyle(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFrame_frameWidth(QFrame const * this_ptr) {
  return this_ptr->frameWidth();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QFrame_sizeHint(QFrame const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QFrame::Shape ctr_qt_widgets_ffi_QFrame_frameShape(QFrame const * this_ptr) {
  return this_ptr->frameShape();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFrame_setFrameShape(QFrame * this_ptr, QFrame::Shape arg1) {
  this_ptr->setFrameShape(arg1);
}


RITUAL_EXPORT QFrame::Shadow ctr_qt_widgets_ffi_QFrame_frameShadow(QFrame const * this_ptr) {
  return this_ptr->frameShadow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFrame_setFrameShadow(QFrame * this_ptr, QFrame::Shadow arg1) {
  this_ptr->setFrameShadow(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFrame_lineWidth(QFrame const * this_ptr) {
  return this_ptr->lineWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFrame_setLineWidth(QFrame * this_ptr, int arg1) {
  this_ptr->setLineWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFrame_midLineWidth(QFrame const * this_ptr) {
  return this_ptr->midLineWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFrame_setMidLineWidth(QFrame * this_ptr, int arg1) {
  this_ptr->setMidLineWidth(arg1);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QFrame_frameRect(QFrame const * this_ptr) {
  return new QRect(this_ptr->frameRect());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFrame_setFrameRect(QFrame * this_ptr, QRect const * arg1) {
  this_ptr->setFrameRect(*arg1);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_QStyleOption_QStyleOption(int version, int type) {
  return new QStyleOption(version, type);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_QStyleOption_QStyleOption1(QStyleOption const * other) {
  return new QStyleOption(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOption_dQStyleOption(QStyleOption * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOption_init(QStyleOption * this_ptr, QWidget const * w) {
  this_ptr->init(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOption_initFrom(QStyleOption * this_ptr, QWidget const * w) {
  this_ptr->initFrom(w);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_QStyleOption_operator_(QStyleOption * this_ptr, QStyleOption const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QStyleOptionFocusRect * ctr_qt_widgets_ffi_QStyleOptionFocusRect_QStyleOptionFocusRect() {
  return new QStyleOptionFocusRect();
}


RITUAL_EXPORT QStyleOptionFocusRect * ctr_qt_widgets_ffi_QStyleOptionFocusRect_QStyleOptionFocusRect1(QStyleOptionFocusRect const * other) {
  return new QStyleOptionFocusRect(*other);
}


RITUAL_EXPORT QStyleOptionFocusRect * ctr_qt_widgets_ffi_QStyleOptionFocusRect_operator_(QStyleOptionFocusRect * this_ptr, QStyleOptionFocusRect const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionFrame * ctr_qt_widgets_ffi_QStyleOptionFrame_QStyleOptionFrame() {
  return new QStyleOptionFrame();
}


RITUAL_EXPORT QStyleOptionFrame * ctr_qt_widgets_ffi_QStyleOptionFrame_QStyleOptionFrame1(QStyleOptionFrame const * other) {
  return new QStyleOptionFrame(*other);
}


RITUAL_EXPORT QStyleOptionFrame * ctr_qt_widgets_ffi_QStyleOptionFrame_operator_(QStyleOptionFrame * this_ptr, QStyleOptionFrame const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionTabWidgetFrame * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_QStyleOptionTabWidgetFrame() {
  return new QStyleOptionTabWidgetFrame();
}


RITUAL_EXPORT QStyleOptionTabWidgetFrame * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_QStyleOptionTabWidgetFrame1(QStyleOptionTabWidgetFrame const * other) {
  return new QStyleOptionTabWidgetFrame(*other);
}


RITUAL_EXPORT QStyleOptionTabWidgetFrame * ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_operator_(QStyleOptionTabWidgetFrame * this_ptr, QStyleOptionTabWidgetFrame const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionTabBarBase * ctr_qt_widgets_ffi_QStyleOptionTabBarBase_QStyleOptionTabBarBase() {
  return new QStyleOptionTabBarBase();
}


RITUAL_EXPORT QStyleOptionTabBarBase * ctr_qt_widgets_ffi_QStyleOptionTabBarBase_QStyleOptionTabBarBase1(QStyleOptionTabBarBase const * other) {
  return new QStyleOptionTabBarBase(*other);
}


RITUAL_EXPORT QStyleOptionTabBarBase * ctr_qt_widgets_ffi_QStyleOptionTabBarBase_operator_(QStyleOptionTabBarBase * this_ptr, QStyleOptionTabBarBase const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionHeader * ctr_qt_widgets_ffi_QStyleOptionHeader_QStyleOptionHeader() {
  return new QStyleOptionHeader();
}


RITUAL_EXPORT QStyleOptionHeader * ctr_qt_widgets_ffi_QStyleOptionHeader_QStyleOptionHeader1(QStyleOptionHeader const * other) {
  return new QStyleOptionHeader(*other);
}


RITUAL_EXPORT QStyleOptionHeader * ctr_qt_widgets_ffi_QStyleOptionHeader_operator_(QStyleOptionHeader * this_ptr, QStyleOptionHeader const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionButton * ctr_qt_widgets_ffi_QStyleOptionButton_QStyleOptionButton() {
  return new QStyleOptionButton();
}


RITUAL_EXPORT QStyleOptionButton * ctr_qt_widgets_ffi_QStyleOptionButton_QStyleOptionButton1(QStyleOptionButton const * other) {
  return new QStyleOptionButton(*other);
}


RITUAL_EXPORT QStyleOptionButton * ctr_qt_widgets_ffi_QStyleOptionButton_operator_(QStyleOptionButton * this_ptr, QStyleOptionButton const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionTab * ctr_qt_widgets_ffi_QStyleOptionTab_QStyleOptionTab() {
  return new QStyleOptionTab();
}


RITUAL_EXPORT QStyleOptionTab * ctr_qt_widgets_ffi_QStyleOptionTab_QStyleOptionTab1(QStyleOptionTab const * other) {
  return new QStyleOptionTab(*other);
}


RITUAL_EXPORT QStyleOptionTab * ctr_qt_widgets_ffi_QStyleOptionTab_operator_(QStyleOptionTab * this_ptr, QStyleOptionTab const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionTabV4 * ctr_qt_widgets_ffi_QStyleOptionTabV4_QStyleOptionTabV4() {
  return new QStyleOptionTabV4();
}


RITUAL_EXPORT QStyleOptionToolBar * ctr_qt_widgets_ffi_QStyleOptionToolBar_QStyleOptionToolBar() {
  return new QStyleOptionToolBar();
}


RITUAL_EXPORT QStyleOptionToolBar * ctr_qt_widgets_ffi_QStyleOptionToolBar_QStyleOptionToolBar1(QStyleOptionToolBar const * other) {
  return new QStyleOptionToolBar(*other);
}


RITUAL_EXPORT QStyleOptionToolBar * ctr_qt_widgets_ffi_QStyleOptionToolBar_operator_(QStyleOptionToolBar * this_ptr, QStyleOptionToolBar const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionProgressBar * ctr_qt_widgets_ffi_QStyleOptionProgressBar_QStyleOptionProgressBar() {
  return new QStyleOptionProgressBar();
}


RITUAL_EXPORT QStyleOptionProgressBar * ctr_qt_widgets_ffi_QStyleOptionProgressBar_QStyleOptionProgressBar1(QStyleOptionProgressBar const * other) {
  return new QStyleOptionProgressBar(*other);
}


RITUAL_EXPORT QStyleOptionProgressBar * ctr_qt_widgets_ffi_QStyleOptionProgressBar_operator_(QStyleOptionProgressBar * this_ptr, QStyleOptionProgressBar const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionMenuItem * ctr_qt_widgets_ffi_QStyleOptionMenuItem_QStyleOptionMenuItem() {
  return new QStyleOptionMenuItem();
}


RITUAL_EXPORT QStyleOptionMenuItem * ctr_qt_widgets_ffi_QStyleOptionMenuItem_QStyleOptionMenuItem1(QStyleOptionMenuItem const * other) {
  return new QStyleOptionMenuItem(*other);
}


RITUAL_EXPORT QStyleOptionMenuItem * ctr_qt_widgets_ffi_QStyleOptionMenuItem_operator_(QStyleOptionMenuItem * this_ptr, QStyleOptionMenuItem const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionDockWidget * ctr_qt_widgets_ffi_QStyleOptionDockWidget_QStyleOptionDockWidget() {
  return new QStyleOptionDockWidget();
}


RITUAL_EXPORT QStyleOptionDockWidget * ctr_qt_widgets_ffi_QStyleOptionDockWidget_QStyleOptionDockWidget1(QStyleOptionDockWidget const * other) {
  return new QStyleOptionDockWidget(*other);
}


RITUAL_EXPORT QStyleOptionDockWidget * ctr_qt_widgets_ffi_QStyleOptionDockWidget_operator_(QStyleOptionDockWidget * this_ptr, QStyleOptionDockWidget const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionViewItem * ctr_qt_widgets_ffi_QStyleOptionViewItem_QStyleOptionViewItem() {
  return new QStyleOptionViewItem();
}


RITUAL_EXPORT QStyleOptionViewItem * ctr_qt_widgets_ffi_QStyleOptionViewItem_QStyleOptionViewItem1(QStyleOptionViewItem const * other) {
  return new QStyleOptionViewItem(*other);
}


RITUAL_EXPORT QStyleOptionViewItem * ctr_qt_widgets_ffi_QStyleOptionViewItem_operator_(QStyleOptionViewItem * this_ptr, QStyleOptionViewItem const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionToolBox * ctr_qt_widgets_ffi_QStyleOptionToolBox_QStyleOptionToolBox() {
  return new QStyleOptionToolBox();
}


RITUAL_EXPORT QStyleOptionToolBox * ctr_qt_widgets_ffi_QStyleOptionToolBox_QStyleOptionToolBox1(QStyleOptionToolBox const * other) {
  return new QStyleOptionToolBox(*other);
}


RITUAL_EXPORT QStyleOptionToolBox * ctr_qt_widgets_ffi_QStyleOptionToolBox_operator_(QStyleOptionToolBox * this_ptr, QStyleOptionToolBox const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionRubberBand * ctr_qt_widgets_ffi_QStyleOptionRubberBand_QStyleOptionRubberBand() {
  return new QStyleOptionRubberBand();
}


RITUAL_EXPORT QStyleOptionRubberBand * ctr_qt_widgets_ffi_QStyleOptionRubberBand_QStyleOptionRubberBand1(QStyleOptionRubberBand const * other) {
  return new QStyleOptionRubberBand(*other);
}


RITUAL_EXPORT QStyleOptionRubberBand * ctr_qt_widgets_ffi_QStyleOptionRubberBand_operator_(QStyleOptionRubberBand * this_ptr, QStyleOptionRubberBand const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_QStyleOptionComplex_QStyleOptionComplex(int version, int type) {
  return new QStyleOptionComplex(version, type);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_QStyleOptionComplex_QStyleOptionComplex1(QStyleOptionComplex const * other) {
  return new QStyleOptionComplex(*other);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_QStyleOptionComplex_operator_(QStyleOptionComplex * this_ptr, QStyleOptionComplex const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionSlider * ctr_qt_widgets_ffi_QStyleOptionSlider_QStyleOptionSlider() {
  return new QStyleOptionSlider();
}


RITUAL_EXPORT QStyleOptionSlider * ctr_qt_widgets_ffi_QStyleOptionSlider_QStyleOptionSlider1(QStyleOptionSlider const * other) {
  return new QStyleOptionSlider(*other);
}


RITUAL_EXPORT QStyleOptionSlider * ctr_qt_widgets_ffi_QStyleOptionSlider_operator_(QStyleOptionSlider * this_ptr, QStyleOptionSlider const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionSpinBox * ctr_qt_widgets_ffi_QStyleOptionSpinBox_QStyleOptionSpinBox() {
  return new QStyleOptionSpinBox();
}


RITUAL_EXPORT QStyleOptionSpinBox * ctr_qt_widgets_ffi_QStyleOptionSpinBox_QStyleOptionSpinBox1(QStyleOptionSpinBox const * other) {
  return new QStyleOptionSpinBox(*other);
}


RITUAL_EXPORT QStyleOptionSpinBox * ctr_qt_widgets_ffi_QStyleOptionSpinBox_operator_(QStyleOptionSpinBox * this_ptr, QStyleOptionSpinBox const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionToolButton * ctr_qt_widgets_ffi_QStyleOptionToolButton_QStyleOptionToolButton() {
  return new QStyleOptionToolButton();
}


RITUAL_EXPORT QStyleOptionToolButton * ctr_qt_widgets_ffi_QStyleOptionToolButton_QStyleOptionToolButton1(QStyleOptionToolButton const * other) {
  return new QStyleOptionToolButton(*other);
}


RITUAL_EXPORT QStyleOptionToolButton * ctr_qt_widgets_ffi_QStyleOptionToolButton_operator_(QStyleOptionToolButton * this_ptr, QStyleOptionToolButton const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionComboBox * ctr_qt_widgets_ffi_QStyleOptionComboBox_QStyleOptionComboBox() {
  return new QStyleOptionComboBox();
}


RITUAL_EXPORT QStyleOptionComboBox * ctr_qt_widgets_ffi_QStyleOptionComboBox_QStyleOptionComboBox1(QStyleOptionComboBox const * other) {
  return new QStyleOptionComboBox(*other);
}


RITUAL_EXPORT QStyleOptionComboBox * ctr_qt_widgets_ffi_QStyleOptionComboBox_operator_(QStyleOptionComboBox * this_ptr, QStyleOptionComboBox const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionTitleBar * ctr_qt_widgets_ffi_QStyleOptionTitleBar_QStyleOptionTitleBar() {
  return new QStyleOptionTitleBar();
}


RITUAL_EXPORT QStyleOptionTitleBar * ctr_qt_widgets_ffi_QStyleOptionTitleBar_QStyleOptionTitleBar1(QStyleOptionTitleBar const * other) {
  return new QStyleOptionTitleBar(*other);
}


RITUAL_EXPORT QStyleOptionTitleBar * ctr_qt_widgets_ffi_QStyleOptionTitleBar_operator_(QStyleOptionTitleBar * this_ptr, QStyleOptionTitleBar const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionGroupBox * ctr_qt_widgets_ffi_QStyleOptionGroupBox_QStyleOptionGroupBox() {
  return new QStyleOptionGroupBox();
}


RITUAL_EXPORT QStyleOptionGroupBox * ctr_qt_widgets_ffi_QStyleOptionGroupBox_QStyleOptionGroupBox1(QStyleOptionGroupBox const * other) {
  return new QStyleOptionGroupBox(*other);
}


RITUAL_EXPORT QStyleOptionGroupBox * ctr_qt_widgets_ffi_QStyleOptionGroupBox_operator_(QStyleOptionGroupBox * this_ptr, QStyleOptionGroupBox const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionSizeGrip * ctr_qt_widgets_ffi_QStyleOptionSizeGrip_QStyleOptionSizeGrip() {
  return new QStyleOptionSizeGrip();
}


RITUAL_EXPORT QStyleOptionSizeGrip * ctr_qt_widgets_ffi_QStyleOptionSizeGrip_QStyleOptionSizeGrip1(QStyleOptionSizeGrip const * other) {
  return new QStyleOptionSizeGrip(*other);
}


RITUAL_EXPORT QStyleOptionSizeGrip * ctr_qt_widgets_ffi_QStyleOptionSizeGrip_operator_(QStyleOptionSizeGrip * this_ptr, QStyleOptionSizeGrip const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT QStyleOptionGraphicsItem * ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_QStyleOptionGraphicsItem() {
  return new QStyleOptionGraphicsItem();
}


RITUAL_EXPORT QStyleOptionGraphicsItem * ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_QStyleOptionGraphicsItem1(QStyleOptionGraphicsItem const * other) {
  return new QStyleOptionGraphicsItem(*other);
}


RITUAL_EXPORT QStyleOptionGraphicsItem * ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_operator_(QStyleOptionGraphicsItem * this_ptr, QStyleOptionGraphicsItem const * arg1) {
  return &this_ptr->operator=(*arg1);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_levelOfDetailFromTransform(QTransform const * worldTransform) {
  return QStyleOptionGraphicsItem::levelOfDetailFromTransform(*worldTransform);
}


RITUAL_EXPORT QStyleHintReturn * ctr_qt_widgets_ffi_QStyleHintReturn_QStyleHintReturn(int version, int type) {
  return new QStyleHintReturn(version, type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleHintReturn_dQStyleHintReturn(QStyleHintReturn * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyleHintReturnMask * ctr_qt_widgets_ffi_QStyleHintReturnMask_QStyleHintReturnMask() {
  return new QStyleHintReturnMask();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleHintReturnMask_dQStyleHintReturnMask(QStyleHintReturnMask * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyleHintReturnVariant * ctr_qt_widgets_ffi_QStyleHintReturnVariant_QStyleHintReturnVariant() {
  return new QStyleHintReturnVariant();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleHintReturnVariant_dQStyleHintReturnVariant(QStyleHintReturnVariant * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__4(QDebug const * debug, QStyleOption::OptionType const * optionType) {
  return new QDebug(operator<<(*debug, *optionType));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__5(QDebug const * debug, QStyleOption const * option) {
  return new QDebug(operator<<(*debug, *option));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractItemDelegate_metaObject(QAbstractItemDelegate const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAbstractItemDelegate_qt_metacast(QAbstractItemDelegate * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractItemDelegate_qt_metacall(QAbstractItemDelegate * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractItemDelegate_tr(char const * s, char const * c, int n) {
  return new QString(QAbstractItemDelegate::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractItemDelegate_trUtf8(char const * s, char const * c, int n) {
  return new QString(QAbstractItemDelegate::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemDelegate_dQAbstractItemDelegate(QAbstractItemDelegate * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemDelegate_paint(QAbstractItemDelegate const * this_ptr, QPainter * painter, QStyleOptionViewItem const * option, QModelIndex const * index) {
  this_ptr->paint(painter, *option, *index);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractItemDelegate_sizeHint(QAbstractItemDelegate const * this_ptr, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return new QSize(this_ptr->sizeHint(*option, *index));
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QAbstractItemDelegate_createEditor(QAbstractItemDelegate const * this_ptr, QWidget * parent, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return this_ptr->createEditor(parent, *option, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemDelegate_destroyEditor(QAbstractItemDelegate const * this_ptr, QWidget * editor, QModelIndex const * index) {
  this_ptr->destroyEditor(editor, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemDelegate_setEditorData(QAbstractItemDelegate const * this_ptr, QWidget * editor, QModelIndex const * index) {
  this_ptr->setEditorData(editor, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemDelegate_setModelData(QAbstractItemDelegate const * this_ptr, QWidget * editor, QAbstractItemModel * model, QModelIndex const * index) {
  this_ptr->setModelData(editor, model, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemDelegate_updateEditorGeometry(QAbstractItemDelegate const * this_ptr, QWidget * editor, QStyleOptionViewItem const * option, QModelIndex const * index) {
  this_ptr->updateEditorGeometry(editor, *option, *index);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemDelegate_editorEvent(QAbstractItemDelegate * this_ptr, QEvent * event, QAbstractItemModel * model, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return this_ptr->editorEvent(event, model, *option, *index);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractItemDelegate_elidedText(QFontMetrics const * fontMetrics, int width, Qt::TextElideMode mode, QString const * text) {
  return new QString(QAbstractItemDelegate::elidedText(*fontMetrics, width, mode, *text));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemDelegate_helpEvent(QAbstractItemDelegate * this_ptr, QHelpEvent * event, QAbstractItemView * view, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return this_ptr->helpEvent(event, view, *option, *index);
}


RITUAL_EXPORT QVector< int > * ctr_qt_widgets_ffi_QAbstractItemDelegate_paintingRoles(QAbstractItemDelegate const * this_ptr) {
  return new QVector< int >(this_ptr->paintingRoles());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractScrollArea_metaObject(QAbstractScrollArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAbstractScrollArea_qt_metacast(QAbstractScrollArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractScrollArea_qt_metacall(QAbstractScrollArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractScrollArea_tr(char const * s, char const * c, int n) {
  return new QString(QAbstractScrollArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractScrollArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(QAbstractScrollArea::trUtf8(s, c, n));
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_QAbstractScrollArea_QAbstractScrollArea(QWidget * parent) {
  return new QAbstractScrollArea(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_dQAbstractScrollArea(QAbstractScrollArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT Qt::ScrollBarPolicy ctr_qt_widgets_ffi_QAbstractScrollArea_verticalScrollBarPolicy(QAbstractScrollArea const * this_ptr) {
  return this_ptr->verticalScrollBarPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setVerticalScrollBarPolicy(QAbstractScrollArea * this_ptr, Qt::ScrollBarPolicy arg1) {
  this_ptr->setVerticalScrollBarPolicy(arg1);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_QAbstractScrollArea_verticalScrollBar(QAbstractScrollArea const * this_ptr) {
  return this_ptr->verticalScrollBar();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setVerticalScrollBar(QAbstractScrollArea * this_ptr, QScrollBar * scrollbar) {
  this_ptr->setVerticalScrollBar(scrollbar);
}


RITUAL_EXPORT Qt::ScrollBarPolicy ctr_qt_widgets_ffi_QAbstractScrollArea_horizontalScrollBarPolicy(QAbstractScrollArea const * this_ptr) {
  return this_ptr->horizontalScrollBarPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setHorizontalScrollBarPolicy(QAbstractScrollArea * this_ptr, Qt::ScrollBarPolicy arg1) {
  this_ptr->setHorizontalScrollBarPolicy(arg1);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_QAbstractScrollArea_horizontalScrollBar(QAbstractScrollArea const * this_ptr) {
  return this_ptr->horizontalScrollBar();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setHorizontalScrollBar(QAbstractScrollArea * this_ptr, QScrollBar * scrollbar) {
  this_ptr->setHorizontalScrollBar(scrollbar);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QAbstractScrollArea_cornerWidget(QAbstractScrollArea const * this_ptr) {
  return this_ptr->cornerWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setCornerWidget(QAbstractScrollArea * this_ptr, QWidget * widget) {
  this_ptr->setCornerWidget(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_addScrollBarWidget(QAbstractScrollArea * this_ptr, QWidget * widget, int alignment) {
  this_ptr->addScrollBarWidget(widget, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QAbstractScrollArea_scrollBarWidgets(QAbstractScrollArea * this_ptr, int alignment) {
  return new QList< QWidget * >(this_ptr->scrollBarWidgets(QFlags< Qt::AlignmentFlag >(alignment)));
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QAbstractScrollArea_viewport(QAbstractScrollArea const * this_ptr) {
  return this_ptr->viewport();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setViewport(QAbstractScrollArea * this_ptr, QWidget * widget) {
  this_ptr->setViewport(widget);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractScrollArea_maximumViewportSize(QAbstractScrollArea const * this_ptr) {
  return new QSize(this_ptr->maximumViewportSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractScrollArea_minimumSizeHint(QAbstractScrollArea const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractScrollArea_sizeHint(QAbstractScrollArea const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setupViewport(QAbstractScrollArea * this_ptr, QWidget * viewport) {
  this_ptr->setupViewport(viewport);
}


RITUAL_EXPORT QAbstractScrollArea::SizeAdjustPolicy ctr_qt_widgets_ffi_QAbstractScrollArea_sizeAdjustPolicy(QAbstractScrollArea const * this_ptr) {
  return this_ptr->sizeAdjustPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractScrollArea_setSizeAdjustPolicy(QAbstractScrollArea * this_ptr, QAbstractScrollArea::SizeAdjustPolicy policy) {
  this_ptr->setSizeAdjustPolicy(policy);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAbstractItemView_metaObject(QAbstractItemView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAbstractItemView_qt_metacast(QAbstractItemView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractItemView_qt_metacall(QAbstractItemView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractItemView_tr(char const * s, char const * c, int n) {
  return new QString(QAbstractItemView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAbstractItemView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QAbstractItemView::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_dQAbstractItemView(QAbstractItemView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setModel(QAbstractItemView * this_ptr, QAbstractItemModel * model) {
  this_ptr->setModel(model);
}


RITUAL_EXPORT QAbstractItemModel * ctr_qt_widgets_ffi_QAbstractItemView_model(QAbstractItemView const * this_ptr) {
  return this_ptr->model();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setSelectionModel(QAbstractItemView * this_ptr, QItemSelectionModel * selectionModel) {
  this_ptr->setSelectionModel(selectionModel);
}


RITUAL_EXPORT QItemSelectionModel * ctr_qt_widgets_ffi_QAbstractItemView_selectionModel(QAbstractItemView const * this_ptr) {
  return this_ptr->selectionModel();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setItemDelegate(QAbstractItemView * this_ptr, QAbstractItemDelegate * delegate) {
  this_ptr->setItemDelegate(delegate);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_QAbstractItemView_itemDelegate(QAbstractItemView const * this_ptr) {
  return this_ptr->itemDelegate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setSelectionMode(QAbstractItemView * this_ptr, QAbstractItemView::SelectionMode mode) {
  this_ptr->setSelectionMode(mode);
}


RITUAL_EXPORT QAbstractItemView::SelectionMode ctr_qt_widgets_ffi_QAbstractItemView_selectionMode(QAbstractItemView const * this_ptr) {
  return this_ptr->selectionMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setSelectionBehavior(QAbstractItemView * this_ptr, QAbstractItemView::SelectionBehavior behavior) {
  this_ptr->setSelectionBehavior(behavior);
}


RITUAL_EXPORT QAbstractItemView::SelectionBehavior ctr_qt_widgets_ffi_QAbstractItemView_selectionBehavior(QAbstractItemView const * this_ptr) {
  return this_ptr->selectionBehavior();
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QAbstractItemView_currentIndex(QAbstractItemView const * this_ptr) {
  return new QModelIndex(this_ptr->currentIndex());
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QAbstractItemView_rootIndex(QAbstractItemView const * this_ptr) {
  return new QModelIndex(this_ptr->rootIndex());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setEditTriggers(QAbstractItemView * this_ptr, int triggers) {
  this_ptr->setEditTriggers(QFlags< QAbstractItemView::EditTrigger >(triggers));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractItemView_editTriggers(QAbstractItemView const * this_ptr) {
  return int(this_ptr->editTriggers());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setVerticalScrollMode(QAbstractItemView * this_ptr, QAbstractItemView::ScrollMode mode) {
  this_ptr->setVerticalScrollMode(mode);
}


RITUAL_EXPORT QAbstractItemView::ScrollMode ctr_qt_widgets_ffi_QAbstractItemView_verticalScrollMode(QAbstractItemView const * this_ptr) {
  return this_ptr->verticalScrollMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_resetVerticalScrollMode(QAbstractItemView * this_ptr) {
  this_ptr->resetVerticalScrollMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setHorizontalScrollMode(QAbstractItemView * this_ptr, QAbstractItemView::ScrollMode mode) {
  this_ptr->setHorizontalScrollMode(mode);
}


RITUAL_EXPORT QAbstractItemView::ScrollMode ctr_qt_widgets_ffi_QAbstractItemView_horizontalScrollMode(QAbstractItemView const * this_ptr) {
  return this_ptr->horizontalScrollMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_resetHorizontalScrollMode(QAbstractItemView * this_ptr) {
  this_ptr->resetHorizontalScrollMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setAutoScroll(QAbstractItemView * this_ptr, bool enable) {
  this_ptr->setAutoScroll(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemView_hasAutoScroll(QAbstractItemView const * this_ptr) {
  return this_ptr->hasAutoScroll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setAutoScrollMargin(QAbstractItemView * this_ptr, int margin) {
  this_ptr->setAutoScrollMargin(margin);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractItemView_autoScrollMargin(QAbstractItemView const * this_ptr) {
  return this_ptr->autoScrollMargin();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setTabKeyNavigation(QAbstractItemView * this_ptr, bool enable) {
  this_ptr->setTabKeyNavigation(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemView_tabKeyNavigation(QAbstractItemView const * this_ptr) {
  return this_ptr->tabKeyNavigation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setDropIndicatorShown(QAbstractItemView * this_ptr, bool enable) {
  this_ptr->setDropIndicatorShown(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemView_showDropIndicator(QAbstractItemView const * this_ptr) {
  return this_ptr->showDropIndicator();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setDragEnabled(QAbstractItemView * this_ptr, bool enable) {
  this_ptr->setDragEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemView_dragEnabled(QAbstractItemView const * this_ptr) {
  return this_ptr->dragEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setDragDropOverwriteMode(QAbstractItemView * this_ptr, bool overwrite) {
  this_ptr->setDragDropOverwriteMode(overwrite);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemView_dragDropOverwriteMode(QAbstractItemView const * this_ptr) {
  return this_ptr->dragDropOverwriteMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setDragDropMode(QAbstractItemView * this_ptr, QAbstractItemView::DragDropMode behavior) {
  this_ptr->setDragDropMode(behavior);
}


RITUAL_EXPORT QAbstractItemView::DragDropMode ctr_qt_widgets_ffi_QAbstractItemView_dragDropMode(QAbstractItemView const * this_ptr) {
  return this_ptr->dragDropMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setDefaultDropAction(QAbstractItemView * this_ptr, Qt::DropAction dropAction) {
  this_ptr->setDefaultDropAction(dropAction);
}


RITUAL_EXPORT Qt::DropAction ctr_qt_widgets_ffi_QAbstractItemView_defaultDropAction(QAbstractItemView const * this_ptr) {
  return this_ptr->defaultDropAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setAlternatingRowColors(QAbstractItemView * this_ptr, bool enable) {
  this_ptr->setAlternatingRowColors(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemView_alternatingRowColors(QAbstractItemView const * this_ptr) {
  return this_ptr->alternatingRowColors();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setIconSize(QAbstractItemView * this_ptr, QSize const * size) {
  this_ptr->setIconSize(*size);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractItemView_iconSize(QAbstractItemView const * this_ptr) {
  return new QSize(this_ptr->iconSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setTextElideMode(QAbstractItemView * this_ptr, Qt::TextElideMode mode) {
  this_ptr->setTextElideMode(mode);
}


RITUAL_EXPORT Qt::TextElideMode ctr_qt_widgets_ffi_QAbstractItemView_textElideMode(QAbstractItemView const * this_ptr) {
  return this_ptr->textElideMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_keyboardSearch(QAbstractItemView * this_ptr, QString const * search) {
  this_ptr->keyboardSearch(*search);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QAbstractItemView_visualRect(QAbstractItemView const * this_ptr, QModelIndex const * index) {
  return new QRect(this_ptr->visualRect(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_scrollTo(QAbstractItemView * this_ptr, QModelIndex const * index, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollTo(*index, hint);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QAbstractItemView_indexAt(QAbstractItemView const * this_ptr, QPoint const * point) {
  return new QModelIndex(this_ptr->indexAt(*point));
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QAbstractItemView_sizeHintForIndex(QAbstractItemView const * this_ptr, QModelIndex const * index) {
  return new QSize(this_ptr->sizeHintForIndex(*index));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractItemView_sizeHintForRow(QAbstractItemView const * this_ptr, int row) {
  return this_ptr->sizeHintForRow(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAbstractItemView_sizeHintForColumn(QAbstractItemView const * this_ptr, int column) {
  return this_ptr->sizeHintForColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_openPersistentEditor(QAbstractItemView * this_ptr, QModelIndex const * index) {
  this_ptr->openPersistentEditor(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_closePersistentEditor(QAbstractItemView * this_ptr, QModelIndex const * index) {
  this_ptr->closePersistentEditor(*index);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractItemView_isPersistentEditorOpen(QAbstractItemView const * this_ptr, QModelIndex const * index) {
  return this_ptr->isPersistentEditorOpen(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setIndexWidget(QAbstractItemView * this_ptr, QModelIndex const * index, QWidget * widget) {
  this_ptr->setIndexWidget(*index, widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QAbstractItemView_indexWidget(QAbstractItemView const * this_ptr, QModelIndex const * index) {
  return this_ptr->indexWidget(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setItemDelegateForRow(QAbstractItemView * this_ptr, int row, QAbstractItemDelegate * delegate) {
  this_ptr->setItemDelegateForRow(row, delegate);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_QAbstractItemView_itemDelegateForRow(QAbstractItemView const * this_ptr, int row) {
  return this_ptr->itemDelegateForRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setItemDelegateForColumn(QAbstractItemView * this_ptr, int column, QAbstractItemDelegate * delegate) {
  this_ptr->setItemDelegateForColumn(column, delegate);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_QAbstractItemView_itemDelegateForColumn(QAbstractItemView const * this_ptr, int column) {
  return this_ptr->itemDelegateForColumn(column);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_QAbstractItemView_itemDelegate1(QAbstractItemView const * this_ptr, QModelIndex const * index) {
  return this_ptr->itemDelegate(*index);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QAbstractItemView_inputMethodQuery(QAbstractItemView const * this_ptr, Qt::InputMethodQuery query) {
  return new QVariant(this_ptr->inputMethodQuery(query));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_reset(QAbstractItemView * this_ptr) {
  this_ptr->reset();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setRootIndex(QAbstractItemView * this_ptr, QModelIndex const * index) {
  this_ptr->setRootIndex(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_doItemsLayout(QAbstractItemView * this_ptr) {
  this_ptr->doItemsLayout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_selectAll(QAbstractItemView * this_ptr) {
  this_ptr->selectAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_edit(QAbstractItemView * this_ptr, QModelIndex const * index) {
  this_ptr->edit(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_clearSelection(QAbstractItemView * this_ptr) {
  this_ptr->clearSelection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_setCurrentIndex(QAbstractItemView * this_ptr, QModelIndex const * index) {
  this_ptr->setCurrentIndex(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_scrollToTop(QAbstractItemView * this_ptr) {
  this_ptr->scrollToTop();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_scrollToBottom(QAbstractItemView * this_ptr) {
  this_ptr->scrollToBottom();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_update(QAbstractItemView * this_ptr, QModelIndex const * index) {
  this_ptr->update(*index);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_QAccessibleWidget_QAccessibleWidget(QWidget * o, QAccessible::Role r, QString const * name) {
  return new QAccessibleWidget(o, r, *name);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAccessibleWidget_isValid(QAccessibleWidget const * this_ptr) {
  return this_ptr->isValid();
}


RITUAL_EXPORT QWindow * ctr_qt_widgets_ffi_QAccessibleWidget_window(QAccessibleWidget const * this_ptr) {
  return this_ptr->window();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAccessibleWidget_childCount(QAccessibleWidget const * this_ptr) {
  return this_ptr->childCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAccessibleWidget_indexOfChild(QAccessibleWidget const * this_ptr, QAccessibleInterface const * child) {
  return this_ptr->indexOfChild(child);
}


RITUAL_EXPORT QVector< QPair< QAccessibleInterface *, QFlags< QAccessible::RelationFlag > > > * ctr_qt_widgets_ffi_QAccessibleWidget_relations(QAccessibleWidget const * this_ptr, int match) {
  return new QVector< QPair< QAccessibleInterface *, QFlags< QAccessible::RelationFlag > > >(this_ptr->relations(QFlags< QAccessible::RelationFlag >(match)));
}


RITUAL_EXPORT QAccessibleInterface * ctr_qt_widgets_ffi_QAccessibleWidget_focusChild(QAccessibleWidget const * this_ptr) {
  return this_ptr->focusChild();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QAccessibleWidget_rect(QAccessibleWidget const * this_ptr) {
  return new QRect(this_ptr->rect());
}


RITUAL_EXPORT QAccessibleInterface * ctr_qt_widgets_ffi_QAccessibleWidget_parent(QAccessibleWidget const * this_ptr) {
  return this_ptr->parent();
}


RITUAL_EXPORT QAccessibleInterface * ctr_qt_widgets_ffi_QAccessibleWidget_child(QAccessibleWidget const * this_ptr, int index) {
  return this_ptr->child(index);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAccessibleWidget_text(QAccessibleWidget const * this_ptr, QAccessible::Text t) {
  return new QString(this_ptr->text(t));
}


RITUAL_EXPORT QAccessible::Role ctr_qt_widgets_ffi_QAccessibleWidget_role(QAccessibleWidget const * this_ptr) {
  return this_ptr->role();
}


RITUAL_EXPORT QAccessible::State * ctr_qt_widgets_ffi_QAccessibleWidget_state(QAccessibleWidget const * this_ptr) {
  return new QAccessible::State(this_ptr->state());
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QAccessibleWidget_foregroundColor(QAccessibleWidget const * this_ptr) {
  return new QColor(this_ptr->foregroundColor());
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QAccessibleWidget_backgroundColor(QAccessibleWidget const * this_ptr) {
  return new QColor(this_ptr->backgroundColor());
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAccessibleWidget_interface_cast(QAccessibleWidget * this_ptr, QAccessible::InterfaceType t) {
  return this_ptr->interface_cast(t);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QAccessibleWidget_actionNames(QAccessibleWidget const * this_ptr) {
  return new QStringList(this_ptr->actionNames());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAccessibleWidget_doAction(QAccessibleWidget * this_ptr, QString const * actionName) {
  this_ptr->doAction(*actionName);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QAccessibleWidget_keyBindingsForAction(QAccessibleWidget const * this_ptr, QString const * actionName) {
  return new QStringList(this_ptr->keyBindingsForAction(*actionName));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QAction_metaObject(QAction const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QAction_qt_metacast(QAction * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QAction_qt_metacall(QAction * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAction_tr(char const * s, char const * c, int n) {
  return new QString(QAction::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAction_trUtf8(char const * s, char const * c, int n) {
  return new QString(QAction::trUtf8(s, c, n));
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QAction_QAction(QObject * parent) {
  return new QAction(parent);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QAction_QAction1(QString const * text, QObject * parent) {
  return new QAction(*text, parent);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QAction_QAction2(QIcon const * icon, QString const * text, QObject * parent) {
  return new QAction(*icon, *text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_dQAction(QAction * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setActionGroup(QAction * this_ptr, QActionGroup * group) {
  this_ptr->setActionGroup(group);
}


RITUAL_EXPORT QActionGroup * ctr_qt_widgets_ffi_QAction_actionGroup(QAction const * this_ptr) {
  return this_ptr->actionGroup();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setIcon(QAction * this_ptr, QIcon const * icon) {
  this_ptr->setIcon(*icon);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QAction_icon(QAction const * this_ptr) {
  return new QIcon(this_ptr->icon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setText(QAction * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAction_text(QAction const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setIconText(QAction * this_ptr, QString const * text) {
  this_ptr->setIconText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAction_iconText(QAction const * this_ptr) {
  return new QString(this_ptr->iconText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setToolTip(QAction * this_ptr, QString const * tip) {
  this_ptr->setToolTip(*tip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAction_toolTip(QAction const * this_ptr) {
  return new QString(this_ptr->toolTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setStatusTip(QAction * this_ptr, QString const * statusTip) {
  this_ptr->setStatusTip(*statusTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAction_statusTip(QAction const * this_ptr) {
  return new QString(this_ptr->statusTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setWhatsThis(QAction * this_ptr, QString const * what) {
  this_ptr->setWhatsThis(*what);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QAction_whatsThis(QAction const * this_ptr) {
  return new QString(this_ptr->whatsThis());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setPriority(QAction * this_ptr, QAction::Priority priority) {
  this_ptr->setPriority(priority);
}


RITUAL_EXPORT QAction::Priority ctr_qt_widgets_ffi_QAction_priority(QAction const * this_ptr) {
  return this_ptr->priority();
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QAction_menu(QAction const * this_ptr) {
  return this_ptr->menu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setMenu(QAction * this_ptr, QMenu * menu) {
  this_ptr->setMenu(menu);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setSeparator(QAction * this_ptr, bool b) {
  this_ptr->setSeparator(b);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_isSeparator(QAction const * this_ptr) {
  return this_ptr->isSeparator();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setShortcut(QAction * this_ptr, QKeySequence const * shortcut) {
  this_ptr->setShortcut(*shortcut);
}


RITUAL_EXPORT QKeySequence * ctr_qt_widgets_ffi_QAction_shortcut(QAction const * this_ptr) {
  return new QKeySequence(this_ptr->shortcut());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setShortcuts(QAction * this_ptr, QList< QKeySequence > const * shortcuts) {
  this_ptr->setShortcuts(*shortcuts);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setShortcuts1(QAction * this_ptr, QKeySequence::StandardKey arg1) {
  this_ptr->setShortcuts(arg1);
}


RITUAL_EXPORT QList< QKeySequence > * ctr_qt_widgets_ffi_QAction_shortcuts(QAction const * this_ptr) {
  return new QList< QKeySequence >(this_ptr->shortcuts());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setShortcutContext(QAction * this_ptr, Qt::ShortcutContext context) {
  this_ptr->setShortcutContext(context);
}


RITUAL_EXPORT Qt::ShortcutContext ctr_qt_widgets_ffi_QAction_shortcutContext(QAction const * this_ptr) {
  return this_ptr->shortcutContext();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setAutoRepeat(QAction * this_ptr, bool arg1) {
  this_ptr->setAutoRepeat(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_autoRepeat(QAction const * this_ptr) {
  return this_ptr->autoRepeat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setFont(QAction * this_ptr, QFont const * font) {
  this_ptr->setFont(*font);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QAction_font(QAction const * this_ptr) {
  return new QFont(this_ptr->font());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setCheckable(QAction * this_ptr, bool arg1) {
  this_ptr->setCheckable(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_isCheckable(QAction const * this_ptr) {
  return this_ptr->isCheckable();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QAction_data(QAction const * this_ptr) {
  return new QVariant(this_ptr->data());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setData(QAction * this_ptr, QVariant const * var) {
  this_ptr->setData(*var);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_isChecked(QAction const * this_ptr) {
  return this_ptr->isChecked();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_isEnabled(QAction const * this_ptr) {
  return this_ptr->isEnabled();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_isVisible(QAction const * this_ptr) {
  return this_ptr->isVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_activate(QAction * this_ptr, QAction::ActionEvent event) {
  this_ptr->activate(event);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_showStatusText(QAction * this_ptr, QWidget * widget) {
  return this_ptr->showStatusText(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setMenuRole(QAction * this_ptr, QAction::MenuRole menuRole) {
  this_ptr->setMenuRole(menuRole);
}


RITUAL_EXPORT QAction::MenuRole ctr_qt_widgets_ffi_QAction_menuRole(QAction const * this_ptr) {
  return this_ptr->menuRole();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setIconVisibleInMenu(QAction * this_ptr, bool visible) {
  this_ptr->setIconVisibleInMenu(visible);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_isIconVisibleInMenu(QAction const * this_ptr) {
  return this_ptr->isIconVisibleInMenu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setShortcutVisibleInContextMenu(QAction * this_ptr, bool show) {
  this_ptr->setShortcutVisibleInContextMenu(show);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_isShortcutVisibleInContextMenu(QAction const * this_ptr) {
  return this_ptr->isShortcutVisibleInContextMenu();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QAction_parentWidget(QAction const * this_ptr) {
  return this_ptr->parentWidget();
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QAction_associatedWidgets(QAction const * this_ptr) {
  return new QList< QWidget * >(this_ptr->associatedWidgets());
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QAction_associatedGraphicsWidgets(QAction const * this_ptr) {
  return new QList< QGraphicsWidget * >(this_ptr->associatedGraphicsWidgets());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_trigger(QAction * this_ptr) {
  this_ptr->trigger();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_hover(QAction * this_ptr) {
  this_ptr->hover();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setChecked(QAction * this_ptr, bool arg1) {
  this_ptr->setChecked(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_toggle(QAction * this_ptr) {
  this_ptr->toggle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setEnabled(QAction * this_ptr, bool arg1) {
  this_ptr->setEnabled(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setDisabled(QAction * this_ptr, bool b) {
  this_ptr->setDisabled(b);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAction_setVisible(QAction * this_ptr, bool arg1) {
  this_ptr->setVisible(arg1);
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__6(QDebug const * arg1, QAction const * arg2) {
  return new QDebug(operator<<(*arg1, arg2));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QActionGroup_metaObject(QActionGroup const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QActionGroup_qt_metacast(QActionGroup * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QActionGroup_qt_metacall(QActionGroup * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QActionGroup_tr(char const * s, char const * c, int n) {
  return new QString(QActionGroup::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QActionGroup_trUtf8(char const * s, char const * c, int n) {
  return new QString(QActionGroup::trUtf8(s, c, n));
}


RITUAL_EXPORT QActionGroup * ctr_qt_widgets_ffi_QActionGroup_QActionGroup(QObject * parent) {
  return new QActionGroup(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QActionGroup_dQActionGroup(QActionGroup * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QActionGroup_addAction(QActionGroup * this_ptr, QAction * a) {
  return this_ptr->addAction(a);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QActionGroup_addAction1(QActionGroup * this_ptr, QString const * text) {
  return this_ptr->addAction(*text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QActionGroup_addAction2(QActionGroup * this_ptr, QIcon const * icon, QString const * text) {
  return this_ptr->addAction(*icon, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QActionGroup_removeAction(QActionGroup * this_ptr, QAction * a) {
  this_ptr->removeAction(a);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QActionGroup_actions(QActionGroup const * this_ptr) {
  return new QList< QAction * >(this_ptr->actions());
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QActionGroup_checkedAction(QActionGroup const * this_ptr) {
  return this_ptr->checkedAction();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QActionGroup_isExclusive(QActionGroup const * this_ptr) {
  return this_ptr->isExclusive();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QActionGroup_isEnabled(QActionGroup const * this_ptr) {
  return this_ptr->isEnabled();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QActionGroup_isVisible(QActionGroup const * this_ptr) {
  return this_ptr->isVisible();
}


RITUAL_EXPORT QActionGroup::ExclusionPolicy ctr_qt_widgets_ffi_QActionGroup_exclusionPolicy(QActionGroup const * this_ptr) {
  return this_ptr->exclusionPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QActionGroup_setEnabled(QActionGroup * this_ptr, bool arg1) {
  this_ptr->setEnabled(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QActionGroup_setDisabled(QActionGroup * this_ptr, bool b) {
  this_ptr->setDisabled(b);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QActionGroup_setVisible(QActionGroup * this_ptr, bool arg1) {
  this_ptr->setVisible(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QActionGroup_setExclusive(QActionGroup * this_ptr, bool arg1) {
  this_ptr->setExclusive(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QActionGroup_setExclusionPolicy(QActionGroup * this_ptr, QActionGroup::ExclusionPolicy policy) {
  this_ptr->setExclusionPolicy(policy);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QApplication_metaObject(QApplication const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QApplication_qt_metacast(QApplication * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_qt_metacall(QApplication * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QApplication_tr(char const * s, char const * c, int n) {
  return new QString(QApplication::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QApplication_trUtf8(char const * s, char const * c, int n) {
  return new QString(QApplication::trUtf8(s, c, n));
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_QApplication_QApplication(int * argc, char * * argv, int arg3) {
  return new QApplication(*argc, argv, arg3);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_dQApplication(QApplication * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QApplication_style() {
  return QApplication::style();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setStyle(QStyle * arg1) {
  QApplication::setStyle(arg1);
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QApplication_setStyle1(QString const * arg1) {
  return QApplication::setStyle(*arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_colorSpec() {
  return QApplication::colorSpec();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setColorSpec(int arg1) {
  QApplication::setColorSpec(arg1);
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QApplication_palette(QWidget const * arg1) {
  return new QPalette(QApplication::palette(arg1));
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QApplication_palette1(char const * className) {
  return new QPalette(QApplication::palette(className));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setPalette(QPalette const * arg1, char const * className) {
  QApplication::setPalette(*arg1, className);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QApplication_font() {
  return new QFont(QApplication::font());
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QApplication_font1(QWidget const * arg1) {
  return new QFont(QApplication::font(arg1));
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QApplication_font2(char const * className) {
  return new QFont(QApplication::font(className));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setFont(QFont const * arg1, char const * className) {
  QApplication::setFont(*arg1, className);
}


RITUAL_EXPORT QFontMetrics * ctr_qt_widgets_ffi_QApplication_fontMetrics() {
  return new QFontMetrics(QApplication::fontMetrics());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setWindowIcon(QIcon const * icon) {
  QApplication::setWindowIcon(*icon);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QApplication_windowIcon() {
  return new QIcon(QApplication::windowIcon());
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QApplication_allWidgets() {
  return new QList< QWidget * >(QApplication::allWidgets());
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QApplication_topLevelWidgets() {
  return new QList< QWidget * >(QApplication::topLevelWidgets());
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_QApplication_desktop() {
  return QApplication::desktop();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_activePopupWidget() {
  return QApplication::activePopupWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_activeModalWidget() {
  return QApplication::activeModalWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_focusWidget() {
  return QApplication::focusWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_activeWindow() {
  return QApplication::activeWindow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setActiveWindow(QWidget * act) {
  QApplication::setActiveWindow(act);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_widgetAt(QPoint const * p) {
  return QApplication::widgetAt(*p);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_widgetAt1(int x, int y) {
  return QApplication::widgetAt(x, y);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_topLevelAt(QPoint const * p) {
  return QApplication::topLevelAt(*p);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QApplication_topLevelAt1(int x, int y) {
  return QApplication::topLevelAt(x, y);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_beep() {
  QApplication::beep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_alert(QWidget * widget, int duration) {
  QApplication::alert(widget, duration);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setCursorFlashTime(int arg1) {
  QApplication::setCursorFlashTime(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_cursorFlashTime() {
  return QApplication::cursorFlashTime();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setDoubleClickInterval(int arg1) {
  QApplication::setDoubleClickInterval(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_doubleClickInterval() {
  return QApplication::doubleClickInterval();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setKeyboardInputInterval(int arg1) {
  QApplication::setKeyboardInputInterval(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_keyboardInputInterval() {
  return QApplication::keyboardInputInterval();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setWheelScrollLines(int arg1) {
  QApplication::setWheelScrollLines(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_wheelScrollLines() {
  return QApplication::wheelScrollLines();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setGlobalStrut(QSize const * arg1) {
  QApplication::setGlobalStrut(*arg1);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QApplication_globalStrut() {
  return new QSize(QApplication::globalStrut());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setStartDragTime(int ms) {
  QApplication::setStartDragTime(ms);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_startDragTime() {
  return QApplication::startDragTime();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setStartDragDistance(int l) {
  QApplication::setStartDragDistance(l);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_startDragDistance() {
  return QApplication::startDragDistance();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QApplication_isEffectEnabled(Qt::UIEffect arg1) {
  return QApplication::isEffectEnabled(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setEffectEnabled(Qt::UIEffect arg1, bool enable) {
  QApplication::setEffectEnabled(arg1, enable);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QApplication_exec() {
  return QApplication::exec();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QApplication_notify(QApplication * this_ptr, QObject * arg1, QEvent * arg2) {
  return this_ptr->notify(arg1, arg2);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QApplication_styleSheet(QApplication const * this_ptr) {
  return new QString(this_ptr->styleSheet());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setStyleSheet(QApplication * this_ptr, QString const * sheet) {
  this_ptr->setStyleSheet(*sheet);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setAutoSipEnabled(QApplication * this_ptr, bool enabled) {
  this_ptr->setAutoSipEnabled(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QApplication_autoSipEnabled(QApplication const * this_ptr) {
  return this_ptr->autoSipEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_closeAllWindows() {
  QApplication::closeAllWindows();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_aboutQt() {
  QApplication::aboutQt();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayoutItem_dQLayoutItem(QLayoutItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayoutItem_sizeHint(QLayoutItem const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayoutItem_minimumSize(QLayoutItem const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayoutItem_maximumSize(QLayoutItem const * this_ptr) {
  return new QSize(this_ptr->maximumSize());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayoutItem_expandingDirections(QLayoutItem const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayoutItem_setGeometry(QLayoutItem * this_ptr, QRect const * arg1) {
  this_ptr->setGeometry(*arg1);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QLayoutItem_geometry(QLayoutItem const * this_ptr) {
  return new QRect(this_ptr->geometry());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLayoutItem_isEmpty(QLayoutItem const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLayoutItem_hasHeightForWidth(QLayoutItem const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayoutItem_heightForWidth(QLayoutItem const * this_ptr, int arg1) {
  return this_ptr->heightForWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayoutItem_minimumHeightForWidth(QLayoutItem const * this_ptr, int arg1) {
  return this_ptr->minimumHeightForWidth(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayoutItem_invalidate(QLayoutItem * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QLayoutItem_widget(QLayoutItem * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_QLayoutItem_layout(QLayoutItem * this_ptr) {
  return this_ptr->layout();
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_QLayoutItem_spacerItem(QLayoutItem * this_ptr) {
  return this_ptr->spacerItem();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayoutItem_alignment(QLayoutItem const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayoutItem_setAlignment(QLayoutItem * this_ptr, int a) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(a));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayoutItem_controlTypes(QLayoutItem const * this_ptr) {
  return int(this_ptr->controlTypes());
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_QSpacerItem_QSpacerItem(int w, int h, QSizePolicy::Policy hData, QSizePolicy::Policy vData) {
  return new QSpacerItem(w, h, hData, vData);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpacerItem_dQSpacerItem(QSpacerItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpacerItem_changeSize(QSpacerItem * this_ptr, int w, int h, QSizePolicy::Policy hData, QSizePolicy::Policy vData) {
  this_ptr->changeSize(w, h, hData, vData);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSpacerItem_sizeHint(QSpacerItem const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSpacerItem_minimumSize(QSpacerItem const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSpacerItem_maximumSize(QSpacerItem const * this_ptr) {
  return new QSize(this_ptr->maximumSize());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSpacerItem_expandingDirections(QSpacerItem const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSpacerItem_isEmpty(QSpacerItem const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpacerItem_setGeometry(QSpacerItem * this_ptr, QRect const * arg1) {
  this_ptr->setGeometry(*arg1);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QSpacerItem_geometry(QSpacerItem const * this_ptr) {
  return new QRect(this_ptr->geometry());
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_QSpacerItem_spacerItem(QSpacerItem * this_ptr) {
  return this_ptr->spacerItem();
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QSpacerItem_sizePolicy(QSpacerItem const * this_ptr) {
  return new QSizePolicy(this_ptr->sizePolicy());
}


RITUAL_EXPORT QWidgetItem * ctr_qt_widgets_ffi_QWidgetItem_QWidgetItem(QWidget * w) {
  return new QWidgetItem(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidgetItem_dQWidgetItem(QWidgetItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidgetItem_sizeHint(QWidgetItem const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidgetItem_minimumSize(QWidgetItem const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWidgetItem_maximumSize(QWidgetItem const * this_ptr) {
  return new QSize(this_ptr->maximumSize());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidgetItem_expandingDirections(QWidgetItem const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidgetItem_isEmpty(QWidgetItem const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidgetItem_setGeometry(QWidgetItem * this_ptr, QRect const * arg1) {
  this_ptr->setGeometry(*arg1);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QWidgetItem_geometry(QWidgetItem const * this_ptr) {
  return new QRect(this_ptr->geometry());
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidgetItem_widget(QWidgetItem * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWidgetItem_hasHeightForWidth(QWidgetItem const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidgetItem_heightForWidth(QWidgetItem const * this_ptr, int arg1) {
  return this_ptr->heightForWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidgetItem_controlTypes(QWidgetItem const * this_ptr) {
  return int(this_ptr->controlTypes());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLayout_metaObject(QLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QLayout_qt_metacast(QLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_qt_metacall(QLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLayout_tr(char const * s, char const * c, int n) {
  return new QString(QLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_dQLayout(QLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_margin(QLayout const * this_ptr) {
  return this_ptr->margin();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setMargin(QLayout * this_ptr, int arg1) {
  this_ptr->setMargin(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_spacing(QLayout const * this_ptr) {
  return this_ptr->spacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setSpacing(QLayout * this_ptr, int arg1) {
  this_ptr->setSpacing(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setContentsMargins(QLayout * this_ptr, int left, int top, int right, int bottom) {
  this_ptr->setContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setContentsMargins1(QLayout * this_ptr, QMargins const * margins) {
  this_ptr->setContentsMargins(*margins);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_getContentsMargins(QLayout const * this_ptr, int * left, int * top, int * right, int * bottom) {
  this_ptr->getContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT QMargins * ctr_qt_widgets_ffi_QLayout_contentsMargins(QLayout const * this_ptr) {
  return new QMargins(this_ptr->contentsMargins());
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QLayout_contentsRect(QLayout const * this_ptr) {
  return new QRect(this_ptr->contentsRect());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLayout_setAlignment(QLayout * this_ptr, QWidget * w, int alignment) {
  return this_ptr->setAlignment(w, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLayout_setAlignment1(QLayout * this_ptr, QLayout * l, int alignment) {
  return this_ptr->setAlignment(l, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setSizeConstraint(QLayout * this_ptr, QLayout::SizeConstraint arg1) {
  this_ptr->setSizeConstraint(arg1);
}


RITUAL_EXPORT QLayout::SizeConstraint ctr_qt_widgets_ffi_QLayout_sizeConstraint(QLayout const * this_ptr) {
  return this_ptr->sizeConstraint();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setMenuBar(QLayout * this_ptr, QWidget * w) {
  this_ptr->setMenuBar(w);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QLayout_menuBar(QLayout const * this_ptr) {
  return this_ptr->menuBar();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QLayout_parentWidget(QLayout const * this_ptr) {
  return this_ptr->parentWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_invalidate(QLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QLayout_geometry(QLayout const * this_ptr) {
  return new QRect(this_ptr->geometry());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLayout_activate(QLayout * this_ptr) {
  return this_ptr->activate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_update(QLayout * this_ptr) {
  this_ptr->update();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_addWidget(QLayout * this_ptr, QWidget * w) {
  this_ptr->addWidget(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_addItem(QLayout * this_ptr, QLayoutItem * arg1) {
  this_ptr->addItem(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_removeWidget(QLayout * this_ptr, QWidget * w) {
  this_ptr->removeWidget(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_removeItem(QLayout * this_ptr, QLayoutItem * arg1) {
  this_ptr->removeItem(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_expandingDirections(QLayout const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayout_minimumSize(QLayout const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayout_maximumSize(QLayout const * this_ptr) {
  return new QSize(this_ptr->maximumSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setGeometry(QLayout * this_ptr, QRect const * arg1) {
  this_ptr->setGeometry(*arg1);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QLayout_itemAt(QLayout const * this_ptr, int index) {
  return this_ptr->itemAt(index);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QLayout_takeAt(QLayout * this_ptr, int index) {
  return this_ptr->takeAt(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_indexOf(QLayout const * this_ptr, QWidget * arg1) {
  return this_ptr->indexOf(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_indexOf1(QLayout const * this_ptr, QLayoutItem * arg1) {
  return this_ptr->indexOf(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_count(QLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLayout_isEmpty(QLayout const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_controlTypes(QLayout const * this_ptr) {
  return int(this_ptr->controlTypes());
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QLayout_replaceWidget(QLayout * this_ptr, QWidget * from, QWidget * to, int options) {
  return this_ptr->replaceWidget(from, to, QFlags< Qt::FindChildOption >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLayout_totalHeightForWidth(QLayout const * this_ptr, int w) {
  return this_ptr->totalHeightForWidth(w);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayout_totalMinimumSize(QLayout const * this_ptr) {
  return new QSize(this_ptr->totalMinimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayout_totalMaximumSize(QLayout const * this_ptr) {
  return new QSize(this_ptr->totalMaximumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayout_totalSizeHint(QLayout const * this_ptr) {
  return new QSize(this_ptr->totalSizeHint());
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_QLayout_layout(QLayout * this_ptr) {
  return this_ptr->layout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLayout_setEnabled(QLayout * this_ptr, bool arg1) {
  this_ptr->setEnabled(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLayout_isEnabled(QLayout const * this_ptr) {
  return this_ptr->isEnabled();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLayout_closestAcceptableSize(QWidget const * w, QSize const * s) {
  return new QSize(QLayout::closestAcceptableSize(w, *s));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGridLayout_metaObject(QGridLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGridLayout_qt_metacast(QGridLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_qt_metacall(QGridLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGridLayout_tr(char const * s, char const * c, int n) {
  return new QString(QGridLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGridLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGridLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_QGridLayout_QGridLayout(QWidget * parent) {
  return new QGridLayout(parent);
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_QGridLayout_QGridLayout1() {
  return new QGridLayout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_dQGridLayout(QGridLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QGridLayout_sizeHint(QGridLayout const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QGridLayout_minimumSize(QGridLayout const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QGridLayout_maximumSize(QGridLayout const * this_ptr) {
  return new QSize(this_ptr->maximumSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setHorizontalSpacing(QGridLayout * this_ptr, int spacing) {
  this_ptr->setHorizontalSpacing(spacing);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_horizontalSpacing(QGridLayout const * this_ptr) {
  return this_ptr->horizontalSpacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setVerticalSpacing(QGridLayout * this_ptr, int spacing) {
  this_ptr->setVerticalSpacing(spacing);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_verticalSpacing(QGridLayout const * this_ptr) {
  return this_ptr->verticalSpacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setSpacing(QGridLayout * this_ptr, int spacing) {
  this_ptr->setSpacing(spacing);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_spacing(QGridLayout const * this_ptr) {
  return this_ptr->spacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setRowStretch(QGridLayout * this_ptr, int row, int stretch) {
  this_ptr->setRowStretch(row, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setColumnStretch(QGridLayout * this_ptr, int column, int stretch) {
  this_ptr->setColumnStretch(column, stretch);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_rowStretch(QGridLayout const * this_ptr, int row) {
  return this_ptr->rowStretch(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_columnStretch(QGridLayout const * this_ptr, int column) {
  return this_ptr->columnStretch(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setRowMinimumHeight(QGridLayout * this_ptr, int row, int minSize) {
  this_ptr->setRowMinimumHeight(row, minSize);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setColumnMinimumWidth(QGridLayout * this_ptr, int column, int minSize) {
  this_ptr->setColumnMinimumWidth(column, minSize);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_rowMinimumHeight(QGridLayout const * this_ptr, int row) {
  return this_ptr->rowMinimumHeight(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_columnMinimumWidth(QGridLayout const * this_ptr, int column) {
  return this_ptr->columnMinimumWidth(column);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_columnCount(QGridLayout const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_rowCount(QGridLayout const * this_ptr) {
  return this_ptr->rowCount();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QGridLayout_cellRect(QGridLayout const * this_ptr, int row, int column) {
  return new QRect(this_ptr->cellRect(row, column));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGridLayout_hasHeightForWidth(QGridLayout const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_heightForWidth(QGridLayout const * this_ptr, int arg1) {
  return this_ptr->heightForWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_minimumHeightForWidth(QGridLayout const * this_ptr, int arg1) {
  return this_ptr->minimumHeightForWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_expandingDirections(QGridLayout const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_invalidate(QGridLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addWidget(QGridLayout * this_ptr, QWidget * w) {
  this_ptr->addWidget(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addWidget1(QGridLayout * this_ptr, QWidget * arg1, int row, int column, int arg4) {
  this_ptr->addWidget(arg1, row, column, QFlags< Qt::AlignmentFlag >(arg4));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addWidget2(QGridLayout * this_ptr, QWidget * arg1, int row, int column, int rowSpan, int columnSpan, int arg6) {
  this_ptr->addWidget(arg1, row, column, rowSpan, columnSpan, QFlags< Qt::AlignmentFlag >(arg6));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addLayout(QGridLayout * this_ptr, QLayout * arg1, int row, int column, int arg4) {
  this_ptr->addLayout(arg1, row, column, QFlags< Qt::AlignmentFlag >(arg4));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addLayout1(QGridLayout * this_ptr, QLayout * arg1, int row, int column, int rowSpan, int columnSpan, int arg6) {
  this_ptr->addLayout(arg1, row, column, rowSpan, columnSpan, QFlags< Qt::AlignmentFlag >(arg6));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setOriginCorner(QGridLayout * this_ptr, Qt::Corner arg1) {
  this_ptr->setOriginCorner(arg1);
}


RITUAL_EXPORT Qt::Corner ctr_qt_widgets_ffi_QGridLayout_originCorner(QGridLayout const * this_ptr) {
  return this_ptr->originCorner();
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QGridLayout_itemAt(QGridLayout const * this_ptr, int index) {
  return this_ptr->itemAt(index);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QGridLayout_itemAtPosition(QGridLayout const * this_ptr, int row, int column) {
  return this_ptr->itemAtPosition(row, column);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QGridLayout_takeAt(QGridLayout * this_ptr, int index) {
  return this_ptr->takeAt(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGridLayout_count(QGridLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setGeometry(QGridLayout * this_ptr, QRect const * arg1) {
  this_ptr->setGeometry(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addItem(QGridLayout * this_ptr, QLayoutItem * item, int row, int column, int rowSpan, int columnSpan, int arg6) {
  this_ptr->addItem(item, row, column, rowSpan, columnSpan, QFlags< Qt::AlignmentFlag >(arg6));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_setDefaultPositioning(QGridLayout * this_ptr, int n, Qt::Orientation orient) {
  this_ptr->setDefaultPositioning(n, orient);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_getItemPosition(QGridLayout const * this_ptr, int idx, int * row, int * column, int * rowSpan, int * columnSpan) {
  this_ptr->getItemPosition(idx, row, column, rowSpan, columnSpan);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QBoxLayout_metaObject(QBoxLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QBoxLayout_qt_metacast(QBoxLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QBoxLayout_qt_metacall(QBoxLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QBoxLayout_tr(char const * s, char const * c, int n) {
  return new QString(QBoxLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QBoxLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QBoxLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_QBoxLayout_QBoxLayout(QBoxLayout::Direction arg1, QWidget * parent) {
  return new QBoxLayout(arg1, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_dQBoxLayout(QBoxLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QBoxLayout::Direction ctr_qt_widgets_ffi_QBoxLayout_direction(QBoxLayout const * this_ptr) {
  return this_ptr->direction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_setDirection(QBoxLayout * this_ptr, QBoxLayout::Direction arg1) {
  this_ptr->setDirection(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addSpacing(QBoxLayout * this_ptr, int size) {
  this_ptr->addSpacing(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addStretch(QBoxLayout * this_ptr, int stretch) {
  this_ptr->addStretch(stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addSpacerItem(QBoxLayout * this_ptr, QSpacerItem * spacerItem) {
  this_ptr->addSpacerItem(spacerItem);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addWidget(QBoxLayout * this_ptr, QWidget * arg1, int stretch, int alignment) {
  this_ptr->addWidget(arg1, stretch, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addLayout(QBoxLayout * this_ptr, QLayout * layout, int stretch) {
  this_ptr->addLayout(layout, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addStrut(QBoxLayout * this_ptr, int arg1) {
  this_ptr->addStrut(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addItem(QBoxLayout * this_ptr, QLayoutItem * arg1) {
  this_ptr->addItem(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertSpacing(QBoxLayout * this_ptr, int index, int size) {
  this_ptr->insertSpacing(index, size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertStretch(QBoxLayout * this_ptr, int index, int stretch) {
  this_ptr->insertStretch(index, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertSpacerItem(QBoxLayout * this_ptr, int index, QSpacerItem * spacerItem) {
  this_ptr->insertSpacerItem(index, spacerItem);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertWidget(QBoxLayout * this_ptr, int index, QWidget * widget, int stretch, int alignment) {
  this_ptr->insertWidget(index, widget, stretch, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertLayout(QBoxLayout * this_ptr, int index, QLayout * layout, int stretch) {
  this_ptr->insertLayout(index, layout, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertItem(QBoxLayout * this_ptr, int index, QLayoutItem * arg2) {
  this_ptr->insertItem(index, arg2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QBoxLayout_spacing(QBoxLayout const * this_ptr) {
  return this_ptr->spacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_setSpacing(QBoxLayout * this_ptr, int spacing) {
  this_ptr->setSpacing(spacing);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QBoxLayout_setStretchFactor(QBoxLayout * this_ptr, QWidget * w, int stretch) {
  return this_ptr->setStretchFactor(w, stretch);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QBoxLayout_setStretchFactor1(QBoxLayout * this_ptr, QLayout * l, int stretch) {
  return this_ptr->setStretchFactor(l, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_setStretch(QBoxLayout * this_ptr, int index, int stretch) {
  this_ptr->setStretch(index, stretch);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QBoxLayout_stretch(QBoxLayout const * this_ptr, int index) {
  return this_ptr->stretch(index);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QBoxLayout_sizeHint(QBoxLayout const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QBoxLayout_minimumSize(QBoxLayout const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QBoxLayout_maximumSize(QBoxLayout const * this_ptr) {
  return new QSize(this_ptr->maximumSize());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QBoxLayout_hasHeightForWidth(QBoxLayout const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QBoxLayout_heightForWidth(QBoxLayout const * this_ptr, int arg1) {
  return this_ptr->heightForWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QBoxLayout_minimumHeightForWidth(QBoxLayout const * this_ptr, int arg1) {
  return this_ptr->minimumHeightForWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QBoxLayout_expandingDirections(QBoxLayout const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_invalidate(QBoxLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QBoxLayout_itemAt(QBoxLayout const * this_ptr, int arg1) {
  return this_ptr->itemAt(arg1);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QBoxLayout_takeAt(QBoxLayout * this_ptr, int arg1) {
  return this_ptr->takeAt(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QBoxLayout_count(QBoxLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_setGeometry(QBoxLayout * this_ptr, QRect const * arg1) {
  this_ptr->setGeometry(*arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QHBoxLayout_metaObject(QHBoxLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QHBoxLayout_qt_metacast(QHBoxLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHBoxLayout_qt_metacall(QHBoxLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QHBoxLayout_tr(char const * s, char const * c, int n) {
  return new QString(QHBoxLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QHBoxLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QHBoxLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_QHBoxLayout_QHBoxLayout() {
  return new QHBoxLayout();
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_QHBoxLayout_QHBoxLayout1(QWidget * parent) {
  return new QHBoxLayout(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHBoxLayout_dQHBoxLayout(QHBoxLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QVBoxLayout_metaObject(QVBoxLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QVBoxLayout_qt_metacast(QVBoxLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVBoxLayout_qt_metacall(QVBoxLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QVBoxLayout_tr(char const * s, char const * c, int n) {
  return new QString(QVBoxLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QVBoxLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QVBoxLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_QVBoxLayout_QVBoxLayout() {
  return new QVBoxLayout();
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_QVBoxLayout_QVBoxLayout1(QWidget * parent) {
  return new QVBoxLayout(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVBoxLayout_dQVBoxLayout(QVBoxLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QButtonGroup_metaObject(QButtonGroup const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QButtonGroup_qt_metacast(QButtonGroup * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QButtonGroup_qt_metacall(QButtonGroup * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QButtonGroup_tr(char const * s, char const * c, int n) {
  return new QString(QButtonGroup::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QButtonGroup_trUtf8(char const * s, char const * c, int n) {
  return new QString(QButtonGroup::trUtf8(s, c, n));
}


RITUAL_EXPORT QButtonGroup * ctr_qt_widgets_ffi_QButtonGroup_QButtonGroup(QObject * parent) {
  return new QButtonGroup(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QButtonGroup_dQButtonGroup(QButtonGroup * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QButtonGroup_setExclusive(QButtonGroup * this_ptr, bool arg1) {
  this_ptr->setExclusive(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QButtonGroup_exclusive(QButtonGroup const * this_ptr) {
  return this_ptr->exclusive();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QButtonGroup_addButton(QButtonGroup * this_ptr, QAbstractButton * arg1, int id) {
  this_ptr->addButton(arg1, id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QButtonGroup_removeButton(QButtonGroup * this_ptr, QAbstractButton * arg1) {
  this_ptr->removeButton(arg1);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QButtonGroup_buttons(QButtonGroup const * this_ptr) {
  return new QList< QAbstractButton * >(this_ptr->buttons());
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QButtonGroup_checkedButton(QButtonGroup const * this_ptr) {
  return this_ptr->checkedButton();
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QButtonGroup_button(QButtonGroup const * this_ptr, int id) {
  return this_ptr->button(id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QButtonGroup_setId(QButtonGroup * this_ptr, QAbstractButton * button, int id) {
  this_ptr->setId(button, id);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QButtonGroup_id(QButtonGroup const * this_ptr, QAbstractButton * button) {
  return this_ptr->id(button);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QButtonGroup_checkedId(QButtonGroup const * this_ptr) {
  return this_ptr->checkedId();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCalendarWidget_metaObject(QCalendarWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QCalendarWidget_qt_metacast(QCalendarWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCalendarWidget_qt_metacall(QCalendarWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCalendarWidget_tr(char const * s, char const * c, int n) {
  return new QString(QCalendarWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCalendarWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QCalendarWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_QCalendarWidget_QCalendarWidget(QWidget * parent) {
  return new QCalendarWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_dQCalendarWidget(QCalendarWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QCalendarWidget_sizeHint(QCalendarWidget const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QCalendarWidget_minimumSizeHint(QCalendarWidget const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QCalendarWidget_selectedDate(QCalendarWidget const * this_ptr) {
  return new QDate(this_ptr->selectedDate());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCalendarWidget_yearShown(QCalendarWidget const * this_ptr) {
  return this_ptr->yearShown();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCalendarWidget_monthShown(QCalendarWidget const * this_ptr) {
  return this_ptr->monthShown();
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QCalendarWidget_minimumDate(QCalendarWidget const * this_ptr) {
  return new QDate(this_ptr->minimumDate());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setMinimumDate(QCalendarWidget * this_ptr, QDate const * date) {
  this_ptr->setMinimumDate(*date);
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QCalendarWidget_maximumDate(QCalendarWidget const * this_ptr) {
  return new QDate(this_ptr->maximumDate());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setMaximumDate(QCalendarWidget * this_ptr, QDate const * date) {
  this_ptr->setMaximumDate(*date);
}


RITUAL_EXPORT Qt::DayOfWeek ctr_qt_widgets_ffi_QCalendarWidget_firstDayOfWeek(QCalendarWidget const * this_ptr) {
  return this_ptr->firstDayOfWeek();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setFirstDayOfWeek(QCalendarWidget * this_ptr, Qt::DayOfWeek dayOfWeek) {
  this_ptr->setFirstDayOfWeek(dayOfWeek);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QCalendarWidget_isNavigationBarVisible(QCalendarWidget const * this_ptr) {
  return this_ptr->isNavigationBarVisible();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QCalendarWidget_isGridVisible(QCalendarWidget const * this_ptr) {
  return this_ptr->isGridVisible();
}


RITUAL_EXPORT QCalendar * ctr_qt_widgets_ffi_QCalendarWidget_calendar(QCalendarWidget const * this_ptr) {
  return new QCalendar(this_ptr->calendar());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setCalendar(QCalendarWidget * this_ptr, QCalendar const * calendar) {
  this_ptr->setCalendar(*calendar);
}


RITUAL_EXPORT QCalendarWidget::SelectionMode ctr_qt_widgets_ffi_QCalendarWidget_selectionMode(QCalendarWidget const * this_ptr) {
  return this_ptr->selectionMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setSelectionMode(QCalendarWidget * this_ptr, QCalendarWidget::SelectionMode mode) {
  this_ptr->setSelectionMode(mode);
}


RITUAL_EXPORT QCalendarWidget::HorizontalHeaderFormat ctr_qt_widgets_ffi_QCalendarWidget_horizontalHeaderFormat(QCalendarWidget const * this_ptr) {
  return this_ptr->horizontalHeaderFormat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setHorizontalHeaderFormat(QCalendarWidget * this_ptr, QCalendarWidget::HorizontalHeaderFormat format) {
  this_ptr->setHorizontalHeaderFormat(format);
}


RITUAL_EXPORT QCalendarWidget::VerticalHeaderFormat ctr_qt_widgets_ffi_QCalendarWidget_verticalHeaderFormat(QCalendarWidget const * this_ptr) {
  return this_ptr->verticalHeaderFormat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setVerticalHeaderFormat(QCalendarWidget * this_ptr, QCalendarWidget::VerticalHeaderFormat format) {
  this_ptr->setVerticalHeaderFormat(format);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QCalendarWidget_headerTextFormat(QCalendarWidget const * this_ptr) {
  return new QTextCharFormat(this_ptr->headerTextFormat());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setHeaderTextFormat(QCalendarWidget * this_ptr, QTextCharFormat const * format) {
  this_ptr->setHeaderTextFormat(*format);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QCalendarWidget_weekdayTextFormat(QCalendarWidget const * this_ptr, Qt::DayOfWeek dayOfWeek) {
  return new QTextCharFormat(this_ptr->weekdayTextFormat(dayOfWeek));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setWeekdayTextFormat(QCalendarWidget * this_ptr, Qt::DayOfWeek dayOfWeek, QTextCharFormat const * format) {
  this_ptr->setWeekdayTextFormat(dayOfWeek, *format);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat > * ctr_qt_widgets_ffi_QCalendarWidget_dateTextFormat(QCalendarWidget const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >(this_ptr->dateTextFormat());
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QCalendarWidget_dateTextFormat1(QCalendarWidget const * this_ptr, QDate const * date) {
  return new QTextCharFormat(this_ptr->dateTextFormat(*date));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setDateTextFormat(QCalendarWidget * this_ptr, QDate const * date, QTextCharFormat const * format) {
  this_ptr->setDateTextFormat(*date, *format);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QCalendarWidget_isDateEditEnabled(QCalendarWidget const * this_ptr) {
  return this_ptr->isDateEditEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setDateEditEnabled(QCalendarWidget * this_ptr, bool enable) {
  this_ptr->setDateEditEnabled(enable);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCalendarWidget_dateEditAcceptDelay(QCalendarWidget const * this_ptr) {
  return this_ptr->dateEditAcceptDelay();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setDateEditAcceptDelay(QCalendarWidget * this_ptr, int delay) {
  this_ptr->setDateEditAcceptDelay(delay);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setSelectedDate(QCalendarWidget * this_ptr, QDate const * date) {
  this_ptr->setSelectedDate(*date);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setDateRange(QCalendarWidget * this_ptr, QDate const * min, QDate const * max) {
  this_ptr->setDateRange(*min, *max);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setCurrentPage(QCalendarWidget * this_ptr, int year, int month) {
  this_ptr->setCurrentPage(year, month);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setGridVisible(QCalendarWidget * this_ptr, bool show) {
  this_ptr->setGridVisible(show);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_setNavigationBarVisible(QCalendarWidget * this_ptr, bool visible) {
  this_ptr->setNavigationBarVisible(visible);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_showNextMonth(QCalendarWidget * this_ptr) {
  this_ptr->showNextMonth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_showPreviousMonth(QCalendarWidget * this_ptr) {
  this_ptr->showPreviousMonth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_showNextYear(QCalendarWidget * this_ptr) {
  this_ptr->showNextYear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_showPreviousYear(QCalendarWidget * this_ptr) {
  this_ptr->showPreviousYear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_showSelectedDate(QCalendarWidget * this_ptr) {
  this_ptr->showSelectedDate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCalendarWidget_showToday(QCalendarWidget * this_ptr) {
  this_ptr->showToday();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCheckBox_metaObject(QCheckBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QCheckBox_qt_metacast(QCheckBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCheckBox_qt_metacall(QCheckBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCheckBox_tr(char const * s, char const * c, int n) {
  return new QString(QCheckBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCheckBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QCheckBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_QCheckBox_QCheckBox(QWidget * parent) {
  return new QCheckBox(parent);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_QCheckBox_QCheckBox1(QString const * text, QWidget * parent) {
  return new QCheckBox(*text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCheckBox_dQCheckBox(QCheckBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QCheckBox_sizeHint(QCheckBox const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QCheckBox_minimumSizeHint(QCheckBox const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCheckBox_setTristate(QCheckBox * this_ptr, bool y) {
  this_ptr->setTristate(y);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QCheckBox_isTristate(QCheckBox const * this_ptr) {
  return this_ptr->isTristate();
}


RITUAL_EXPORT Qt::CheckState ctr_qt_widgets_ffi_QCheckBox_checkState(QCheckBox const * this_ptr) {
  return this_ptr->checkState();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCheckBox_setCheckState(QCheckBox * this_ptr, Qt::CheckState state) {
  this_ptr->setCheckState(state);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDialog_metaObject(QDialog const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDialog_qt_metacast(QDialog * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDialog_qt_metacall(QDialog * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDialog_tr(char const * s, char const * c, int n) {
  return new QString(QDialog::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDialog_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDialog::trUtf8(s, c, n));
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_QDialog_QDialog(QWidget * parent, int f) {
  return new QDialog(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_dQDialog(QDialog * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDialog_result(QDialog const * this_ptr) {
  return this_ptr->result();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_setVisible(QDialog * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_setOrientation(QDialog * this_ptr, Qt::Orientation orientation) {
  this_ptr->setOrientation(orientation);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QDialog_orientation(QDialog const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_setExtension(QDialog * this_ptr, QWidget * extension) {
  this_ptr->setExtension(extension);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QDialog_extension(QDialog const * this_ptr) {
  return this_ptr->extension();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QDialog_sizeHint(QDialog const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QDialog_minimumSizeHint(QDialog const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_setSizeGripEnabled(QDialog * this_ptr, bool arg1) {
  this_ptr->setSizeGripEnabled(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDialog_isSizeGripEnabled(QDialog const * this_ptr) {
  return this_ptr->isSizeGripEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_setModal(QDialog * this_ptr, bool modal) {
  this_ptr->setModal(modal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_setResult(QDialog * this_ptr, int r) {
  this_ptr->setResult(r);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_open(QDialog * this_ptr) {
  this_ptr->open();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDialog_exec(QDialog * this_ptr) {
  return this_ptr->exec();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_done(QDialog * this_ptr, int arg1) {
  this_ptr->done(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_accept(QDialog * this_ptr) {
  this_ptr->accept();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_reject(QDialog * this_ptr) {
  this_ptr->reject();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialog_showExtension(QDialog * this_ptr, bool arg1) {
  this_ptr->showExtension(arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QColorDialog_metaObject(QColorDialog const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QColorDialog_qt_metacast(QColorDialog * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QColorDialog_qt_metacall(QColorDialog * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QColorDialog_tr(char const * s, char const * c, int n) {
  return new QString(QColorDialog::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QColorDialog_trUtf8(char const * s, char const * c, int n) {
  return new QString(QColorDialog::trUtf8(s, c, n));
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_QColorDialog_QColorDialog(QWidget * parent) {
  return new QColorDialog(parent);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_QColorDialog_QColorDialog1(QColor const * initial, QWidget * parent) {
  return new QColorDialog(*initial, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_dQColorDialog(QColorDialog * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_setCurrentColor(QColorDialog * this_ptr, QColor const * color) {
  this_ptr->setCurrentColor(*color);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_currentColor(QColorDialog const * this_ptr) {
  return new QColor(this_ptr->currentColor());
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_selectedColor(QColorDialog const * this_ptr) {
  return new QColor(this_ptr->selectedColor());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_setOption(QColorDialog * this_ptr, QColorDialog::ColorDialogOption option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QColorDialog_testOption(QColorDialog const * this_ptr, QColorDialog::ColorDialogOption option) {
  return this_ptr->testOption(option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_setOptions(QColorDialog * this_ptr, int options) {
  this_ptr->setOptions(QFlags< QColorDialog::ColorDialogOption >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QColorDialog_options(QColorDialog const * this_ptr) {
  return int(this_ptr->options());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_open(QColorDialog * this_ptr, QObject * receiver, char const * member) {
  this_ptr->open(receiver, member);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_setVisible(QColorDialog * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_getColor(QColor const * initial, QWidget * parent, QString const * title, int options) {
  return new QColor(QColorDialog::getColor(*initial, parent, *title, QFlags< QColorDialog::ColorDialogOption >(options)));
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_QColorDialog_getRgba(unsigned int rgba, bool * ok, QWidget * parent) {
  return QColorDialog::getRgba(rgba, ok, parent);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QColorDialog_customCount() {
  return QColorDialog::customCount();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_customColor(int index) {
  return new QColor(QColorDialog::customColor(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_setCustomColor(int index, QColor const * color) {
  QColorDialog::setCustomColor(index, *color);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_standardColor(int index) {
  return new QColor(QColorDialog::standardColor(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_setStandardColor(int index, QColor const * color) {
  QColorDialog::setStandardColor(index, *color);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColormap_initialize() {
  QColormap::initialize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColormap_cleanup() {
  QColormap::cleanup();
}


RITUAL_EXPORT QColormap * ctr_qt_widgets_ffi_QColormap_instance(int screen) {
  return new QColormap(QColormap::instance(screen));
}


RITUAL_EXPORT QColormap * ctr_qt_widgets_ffi_QColormap_QColormap(QColormap const * colormap) {
  return new QColormap(*colormap);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColormap_dQColormap(QColormap * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QColormap * ctr_qt_widgets_ffi_QColormap_operator_(QColormap * this_ptr, QColormap const * colormap) {
  return &this_ptr->operator=(*colormap);
}


RITUAL_EXPORT QColormap::Mode ctr_qt_widgets_ffi_QColormap_mode(QColormap const * this_ptr) {
  return this_ptr->mode();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QColormap_depth(QColormap const * this_ptr) {
  return this_ptr->depth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QColormap_size(QColormap const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_QColormap_pixel(QColormap const * this_ptr, QColor const * color) {
  return this_ptr->pixel(*color);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColormap_colorAt(QColormap const * this_ptr, unsigned int pixel) {
  return new QColor(this_ptr->colorAt(pixel));
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QColormap_colormap(QColormap const * this_ptr) {
  return new QVector< QColor >(this_ptr->colormap());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QColumnView_metaObject(QColumnView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QColumnView_qt_metacast(QColumnView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QColumnView_qt_metacall(QColumnView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QColumnView_tr(char const * s, char const * c, int n) {
  return new QString(QColumnView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QColumnView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QColumnView::trUtf8(s, c, n));
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_QColumnView_QColumnView(QWidget * parent) {
  return new QColumnView(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_dQColumnView(QColumnView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QColumnView_indexAt(QColumnView const * this_ptr, QPoint const * point) {
  return new QModelIndex(this_ptr->indexAt(*point));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_scrollTo(QColumnView * this_ptr, QModelIndex const * index, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollTo(*index, hint);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QColumnView_sizeHint(QColumnView const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QColumnView_visualRect(QColumnView const * this_ptr, QModelIndex const * index) {
  return new QRect(this_ptr->visualRect(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_setModel(QColumnView * this_ptr, QAbstractItemModel * model) {
  this_ptr->setModel(model);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_setSelectionModel(QColumnView * this_ptr, QItemSelectionModel * selectionModel) {
  this_ptr->setSelectionModel(selectionModel);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_setRootIndex(QColumnView * this_ptr, QModelIndex const * index) {
  this_ptr->setRootIndex(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_selectAll(QColumnView * this_ptr) {
  this_ptr->selectAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_setResizeGripsVisible(QColumnView * this_ptr, bool visible) {
  this_ptr->setResizeGripsVisible(visible);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QColumnView_resizeGripsVisible(QColumnView const * this_ptr) {
  return this_ptr->resizeGripsVisible();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QColumnView_previewWidget(QColumnView const * this_ptr) {
  return this_ptr->previewWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_setPreviewWidget(QColumnView * this_ptr, QWidget * widget) {
  this_ptr->setPreviewWidget(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_setColumnWidths(QColumnView * this_ptr, QList< int > const * list) {
  this_ptr->setColumnWidths(*list);
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QColumnView_columnWidths(QColumnView const * this_ptr) {
  return new QList< int >(this_ptr->columnWidths());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QComboBox_metaObject(QComboBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QComboBox_qt_metacast(QComboBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_qt_metacall(QComboBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QComboBox_tr(char const * s, char const * c, int n) {
  return new QString(QComboBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QComboBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QComboBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_QComboBox_QComboBox(QWidget * parent) {
  return new QComboBox(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_dQComboBox(QComboBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_maxVisibleItems(QComboBox const * this_ptr) {
  return this_ptr->maxVisibleItems();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setMaxVisibleItems(QComboBox * this_ptr, int maxItems) {
  this_ptr->setMaxVisibleItems(maxItems);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_count(QComboBox const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setMaxCount(QComboBox * this_ptr, int max) {
  this_ptr->setMaxCount(max);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_maxCount(QComboBox const * this_ptr) {
  return this_ptr->maxCount();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QComboBox_autoCompletion(QComboBox const * this_ptr) {
  return this_ptr->autoCompletion();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setAutoCompletion(QComboBox * this_ptr, bool enable) {
  this_ptr->setAutoCompletion(enable);
}


RITUAL_EXPORT Qt::CaseSensitivity ctr_qt_widgets_ffi_QComboBox_autoCompletionCaseSensitivity(QComboBox const * this_ptr) {
  return this_ptr->autoCompletionCaseSensitivity();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setAutoCompletionCaseSensitivity(QComboBox * this_ptr, Qt::CaseSensitivity sensitivity) {
  this_ptr->setAutoCompletionCaseSensitivity(sensitivity);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QComboBox_duplicatesEnabled(QComboBox const * this_ptr) {
  return this_ptr->duplicatesEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setDuplicatesEnabled(QComboBox * this_ptr, bool enable) {
  this_ptr->setDuplicatesEnabled(enable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setFrame(QComboBox * this_ptr, bool arg1) {
  this_ptr->setFrame(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QComboBox_hasFrame(QComboBox const * this_ptr) {
  return this_ptr->hasFrame();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_findText(QComboBox const * this_ptr, QString const * text, int flags) {
  return this_ptr->findText(*text, QFlags< Qt::MatchFlag >(flags));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_findData(QComboBox const * this_ptr, QVariant const * data, int role, int flags) {
  return this_ptr->findData(*data, role, QFlags< Qt::MatchFlag >(flags));
}


RITUAL_EXPORT QComboBox::InsertPolicy ctr_qt_widgets_ffi_QComboBox_insertPolicy(QComboBox const * this_ptr) {
  return this_ptr->insertPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setInsertPolicy(QComboBox * this_ptr, QComboBox::InsertPolicy policy) {
  this_ptr->setInsertPolicy(policy);
}


RITUAL_EXPORT QComboBox::SizeAdjustPolicy ctr_qt_widgets_ffi_QComboBox_sizeAdjustPolicy(QComboBox const * this_ptr) {
  return this_ptr->sizeAdjustPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setSizeAdjustPolicy(QComboBox * this_ptr, QComboBox::SizeAdjustPolicy policy) {
  this_ptr->setSizeAdjustPolicy(policy);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_minimumContentsLength(QComboBox const * this_ptr) {
  return this_ptr->minimumContentsLength();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setMinimumContentsLength(QComboBox * this_ptr, int characters) {
  this_ptr->setMinimumContentsLength(characters);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QComboBox_iconSize(QComboBox const * this_ptr) {
  return new QSize(this_ptr->iconSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setIconSize(QComboBox * this_ptr, QSize const * size) {
  this_ptr->setIconSize(*size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setPlaceholderText(QComboBox * this_ptr, QString const * placeholderText) {
  this_ptr->setPlaceholderText(*placeholderText);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QComboBox_placeholderText(QComboBox const * this_ptr) {
  return new QString(this_ptr->placeholderText());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QComboBox_isEditable(QComboBox const * this_ptr) {
  return this_ptr->isEditable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setEditable(QComboBox * this_ptr, bool editable) {
  this_ptr->setEditable(editable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setLineEdit(QComboBox * this_ptr, QLineEdit * edit) {
  this_ptr->setLineEdit(edit);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_QComboBox_lineEdit(QComboBox const * this_ptr) {
  return this_ptr->lineEdit();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setValidator(QComboBox * this_ptr, QValidator const * v) {
  this_ptr->setValidator(v);
}


RITUAL_EXPORT QValidator const * ctr_qt_widgets_ffi_QComboBox_validator(QComboBox const * this_ptr) {
  return this_ptr->validator();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setCompleter(QComboBox * this_ptr, QCompleter * c) {
  this_ptr->setCompleter(c);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QComboBox_completer(QComboBox const * this_ptr) {
  return this_ptr->completer();
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_QComboBox_itemDelegate(QComboBox const * this_ptr) {
  return this_ptr->itemDelegate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setItemDelegate(QComboBox * this_ptr, QAbstractItemDelegate * delegate) {
  this_ptr->setItemDelegate(delegate);
}


RITUAL_EXPORT QAbstractItemModel * ctr_qt_widgets_ffi_QComboBox_model(QComboBox const * this_ptr) {
  return this_ptr->model();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setModel(QComboBox * this_ptr, QAbstractItemModel * model) {
  this_ptr->setModel(model);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QComboBox_rootModelIndex(QComboBox const * this_ptr) {
  return new QModelIndex(this_ptr->rootModelIndex());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setRootModelIndex(QComboBox * this_ptr, QModelIndex const * index) {
  this_ptr->setRootModelIndex(*index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_modelColumn(QComboBox const * this_ptr) {
  return this_ptr->modelColumn();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setModelColumn(QComboBox * this_ptr, int visibleColumn) {
  this_ptr->setModelColumn(visibleColumn);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_currentIndex(QComboBox const * this_ptr) {
  return this_ptr->currentIndex();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QComboBox_currentText(QComboBox const * this_ptr) {
  return new QString(this_ptr->currentText());
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QComboBox_currentData(QComboBox const * this_ptr, int role) {
  return new QVariant(this_ptr->currentData(role));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QComboBox_itemText(QComboBox const * this_ptr, int index) {
  return new QString(this_ptr->itemText(index));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QComboBox_itemIcon(QComboBox const * this_ptr, int index) {
  return new QIcon(this_ptr->itemIcon(index));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QComboBox_itemData(QComboBox const * this_ptr, int index, int role) {
  return new QVariant(this_ptr->itemData(index, role));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_addItem(QComboBox * this_ptr, QString const * text, QVariant const * userData) {
  this_ptr->addItem(*text, *userData);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_addItem1(QComboBox * this_ptr, QIcon const * icon, QString const * text, QVariant const * userData) {
  this_ptr->addItem(*icon, *text, *userData);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_addItems(QComboBox * this_ptr, QStringList const * texts) {
  this_ptr->addItems(*texts);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_insertItem(QComboBox * this_ptr, int index, QString const * text, QVariant const * userData) {
  this_ptr->insertItem(index, *text, *userData);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_insertItem1(QComboBox * this_ptr, int index, QIcon const * icon, QString const * text, QVariant const * userData) {
  this_ptr->insertItem(index, *icon, *text, *userData);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_insertItems(QComboBox * this_ptr, int index, QStringList const * texts) {
  this_ptr->insertItems(index, *texts);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_insertSeparator(QComboBox * this_ptr, int index) {
  this_ptr->insertSeparator(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_removeItem(QComboBox * this_ptr, int index) {
  this_ptr->removeItem(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setItemText(QComboBox * this_ptr, int index, QString const * text) {
  this_ptr->setItemText(index, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setItemIcon(QComboBox * this_ptr, int index, QIcon const * icon) {
  this_ptr->setItemIcon(index, *icon);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setItemData(QComboBox * this_ptr, int index, QVariant const * value, int role) {
  this_ptr->setItemData(index, *value, role);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_QComboBox_view(QComboBox const * this_ptr) {
  return this_ptr->view();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setView(QComboBox * this_ptr, QAbstractItemView * itemView) {
  this_ptr->setView(itemView);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QComboBox_sizeHint(QComboBox const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QComboBox_minimumSizeHint(QComboBox const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_showPopup(QComboBox * this_ptr) {
  this_ptr->showPopup();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_hidePopup(QComboBox * this_ptr) {
  this_ptr->hidePopup();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QComboBox_event(QComboBox * this_ptr, QEvent * event) {
  return this_ptr->event(event);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QComboBox_inputMethodQuery(QComboBox const * this_ptr, Qt::InputMethodQuery arg1) {
  return new QVariant(this_ptr->inputMethodQuery(arg1));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QComboBox_inputMethodQuery1(QComboBox const * this_ptr, Qt::InputMethodQuery query, QVariant const * argument) {
  return new QVariant(this_ptr->inputMethodQuery(query, *argument));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_clear(QComboBox * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_clearEditText(QComboBox * this_ptr) {
  this_ptr->clearEditText();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setEditText(QComboBox * this_ptr, QString const * text) {
  this_ptr->setEditText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setCurrentIndex(QComboBox * this_ptr, int index) {
  this_ptr->setCurrentIndex(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setCurrentText(QComboBox * this_ptr, QString const * text) {
  this_ptr->setCurrentText(*text);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPushButton_metaObject(QPushButton const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QPushButton_qt_metacast(QPushButton * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPushButton_qt_metacall(QPushButton * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPushButton_tr(char const * s, char const * c, int n) {
  return new QString(QPushButton::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPushButton_trUtf8(char const * s, char const * c, int n) {
  return new QString(QPushButton::trUtf8(s, c, n));
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QPushButton_QPushButton(QWidget * parent) {
  return new QPushButton(parent);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QPushButton_QPushButton1(QString const * text, QWidget * parent) {
  return new QPushButton(*text, parent);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QPushButton_QPushButton2(QIcon const * icon, QString const * text, QWidget * parent) {
  return new QPushButton(*icon, *text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPushButton_dQPushButton(QPushButton * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QPushButton_sizeHint(QPushButton const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QPushButton_minimumSizeHint(QPushButton const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPushButton_autoDefault(QPushButton const * this_ptr) {
  return this_ptr->autoDefault();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPushButton_setAutoDefault(QPushButton * this_ptr, bool arg1) {
  this_ptr->setAutoDefault(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPushButton_isDefault(QPushButton const * this_ptr) {
  return this_ptr->isDefault();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPushButton_setDefault(QPushButton * this_ptr, bool arg1) {
  this_ptr->setDefault(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPushButton_setMenu(QPushButton * this_ptr, QMenu * menu) {
  this_ptr->setMenu(menu);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QPushButton_menu(QPushButton const * this_ptr) {
  return this_ptr->menu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPushButton_setFlat(QPushButton * this_ptr, bool arg1) {
  this_ptr->setFlat(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPushButton_isFlat(QPushButton const * this_ptr) {
  return this_ptr->isFlat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPushButton_showMenu(QPushButton * this_ptr) {
  this_ptr->showMenu();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCommandLinkButton_metaObject(QCommandLinkButton const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QCommandLinkButton_qt_metacast(QCommandLinkButton * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommandLinkButton_qt_metacall(QCommandLinkButton * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCommandLinkButton_tr(char const * s, char const * c, int n) {
  return new QString(QCommandLinkButton::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCommandLinkButton_trUtf8(char const * s, char const * c, int n) {
  return new QString(QCommandLinkButton::trUtf8(s, c, n));
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_QCommandLinkButton_QCommandLinkButton(QWidget * parent) {
  return new QCommandLinkButton(parent);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_QCommandLinkButton_QCommandLinkButton1(QString const * text, QWidget * parent) {
  return new QCommandLinkButton(*text, parent);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_QCommandLinkButton_QCommandLinkButton2(QString const * text, QString const * description, QWidget * parent) {
  return new QCommandLinkButton(*text, *description, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommandLinkButton_dQCommandLinkButton(QCommandLinkButton * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCommandLinkButton_description(QCommandLinkButton const * this_ptr) {
  return new QString(this_ptr->description());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommandLinkButton_setDescription(QCommandLinkButton * this_ptr, QString const * description) {
  this_ptr->setDescription(*description);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCommonStyle_metaObject(QCommonStyle const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QCommonStyle_qt_metacast(QCommonStyle * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_qt_metacall(QCommonStyle * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCommonStyle_tr(char const * s, char const * c, int n) {
  return new QString(QCommonStyle::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCommonStyle_trUtf8(char const * s, char const * c, int n) {
  return new QString(QCommonStyle::trUtf8(s, c, n));
}


RITUAL_EXPORT QCommonStyle * ctr_qt_widgets_ffi_QCommonStyle_QCommonStyle() {
  return new QCommonStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_dQCommonStyle(QCommonStyle * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_drawPrimitive(QCommonStyle const * this_ptr, QStyle::PrimitiveElement pe, QStyleOption const * opt, QPainter * p, QWidget const * w) {
  this_ptr->drawPrimitive(pe, opt, p, w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_drawControl(QCommonStyle const * this_ptr, QStyle::ControlElement element, QStyleOption const * opt, QPainter * p, QWidget const * w) {
  this_ptr->drawControl(element, opt, p, w);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QCommonStyle_subElementRect(QCommonStyle const * this_ptr, QStyle::SubElement r, QStyleOption const * opt, QWidget const * widget) {
  return new QRect(this_ptr->subElementRect(r, opt, widget));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_drawComplexControl(QCommonStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPainter * p, QWidget const * w) {
  this_ptr->drawComplexControl(cc, opt, p, w);
}


RITUAL_EXPORT QStyle::SubControl ctr_qt_widgets_ffi_QCommonStyle_hitTestComplexControl(QCommonStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPoint const * pt, QWidget const * w) {
  return this_ptr->hitTestComplexControl(cc, opt, *pt, w);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QCommonStyle_subControlRect(QCommonStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QStyle::SubControl sc, QWidget const * w) {
  return new QRect(this_ptr->subControlRect(cc, opt, sc, w));
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QCommonStyle_sizeFromContents(QCommonStyle const * this_ptr, QStyle::ContentsType ct, QStyleOption const * opt, QSize const * contentsSize, QWidget const * widget) {
  return new QSize(this_ptr->sizeFromContents(ct, opt, *contentsSize, widget));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_pixelMetric(QCommonStyle const * this_ptr, QStyle::PixelMetric m, QStyleOption const * opt, QWidget const * widget) {
  return this_ptr->pixelMetric(m, opt, widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_styleHint(QCommonStyle const * this_ptr, QStyle::StyleHint sh, QStyleOption const * opt, QWidget const * w, QStyleHintReturn * shret) {
  return this_ptr->styleHint(sh, opt, w, shret);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QCommonStyle_standardIcon(QCommonStyle const * this_ptr, QStyle::StandardPixmap standardIcon, QStyleOption const * opt, QWidget const * widget) {
  return new QIcon(this_ptr->standardIcon(standardIcon, opt, widget));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QCommonStyle_standardPixmap(QCommonStyle const * this_ptr, QStyle::StandardPixmap sp, QStyleOption const * opt, QWidget const * widget) {
  return new QPixmap(this_ptr->standardPixmap(sp, opt, widget));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QCommonStyle_generatedIconPixmap(QCommonStyle const * this_ptr, QIcon::Mode iconMode, QPixmap const * pixmap, QStyleOption const * opt) {
  return new QPixmap(this_ptr->generatedIconPixmap(iconMode, *pixmap, opt));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_layoutSpacing(QCommonStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, QStyleOption const * option, QWidget const * widget) {
  return this_ptr->layoutSpacing(control1, control2, orientation, option, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_polish(QCommonStyle * this_ptr, QPalette * arg1) {
  this_ptr->polish(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_polish1(QCommonStyle * this_ptr, QApplication * app) {
  this_ptr->polish(app);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_polish2(QCommonStyle * this_ptr, QWidget * widget) {
  this_ptr->polish(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_unpolish(QCommonStyle * this_ptr, QWidget * widget) {
  this_ptr->unpolish(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_unpolish1(QCommonStyle * this_ptr, QApplication * application) {
  this_ptr->unpolish(application);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QCompleter_metaObject(QCompleter const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QCompleter_qt_metacast(QCompleter * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCompleter_qt_metacall(QCompleter * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCompleter_tr(char const * s, char const * c, int n) {
  return new QString(QCompleter::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCompleter_trUtf8(char const * s, char const * c, int n) {
  return new QString(QCompleter::trUtf8(s, c, n));
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QCompleter_QCompleter(QObject * parent) {
  return new QCompleter(parent);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QCompleter_QCompleter1(QAbstractItemModel * model, QObject * parent) {
  return new QCompleter(model, parent);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QCompleter_QCompleter2(QStringList const * completions, QObject * parent) {
  return new QCompleter(*completions, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_dQCompleter(QCompleter * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setWidget(QCompleter * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QCompleter_widget(QCompleter const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setModel(QCompleter * this_ptr, QAbstractItemModel * c) {
  this_ptr->setModel(c);
}


RITUAL_EXPORT QAbstractItemModel * ctr_qt_widgets_ffi_QCompleter_model(QCompleter const * this_ptr) {
  return this_ptr->model();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setCompletionMode(QCompleter * this_ptr, QCompleter::CompletionMode mode) {
  this_ptr->setCompletionMode(mode);
}


RITUAL_EXPORT QCompleter::CompletionMode ctr_qt_widgets_ffi_QCompleter_completionMode(QCompleter const * this_ptr) {
  return this_ptr->completionMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setFilterMode(QCompleter * this_ptr, int filterMode) {
  this_ptr->setFilterMode(QFlags< Qt::MatchFlag >(filterMode));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCompleter_filterMode(QCompleter const * this_ptr) {
  return int(this_ptr->filterMode());
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_QCompleter_popup(QCompleter const * this_ptr) {
  return this_ptr->popup();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setPopup(QCompleter * this_ptr, QAbstractItemView * popup) {
  this_ptr->setPopup(popup);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setCaseSensitivity(QCompleter * this_ptr, Qt::CaseSensitivity caseSensitivity) {
  this_ptr->setCaseSensitivity(caseSensitivity);
}


RITUAL_EXPORT Qt::CaseSensitivity ctr_qt_widgets_ffi_QCompleter_caseSensitivity(QCompleter const * this_ptr) {
  return this_ptr->caseSensitivity();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setModelSorting(QCompleter * this_ptr, QCompleter::ModelSorting sorting) {
  this_ptr->setModelSorting(sorting);
}


RITUAL_EXPORT QCompleter::ModelSorting ctr_qt_widgets_ffi_QCompleter_modelSorting(QCompleter const * this_ptr) {
  return this_ptr->modelSorting();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setCompletionColumn(QCompleter * this_ptr, int column) {
  this_ptr->setCompletionColumn(column);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCompleter_completionColumn(QCompleter const * this_ptr) {
  return this_ptr->completionColumn();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setCompletionRole(QCompleter * this_ptr, int role) {
  this_ptr->setCompletionRole(role);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCompleter_completionRole(QCompleter const * this_ptr) {
  return this_ptr->completionRole();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QCompleter_wrapAround(QCompleter const * this_ptr) {
  return this_ptr->wrapAround();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCompleter_maxVisibleItems(QCompleter const * this_ptr) {
  return this_ptr->maxVisibleItems();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setMaxVisibleItems(QCompleter * this_ptr, int maxItems) {
  this_ptr->setMaxVisibleItems(maxItems);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCompleter_completionCount(QCompleter const * this_ptr) {
  return this_ptr->completionCount();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QCompleter_setCurrentRow(QCompleter * this_ptr, int row) {
  return this_ptr->setCurrentRow(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCompleter_currentRow(QCompleter const * this_ptr) {
  return this_ptr->currentRow();
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QCompleter_currentIndex(QCompleter const * this_ptr) {
  return new QModelIndex(this_ptr->currentIndex());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCompleter_currentCompletion(QCompleter const * this_ptr) {
  return new QString(this_ptr->currentCompletion());
}


RITUAL_EXPORT QAbstractItemModel * ctr_qt_widgets_ffi_QCompleter_completionModel(QCompleter const * this_ptr) {
  return this_ptr->completionModel();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCompleter_completionPrefix(QCompleter const * this_ptr) {
  return new QString(this_ptr->completionPrefix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setCompletionPrefix(QCompleter * this_ptr, QString const * prefix) {
  this_ptr->setCompletionPrefix(*prefix);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_complete(QCompleter * this_ptr, QRect const * rect) {
  this_ptr->complete(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_setWrapAround(QCompleter * this_ptr, bool wrap) {
  this_ptr->setWrapAround(wrap);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QCompleter_pathFromIndex(QCompleter const * this_ptr, QModelIndex const * index) {
  return new QString(this_ptr->pathFromIndex(*index));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QCompleter_splitPath(QCompleter const * this_ptr, QString const * path) {
  return new QStringList(this_ptr->splitPath(*path));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDataWidgetMapper_metaObject(QDataWidgetMapper const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDataWidgetMapper_qt_metacast(QDataWidgetMapper * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDataWidgetMapper_qt_metacall(QDataWidgetMapper * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDataWidgetMapper_tr(char const * s, char const * c, int n) {
  return new QString(QDataWidgetMapper::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDataWidgetMapper_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDataWidgetMapper::trUtf8(s, c, n));
}


RITUAL_EXPORT QDataWidgetMapper * ctr_qt_widgets_ffi_QDataWidgetMapper_QDataWidgetMapper(QObject * parent) {
  return new QDataWidgetMapper(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_dQDataWidgetMapper(QDataWidgetMapper * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_setModel(QDataWidgetMapper * this_ptr, QAbstractItemModel * model) {
  this_ptr->setModel(model);
}


RITUAL_EXPORT QAbstractItemModel * ctr_qt_widgets_ffi_QDataWidgetMapper_model(QDataWidgetMapper const * this_ptr) {
  return this_ptr->model();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_setItemDelegate(QDataWidgetMapper * this_ptr, QAbstractItemDelegate * delegate) {
  this_ptr->setItemDelegate(delegate);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_QDataWidgetMapper_itemDelegate(QDataWidgetMapper const * this_ptr) {
  return this_ptr->itemDelegate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_setRootIndex(QDataWidgetMapper * this_ptr, QModelIndex const * index) {
  this_ptr->setRootIndex(*index);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QDataWidgetMapper_rootIndex(QDataWidgetMapper const * this_ptr) {
  return new QModelIndex(this_ptr->rootIndex());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_setOrientation(QDataWidgetMapper * this_ptr, Qt::Orientation aOrientation) {
  this_ptr->setOrientation(aOrientation);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QDataWidgetMapper_orientation(QDataWidgetMapper const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_setSubmitPolicy(QDataWidgetMapper * this_ptr, QDataWidgetMapper::SubmitPolicy policy) {
  this_ptr->setSubmitPolicy(policy);
}


RITUAL_EXPORT QDataWidgetMapper::SubmitPolicy ctr_qt_widgets_ffi_QDataWidgetMapper_submitPolicy(QDataWidgetMapper const * this_ptr) {
  return this_ptr->submitPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_addMapping(QDataWidgetMapper * this_ptr, QWidget * widget, int section) {
  this_ptr->addMapping(widget, section);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_addMapping1(QDataWidgetMapper * this_ptr, QWidget * widget, int section, QByteArray const * propertyName) {
  this_ptr->addMapping(widget, section, *propertyName);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_removeMapping(QDataWidgetMapper * this_ptr, QWidget * widget) {
  this_ptr->removeMapping(widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDataWidgetMapper_mappedSection(QDataWidgetMapper const * this_ptr, QWidget * widget) {
  return this_ptr->mappedSection(widget);
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QDataWidgetMapper_mappedPropertyName(QDataWidgetMapper const * this_ptr, QWidget * widget) {
  return new QByteArray(this_ptr->mappedPropertyName(widget));
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QDataWidgetMapper_mappedWidgetAt(QDataWidgetMapper const * this_ptr, int section) {
  return this_ptr->mappedWidgetAt(section);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_clearMapping(QDataWidgetMapper * this_ptr) {
  this_ptr->clearMapping();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDataWidgetMapper_currentIndex(QDataWidgetMapper const * this_ptr) {
  return this_ptr->currentIndex();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_revert(QDataWidgetMapper * this_ptr) {
  this_ptr->revert();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDataWidgetMapper_submit(QDataWidgetMapper * this_ptr) {
  return this_ptr->submit();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_toFirst(QDataWidgetMapper * this_ptr) {
  this_ptr->toFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_toLast(QDataWidgetMapper * this_ptr) {
  this_ptr->toLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_toNext(QDataWidgetMapper * this_ptr) {
  this_ptr->toNext();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_toPrevious(QDataWidgetMapper * this_ptr) {
  this_ptr->toPrevious();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_setCurrentIndex(QDataWidgetMapper * this_ptr, int index) {
  this_ptr->setCurrentIndex(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDataWidgetMapper_setCurrentModelIndex(QDataWidgetMapper * this_ptr, QModelIndex const * index) {
  this_ptr->setCurrentModelIndex(*index);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDateTimeEdit_metaObject(QDateTimeEdit const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDateTimeEdit_qt_metacast(QDateTimeEdit * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDateTimeEdit_qt_metacall(QDateTimeEdit * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDateTimeEdit_tr(char const * s, char const * c, int n) {
  return new QString(QDateTimeEdit::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDateTimeEdit_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDateTimeEdit::trUtf8(s, c, n));
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit(QWidget * parent) {
  return new QDateTimeEdit(parent);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit1(QDateTime const * dt, QWidget * parent) {
  return new QDateTimeEdit(*dt, parent);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit2(QDate const * d, QWidget * parent) {
  return new QDateTimeEdit(*d, parent);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit3(QTime const * t, QWidget * parent) {
  return new QDateTimeEdit(*t, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_dQDateTimeEdit(QDateTimeEdit * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QDateTime * ctr_qt_widgets_ffi_QDateTimeEdit_dateTime(QDateTimeEdit const * this_ptr) {
  return new QDateTime(this_ptr->dateTime());
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QDateTimeEdit_date(QDateTimeEdit const * this_ptr) {
  return new QDate(this_ptr->date());
}


RITUAL_EXPORT QTime * ctr_qt_widgets_ffi_QDateTimeEdit_time(QDateTimeEdit const * this_ptr) {
  return new QTime(this_ptr->time());
}


RITUAL_EXPORT QCalendar * ctr_qt_widgets_ffi_QDateTimeEdit_calendar(QDateTimeEdit const * this_ptr) {
  return new QCalendar(this_ptr->calendar());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setCalendar(QDateTimeEdit * this_ptr, QCalendar const * calendar) {
  this_ptr->setCalendar(*calendar);
}


RITUAL_EXPORT QDateTime * ctr_qt_widgets_ffi_QDateTimeEdit_minimumDateTime(QDateTimeEdit const * this_ptr) {
  return new QDateTime(this_ptr->minimumDateTime());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_clearMinimumDateTime(QDateTimeEdit * this_ptr) {
  this_ptr->clearMinimumDateTime();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setMinimumDateTime(QDateTimeEdit * this_ptr, QDateTime const * dt) {
  this_ptr->setMinimumDateTime(*dt);
}


RITUAL_EXPORT QDateTime * ctr_qt_widgets_ffi_QDateTimeEdit_maximumDateTime(QDateTimeEdit const * this_ptr) {
  return new QDateTime(this_ptr->maximumDateTime());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_clearMaximumDateTime(QDateTimeEdit * this_ptr) {
  this_ptr->clearMaximumDateTime();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setMaximumDateTime(QDateTimeEdit * this_ptr, QDateTime const * dt) {
  this_ptr->setMaximumDateTime(*dt);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setDateTimeRange(QDateTimeEdit * this_ptr, QDateTime const * min, QDateTime const * max) {
  this_ptr->setDateTimeRange(*min, *max);
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QDateTimeEdit_minimumDate(QDateTimeEdit const * this_ptr) {
  return new QDate(this_ptr->minimumDate());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setMinimumDate(QDateTimeEdit * this_ptr, QDate const * min) {
  this_ptr->setMinimumDate(*min);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_clearMinimumDate(QDateTimeEdit * this_ptr) {
  this_ptr->clearMinimumDate();
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QDateTimeEdit_maximumDate(QDateTimeEdit const * this_ptr) {
  return new QDate(this_ptr->maximumDate());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setMaximumDate(QDateTimeEdit * this_ptr, QDate const * max) {
  this_ptr->setMaximumDate(*max);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_clearMaximumDate(QDateTimeEdit * this_ptr) {
  this_ptr->clearMaximumDate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setDateRange(QDateTimeEdit * this_ptr, QDate const * min, QDate const * max) {
  this_ptr->setDateRange(*min, *max);
}


RITUAL_EXPORT QTime * ctr_qt_widgets_ffi_QDateTimeEdit_minimumTime(QDateTimeEdit const * this_ptr) {
  return new QTime(this_ptr->minimumTime());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setMinimumTime(QDateTimeEdit * this_ptr, QTime const * min) {
  this_ptr->setMinimumTime(*min);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_clearMinimumTime(QDateTimeEdit * this_ptr) {
  this_ptr->clearMinimumTime();
}


RITUAL_EXPORT QTime * ctr_qt_widgets_ffi_QDateTimeEdit_maximumTime(QDateTimeEdit const * this_ptr) {
  return new QTime(this_ptr->maximumTime());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setMaximumTime(QDateTimeEdit * this_ptr, QTime const * max) {
  this_ptr->setMaximumTime(*max);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_clearMaximumTime(QDateTimeEdit * this_ptr) {
  this_ptr->clearMaximumTime();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setTimeRange(QDateTimeEdit * this_ptr, QTime const * min, QTime const * max) {
  this_ptr->setTimeRange(*min, *max);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDateTimeEdit_displayedSections(QDateTimeEdit const * this_ptr) {
  return int(this_ptr->displayedSections());
}


RITUAL_EXPORT QDateTimeEdit::Section ctr_qt_widgets_ffi_QDateTimeEdit_currentSection(QDateTimeEdit const * this_ptr) {
  return this_ptr->currentSection();
}


RITUAL_EXPORT QDateTimeEdit::Section ctr_qt_widgets_ffi_QDateTimeEdit_sectionAt(QDateTimeEdit const * this_ptr, int index) {
  return this_ptr->sectionAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setCurrentSection(QDateTimeEdit * this_ptr, QDateTimeEdit::Section section) {
  this_ptr->setCurrentSection(section);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDateTimeEdit_currentSectionIndex(QDateTimeEdit const * this_ptr) {
  return this_ptr->currentSectionIndex();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setCurrentSectionIndex(QDateTimeEdit * this_ptr, int index) {
  this_ptr->setCurrentSectionIndex(index);
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_QDateTimeEdit_calendarWidget(QDateTimeEdit const * this_ptr) {
  return this_ptr->calendarWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setCalendarWidget(QDateTimeEdit * this_ptr, QCalendarWidget * calendarWidget) {
  this_ptr->setCalendarWidget(calendarWidget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDateTimeEdit_sectionCount(QDateTimeEdit const * this_ptr) {
  return this_ptr->sectionCount();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setSelectedSection(QDateTimeEdit * this_ptr, QDateTimeEdit::Section section) {
  this_ptr->setSelectedSection(section);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDateTimeEdit_sectionText(QDateTimeEdit const * this_ptr, QDateTimeEdit::Section section) {
  return new QString(this_ptr->sectionText(section));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDateTimeEdit_displayFormat(QDateTimeEdit const * this_ptr) {
  return new QString(this_ptr->displayFormat());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setDisplayFormat(QDateTimeEdit * this_ptr, QString const * format) {
  this_ptr->setDisplayFormat(*format);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDateTimeEdit_calendarPopup(QDateTimeEdit const * this_ptr) {
  return this_ptr->calendarPopup();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setCalendarPopup(QDateTimeEdit * this_ptr, bool enable) {
  this_ptr->setCalendarPopup(enable);
}


RITUAL_EXPORT Qt::TimeSpec ctr_qt_widgets_ffi_QDateTimeEdit_timeSpec(QDateTimeEdit const * this_ptr) {
  return this_ptr->timeSpec();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setTimeSpec(QDateTimeEdit * this_ptr, Qt::TimeSpec spec) {
  this_ptr->setTimeSpec(spec);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QDateTimeEdit_sizeHint(QDateTimeEdit const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_clear(QDateTimeEdit * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_stepBy(QDateTimeEdit * this_ptr, int steps) {
  this_ptr->stepBy(steps);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDateTimeEdit_event(QDateTimeEdit * this_ptr, QEvent * event) {
  return this_ptr->event(event);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setDateTime(QDateTimeEdit * this_ptr, QDateTime const * dateTime) {
  this_ptr->setDateTime(*dateTime);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setDate(QDateTimeEdit * this_ptr, QDate const * date) {
  this_ptr->setDate(*date);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateTimeEdit_setTime(QDateTimeEdit * this_ptr, QTime const * time) {
  this_ptr->setTime(*time);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTimeEdit_metaObject(QTimeEdit const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTimeEdit_qt_metacast(QTimeEdit * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTimeEdit_qt_metacall(QTimeEdit * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTimeEdit_tr(char const * s, char const * c, int n) {
  return new QString(QTimeEdit::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTimeEdit_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTimeEdit::trUtf8(s, c, n));
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_QTimeEdit_QTimeEdit(QWidget * parent) {
  return new QTimeEdit(parent);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_QTimeEdit_QTimeEdit1(QTime const * time, QWidget * parent) {
  return new QTimeEdit(*time, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTimeEdit_dQTimeEdit(QTimeEdit * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDateEdit_metaObject(QDateEdit const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDateEdit_qt_metacast(QDateEdit * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDateEdit_qt_metacall(QDateEdit * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDateEdit_tr(char const * s, char const * c, int n) {
  return new QString(QDateEdit::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDateEdit_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDateEdit::trUtf8(s, c, n));
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_QDateEdit_QDateEdit(QWidget * parent) {
  return new QDateEdit(parent);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_QDateEdit_QDateEdit1(QDate const * date, QWidget * parent) {
  return new QDateEdit(*date, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDateEdit_dQDateEdit(QDateEdit * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDesktopWidget_metaObject(QDesktopWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDesktopWidget_qt_metacast(QDesktopWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDesktopWidget_qt_metacall(QDesktopWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDesktopWidget_tr(char const * s, char const * c, int n) {
  return new QString(QDesktopWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDesktopWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDesktopWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_QDesktopWidget_QDesktopWidget() {
  return new QDesktopWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDesktopWidget_dQDesktopWidget(QDesktopWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDesktopWidget_screenNumber(QDesktopWidget const * this_ptr, QWidget const * widget) {
  return this_ptr->screenNumber(widget);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_screenGeometry(QDesktopWidget const * this_ptr, QWidget const * widget) {
  return new QRect(this_ptr->screenGeometry(widget));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_availableGeometry(QDesktopWidget const * this_ptr, QWidget const * widget) {
  return new QRect(this_ptr->availableGeometry(widget));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDesktopWidget_isVirtualDesktop(QDesktopWidget const * this_ptr) {
  return this_ptr->isVirtualDesktop();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDesktopWidget_numScreens(QDesktopWidget const * this_ptr) {
  return this_ptr->numScreens();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDesktopWidget_screenCount(QDesktopWidget const * this_ptr) {
  return this_ptr->screenCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDesktopWidget_primaryScreen(QDesktopWidget const * this_ptr) {
  return this_ptr->primaryScreen();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDesktopWidget_screenNumber1(QDesktopWidget const * this_ptr, QPoint const * arg1) {
  return this_ptr->screenNumber(*arg1);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QDesktopWidget_screen(QDesktopWidget * this_ptr, int screen) {
  return this_ptr->screen(screen);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_screenGeometry1(QDesktopWidget const * this_ptr, int screen) {
  return new QRect(this_ptr->screenGeometry(screen));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_screenGeometry2(QDesktopWidget const * this_ptr, QPoint const * point) {
  return new QRect(this_ptr->screenGeometry(*point));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_availableGeometry1(QDesktopWidget const * this_ptr, int screen) {
  return new QRect(this_ptr->availableGeometry(screen));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_availableGeometry2(QDesktopWidget const * this_ptr, QPoint const * point) {
  return new QRect(this_ptr->availableGeometry(*point));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDial_metaObject(QDial const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDial_qt_metacast(QDial * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDial_qt_metacall(QDial * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDial_tr(char const * s, char const * c, int n) {
  return new QString(QDial::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDial_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDial::trUtf8(s, c, n));
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_QDial_QDial(QWidget * parent) {
  return new QDial(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDial_dQDial(QDial * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDial_wrapping(QDial const * this_ptr) {
  return this_ptr->wrapping();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDial_notchSize(QDial const * this_ptr) {
  return this_ptr->notchSize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDial_setNotchTarget(QDial * this_ptr, double target) {
  this_ptr->setNotchTarget(target);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QDial_notchTarget(QDial const * this_ptr) {
  return this_ptr->notchTarget();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDial_notchesVisible(QDial const * this_ptr) {
  return this_ptr->notchesVisible();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QDial_sizeHint(QDial const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QDial_minimumSizeHint(QDial const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDial_setNotchesVisible(QDial * this_ptr, bool visible) {
  this_ptr->setNotchesVisible(visible);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDial_setWrapping(QDial * this_ptr, bool on) {
  this_ptr->setWrapping(on);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDialogButtonBox_metaObject(QDialogButtonBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDialogButtonBox_qt_metacast(QDialogButtonBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDialogButtonBox_qt_metacall(QDialogButtonBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDialogButtonBox_tr(char const * s, char const * c, int n) {
  return new QString(QDialogButtonBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDialogButtonBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDialogButtonBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox(QWidget * parent) {
  return new QDialogButtonBox(parent);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox1(Qt::Orientation orientation, QWidget * parent) {
  return new QDialogButtonBox(orientation, parent);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox2(int buttons, QWidget * parent) {
  return new QDialogButtonBox(QFlags< QDialogButtonBox::StandardButton >(buttons), parent);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox3(int buttons, Qt::Orientation orientation, QWidget * parent) {
  return new QDialogButtonBox(QFlags< QDialogButtonBox::StandardButton >(buttons), orientation, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialogButtonBox_dQDialogButtonBox(QDialogButtonBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialogButtonBox_setOrientation(QDialogButtonBox * this_ptr, Qt::Orientation orientation) {
  this_ptr->setOrientation(orientation);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QDialogButtonBox_orientation(QDialogButtonBox const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialogButtonBox_addButton(QDialogButtonBox * this_ptr, QAbstractButton * button, QDialogButtonBox::ButtonRole role) {
  this_ptr->addButton(button, role);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QDialogButtonBox_addButton1(QDialogButtonBox * this_ptr, QString const * text, QDialogButtonBox::ButtonRole role) {
  return this_ptr->addButton(*text, role);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QDialogButtonBox_addButton2(QDialogButtonBox * this_ptr, QDialogButtonBox::StandardButton button) {
  return this_ptr->addButton(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialogButtonBox_removeButton(QDialogButtonBox * this_ptr, QAbstractButton * button) {
  this_ptr->removeButton(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialogButtonBox_clear(QDialogButtonBox * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QDialogButtonBox_buttons(QDialogButtonBox const * this_ptr) {
  return new QList< QAbstractButton * >(this_ptr->buttons());
}


RITUAL_EXPORT QDialogButtonBox::ButtonRole ctr_qt_widgets_ffi_QDialogButtonBox_buttonRole(QDialogButtonBox const * this_ptr, QAbstractButton * button) {
  return this_ptr->buttonRole(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialogButtonBox_setStandardButtons(QDialogButtonBox * this_ptr, int buttons) {
  this_ptr->setStandardButtons(QFlags< QDialogButtonBox::StandardButton >(buttons));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDialogButtonBox_standardButtons(QDialogButtonBox const * this_ptr) {
  return int(this_ptr->standardButtons());
}


RITUAL_EXPORT QDialogButtonBox::StandardButton ctr_qt_widgets_ffi_QDialogButtonBox_standardButton(QDialogButtonBox const * this_ptr, QAbstractButton * button) {
  return this_ptr->standardButton(button);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QDialogButtonBox_button(QDialogButtonBox const * this_ptr, QDialogButtonBox::StandardButton which) {
  return this_ptr->button(which);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDialogButtonBox_setCenterButtons(QDialogButtonBox * this_ptr, bool center) {
  this_ptr->setCenterButtons(center);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDialogButtonBox_centerButtons(QDialogButtonBox const * this_ptr) {
  return this_ptr->centerButtons();
}


RITUAL_EXPORT QFileIconProvider * ctr_qt_widgets_ffi_QFileIconProvider_QFileIconProvider() {
  return new QFileIconProvider();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileIconProvider_dQFileIconProvider(QFileIconProvider * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QFileIconProvider_icon(QFileIconProvider const * this_ptr, QFileIconProvider::IconType type) {
  return new QIcon(this_ptr->icon(type));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QFileIconProvider_icon1(QFileIconProvider const * this_ptr, QFileInfo const * info) {
  return new QIcon(this_ptr->icon(*info));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileIconProvider_type(QFileIconProvider const * this_ptr, QFileInfo const * info) {
  return new QString(this_ptr->type(*info));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileIconProvider_setOptions(QFileIconProvider * this_ptr, int options) {
  this_ptr->setOptions(QFlags< QFileIconProvider::Option >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileIconProvider_options(QFileIconProvider const * this_ptr) {
  return int(this_ptr->options());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDirModel_metaObject(QDirModel const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDirModel_qt_metacast(QDirModel * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_qt_metacall(QDirModel * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDirModel_tr(char const * s, char const * c, int n) {
  return new QString(QDirModel::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDirModel_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDirModel::trUtf8(s, c, n));
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_QDirModel_QDirModel(QStringList const * nameFilters, int filters, int sort, QObject * parent) {
  return new QDirModel(*nameFilters, QFlags< QDir::Filter >(filters), QFlags< QDir::SortFlag >(sort), parent);
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_QDirModel_QDirModel1(QObject * parent) {
  return new QDirModel(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_dQDirModel(QDirModel * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QDirModel_index(QDirModel const * this_ptr, int row, int column, QModelIndex const * parent) {
  return new QModelIndex(this_ptr->index(row, column, *parent));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QDirModel_parent(QDirModel const * this_ptr, QModelIndex const * child) {
  return new QModelIndex(this_ptr->parent(*child));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_rowCount(QDirModel const * this_ptr, QModelIndex const * parent) {
  return this_ptr->rowCount(*parent);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_columnCount(QDirModel const * this_ptr, QModelIndex const * parent) {
  return this_ptr->columnCount(*parent);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QDirModel_data(QDirModel const * this_ptr, QModelIndex const * index, int role) {
  return new QVariant(this_ptr->data(*index, role));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_setData(QDirModel * this_ptr, QModelIndex const * index, QVariant const * value, int role) {
  return this_ptr->setData(*index, *value, role);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QDirModel_headerData(QDirModel const * this_ptr, int section, Qt::Orientation orientation, int role) {
  return new QVariant(this_ptr->headerData(section, orientation, role));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_hasChildren(QDirModel const * this_ptr, QModelIndex const * index) {
  return this_ptr->hasChildren(*index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_flags(QDirModel const * this_ptr, QModelIndex const * index) {
  return int(this_ptr->flags(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_sort(QDirModel * this_ptr, int column, Qt::SortOrder order) {
  this_ptr->sort(column, order);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QDirModel_mimeTypes(QDirModel const * this_ptr) {
  return new QStringList(this_ptr->mimeTypes());
}


RITUAL_EXPORT QMimeData * ctr_qt_widgets_ffi_QDirModel_mimeData(QDirModel const * this_ptr, QList< QModelIndex > const * indexes) {
  return this_ptr->mimeData(*indexes);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_dropMimeData(QDirModel * this_ptr, QMimeData const * data, Qt::DropAction action, int row, int column, QModelIndex const * parent) {
  return this_ptr->dropMimeData(data, action, row, column, *parent);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_supportedDropActions(QDirModel const * this_ptr) {
  return int(this_ptr->supportedDropActions());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_setIconProvider(QDirModel * this_ptr, QFileIconProvider * provider) {
  this_ptr->setIconProvider(provider);
}


RITUAL_EXPORT QFileIconProvider * ctr_qt_widgets_ffi_QDirModel_iconProvider(QDirModel const * this_ptr) {
  return this_ptr->iconProvider();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_setNameFilters(QDirModel * this_ptr, QStringList const * filters) {
  this_ptr->setNameFilters(*filters);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QDirModel_nameFilters(QDirModel const * this_ptr) {
  return new QStringList(this_ptr->nameFilters());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_setFilter(QDirModel * this_ptr, int filters) {
  this_ptr->setFilter(QFlags< QDir::Filter >(filters));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_filter(QDirModel const * this_ptr) {
  return int(this_ptr->filter());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_setSorting(QDirModel * this_ptr, int sort) {
  this_ptr->setSorting(QFlags< QDir::SortFlag >(sort));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_sorting(QDirModel const * this_ptr) {
  return int(this_ptr->sorting());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_setResolveSymlinks(QDirModel * this_ptr, bool enable) {
  this_ptr->setResolveSymlinks(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_resolveSymlinks(QDirModel const * this_ptr) {
  return this_ptr->resolveSymlinks();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_setReadOnly(QDirModel * this_ptr, bool enable) {
  this_ptr->setReadOnly(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_isReadOnly(QDirModel const * this_ptr) {
  return this_ptr->isReadOnly();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_setLazyChildCount(QDirModel * this_ptr, bool enable) {
  this_ptr->setLazyChildCount(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_lazyChildCount(QDirModel const * this_ptr) {
  return this_ptr->lazyChildCount();
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QDirModel_index1(QDirModel const * this_ptr, QString const * path, int column) {
  return new QModelIndex(this_ptr->index(*path, column));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_isDir(QDirModel const * this_ptr, QModelIndex const * index) {
  return this_ptr->isDir(*index);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QDirModel_mkdir(QDirModel * this_ptr, QModelIndex const * parent, QString const * name) {
  return new QModelIndex(this_ptr->mkdir(*parent, *name));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_rmdir(QDirModel * this_ptr, QModelIndex const * index) {
  return this_ptr->rmdir(*index);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_remove(QDirModel * this_ptr, QModelIndex const * index) {
  return this_ptr->remove(*index);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDirModel_filePath(QDirModel const * this_ptr, QModelIndex const * index) {
  return new QString(this_ptr->filePath(*index));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDirModel_fileName(QDirModel const * this_ptr, QModelIndex const * index) {
  return new QString(this_ptr->fileName(*index));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QDirModel_fileIcon(QDirModel const * this_ptr, QModelIndex const * index) {
  return new QIcon(this_ptr->fileIcon(*index));
}


RITUAL_EXPORT QFileInfo * ctr_qt_widgets_ffi_QDirModel_fileInfo(QDirModel const * this_ptr, QModelIndex const * index) {
  return new QFileInfo(this_ptr->fileInfo(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_refresh(QDirModel * this_ptr, QModelIndex const * parent) {
  this_ptr->refresh(*parent);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDockWidget_metaObject(QDockWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDockWidget_qt_metacast(QDockWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDockWidget_qt_metacall(QDockWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDockWidget_tr(char const * s, char const * c, int n) {
  return new QString(QDockWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDockWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDockWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QDockWidget_QDockWidget(QString const * title, QWidget * parent, int flags) {
  return new QDockWidget(*title, parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QDockWidget_QDockWidget1(QWidget * parent, int flags) {
  return new QDockWidget(parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDockWidget_dQDockWidget(QDockWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QDockWidget_widget(QDockWidget const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDockWidget_setWidget(QDockWidget * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDockWidget_setFeatures(QDockWidget * this_ptr, int features) {
  this_ptr->setFeatures(QFlags< QDockWidget::DockWidgetFeature >(features));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDockWidget_features(QDockWidget const * this_ptr) {
  return int(this_ptr->features());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDockWidget_setFloating(QDockWidget * this_ptr, bool floating) {
  this_ptr->setFloating(floating);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDockWidget_isFloating(QDockWidget const * this_ptr) {
  return this_ptr->isFloating();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDockWidget_setAllowedAreas(QDockWidget * this_ptr, int areas) {
  this_ptr->setAllowedAreas(QFlags< Qt::DockWidgetArea >(areas));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDockWidget_allowedAreas(QDockWidget const * this_ptr) {
  return int(this_ptr->allowedAreas());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDockWidget_setTitleBarWidget(QDockWidget * this_ptr, QWidget * widget) {
  this_ptr->setTitleBarWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QDockWidget_titleBarWidget(QDockWidget const * this_ptr) {
  return this_ptr->titleBarWidget();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDockWidget_isAreaAllowed(QDockWidget const * this_ptr, Qt::DockWidgetArea area) {
  return this_ptr->isAreaAllowed(area);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QDockWidget_toggleViewAction(QDockWidget const * this_ptr) {
  return this_ptr->toggleViewAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine(QPainter * p, int x1, int y1, int x2, int y2, QPalette const * pal, bool sunken, int lineWidth, int midLineWidth) {
  qDrawShadeLine(p, x1, y1, x2, y2, *pal, sunken, lineWidth, midLineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine1(QPainter * p, QPoint const * p1, QPoint const * p2, QPalette const * pal, bool sunken, int lineWidth, int midLineWidth) {
  qDrawShadeLine(p, *p1, *p2, *pal, sunken, lineWidth, midLineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken, int lineWidth, int midLineWidth, QBrush const * fill) {
  qDrawShadeRect(p, x, y, w, h, *pal, sunken, lineWidth, midLineWidth, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect1(QPainter * p, QRect const * r, QPalette const * pal, bool sunken, int lineWidth, int midLineWidth, QBrush const * fill) {
  qDrawShadeRect(p, *r, *pal, sunken, lineWidth, midLineWidth, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken, int lineWidth, QBrush const * fill) {
  qDrawShadePanel(p, x, y, w, h, *pal, sunken, lineWidth, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel1(QPainter * p, QRect const * r, QPalette const * pal, bool sunken, int lineWidth, QBrush const * fill) {
  qDrawShadePanel(p, *r, *pal, sunken, lineWidth, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinButton(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken, QBrush const * fill) {
  qDrawWinButton(p, x, y, w, h, *pal, sunken, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinButton1(QPainter * p, QRect const * r, QPalette const * pal, bool sunken, QBrush const * fill) {
  qDrawWinButton(p, *r, *pal, sunken, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinPanel(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken, QBrush const * fill) {
  qDrawWinPanel(p, x, y, w, h, *pal, sunken, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinPanel1(QPainter * p, QRect const * r, QPalette const * pal, bool sunken, QBrush const * fill) {
  qDrawWinPanel(p, *r, *pal, sunken, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawPlainRect(QPainter * p, int x, int y, int w, int h, QColor const * arg6, int lineWidth, QBrush const * fill) {
  qDrawPlainRect(p, x, y, w, h, *arg6, lineWidth, fill);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawPlainRect1(QPainter * p, QRect const * r, QColor const * arg3, int lineWidth, QBrush const * fill) {
  qDrawPlainRect(p, *r, *arg3, lineWidth, fill);
}


RITUAL_EXPORT QTileRules * ctr_qt_widgets_ffi_QTileRules_QTileRules(Qt::TileRule horizontalRule, Qt::TileRule verticalRule) {
  return new QTileRules(horizontalRule, verticalRule);
}


RITUAL_EXPORT QTileRules * ctr_qt_widgets_ffi_QTileRules_QTileRules1(Qt::TileRule rule) {
  return new QTileRules(rule);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawBorderPixmap(QPainter * painter, QRect const * targetRect, QMargins const * targetMargins, QPixmap const * pixmap, QRect const * sourceRect, QMargins const * sourceMargins, QTileRules const * rules, int hints) {
  qDrawBorderPixmap(painter, *targetRect, *targetMargins, *pixmap, *sourceRect, *sourceMargins, *rules, QFlags< QDrawBorderPixmap::DrawingHint >(hints));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawBorderPixmap1(QPainter * painter, QRect const * target, QMargins const * margins, QPixmap const * pixmap) {
  qDrawBorderPixmap(painter, *target, *margins, *pixmap);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QErrorMessage_metaObject(QErrorMessage const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QErrorMessage_qt_metacast(QErrorMessage * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QErrorMessage_qt_metacall(QErrorMessage * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QErrorMessage_tr(char const * s, char const * c, int n) {
  return new QString(QErrorMessage::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QErrorMessage_trUtf8(char const * s, char const * c, int n) {
  return new QString(QErrorMessage::trUtf8(s, c, n));
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_QErrorMessage_QErrorMessage(QWidget * parent) {
  return new QErrorMessage(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QErrorMessage_dQErrorMessage(QErrorMessage * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_QErrorMessage_qtHandler() {
  return QErrorMessage::qtHandler();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QErrorMessage_showMessage(QErrorMessage * this_ptr, QString const * message) {
  this_ptr->showMessage(*message);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QErrorMessage_showMessage1(QErrorMessage * this_ptr, QString const * message, QString const * type) {
  this_ptr->showMessage(*message, *type);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFileDialog_metaObject(QFileDialog const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QFileDialog_qt_metacast(QFileDialog * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileDialog_qt_metacall(QFileDialog * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_tr(char const * s, char const * c, int n) {
  return new QString(QFileDialog::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_trUtf8(char const * s, char const * c, int n) {
  return new QString(QFileDialog::trUtf8(s, c, n));
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_QFileDialog_QFileDialog(QWidget * parent, int f) {
  return new QFileDialog(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_QFileDialog_QFileDialog1(QWidget * parent, QString const * caption, QString const * directory, QString const * filter) {
  return new QFileDialog(parent, *caption, *directory, *filter);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_dQFileDialog(QFileDialog * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setDirectory(QFileDialog * this_ptr, QString const * directory) {
  this_ptr->setDirectory(*directory);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setDirectory1(QFileDialog * this_ptr, QDir const * directory) {
  this_ptr->setDirectory(*directory);
}


RITUAL_EXPORT QDir * ctr_qt_widgets_ffi_QFileDialog_directory(QFileDialog const * this_ptr) {
  return new QDir(this_ptr->directory());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setDirectoryUrl(QFileDialog * this_ptr, QUrl const * directory) {
  this_ptr->setDirectoryUrl(*directory);
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_directoryUrl(QFileDialog const * this_ptr) {
  return new QUrl(this_ptr->directoryUrl());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_selectFile(QFileDialog * this_ptr, QString const * filename) {
  this_ptr->selectFile(*filename);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_selectedFiles(QFileDialog const * this_ptr) {
  return new QStringList(this_ptr->selectedFiles());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_selectUrl(QFileDialog * this_ptr, QUrl const * url) {
  this_ptr->selectUrl(*url);
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_selectedUrls(QFileDialog const * this_ptr) {
  return new QList< QUrl >(this_ptr->selectedUrls());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setNameFilterDetailsVisible(QFileDialog * this_ptr, bool enabled) {
  this_ptr->setNameFilterDetailsVisible(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileDialog_isNameFilterDetailsVisible(QFileDialog const * this_ptr) {
  return this_ptr->isNameFilterDetailsVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setNameFilter(QFileDialog * this_ptr, QString const * filter) {
  this_ptr->setNameFilter(*filter);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setNameFilters(QFileDialog * this_ptr, QStringList const * filters) {
  this_ptr->setNameFilters(*filters);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_nameFilters(QFileDialog const * this_ptr) {
  return new QStringList(this_ptr->nameFilters());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_selectNameFilter(QFileDialog * this_ptr, QString const * filter) {
  this_ptr->selectNameFilter(*filter);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_selectedMimeTypeFilter(QFileDialog const * this_ptr) {
  return new QString(this_ptr->selectedMimeTypeFilter());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_selectedNameFilter(QFileDialog const * this_ptr) {
  return new QString(this_ptr->selectedNameFilter());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setMimeTypeFilters(QFileDialog * this_ptr, QStringList const * filters) {
  this_ptr->setMimeTypeFilters(*filters);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_mimeTypeFilters(QFileDialog const * this_ptr) {
  return new QStringList(this_ptr->mimeTypeFilters());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_selectMimeTypeFilter(QFileDialog * this_ptr, QString const * filter) {
  this_ptr->selectMimeTypeFilter(*filter);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileDialog_filter(QFileDialog const * this_ptr) {
  return int(this_ptr->filter());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setFilter(QFileDialog * this_ptr, int filters) {
  this_ptr->setFilter(QFlags< QDir::Filter >(filters));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setViewMode(QFileDialog * this_ptr, QFileDialog::ViewMode mode) {
  this_ptr->setViewMode(mode);
}


RITUAL_EXPORT QFileDialog::ViewMode ctr_qt_widgets_ffi_QFileDialog_viewMode(QFileDialog const * this_ptr) {
  return this_ptr->viewMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setFileMode(QFileDialog * this_ptr, QFileDialog::FileMode mode) {
  this_ptr->setFileMode(mode);
}


RITUAL_EXPORT QFileDialog::FileMode ctr_qt_widgets_ffi_QFileDialog_fileMode(QFileDialog const * this_ptr) {
  return this_ptr->fileMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setAcceptMode(QFileDialog * this_ptr, QFileDialog::AcceptMode mode) {
  this_ptr->setAcceptMode(mode);
}


RITUAL_EXPORT QFileDialog::AcceptMode ctr_qt_widgets_ffi_QFileDialog_acceptMode(QFileDialog const * this_ptr) {
  return this_ptr->acceptMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setReadOnly(QFileDialog * this_ptr, bool enabled) {
  this_ptr->setReadOnly(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileDialog_isReadOnly(QFileDialog const * this_ptr) {
  return this_ptr->isReadOnly();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setResolveSymlinks(QFileDialog * this_ptr, bool enabled) {
  this_ptr->setResolveSymlinks(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileDialog_resolveSymlinks(QFileDialog const * this_ptr) {
  return this_ptr->resolveSymlinks();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setSidebarUrls(QFileDialog * this_ptr, QList< QUrl > const * urls) {
  this_ptr->setSidebarUrls(*urls);
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_sidebarUrls(QFileDialog const * this_ptr) {
  return new QList< QUrl >(this_ptr->sidebarUrls());
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QFileDialog_saveState(QFileDialog const * this_ptr) {
  return new QByteArray(this_ptr->saveState());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileDialog_restoreState(QFileDialog * this_ptr, QByteArray const * state) {
  return this_ptr->restoreState(*state);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setConfirmOverwrite(QFileDialog * this_ptr, bool enabled) {
  this_ptr->setConfirmOverwrite(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileDialog_confirmOverwrite(QFileDialog const * this_ptr) {
  return this_ptr->confirmOverwrite();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setDefaultSuffix(QFileDialog * this_ptr, QString const * suffix) {
  this_ptr->setDefaultSuffix(*suffix);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_defaultSuffix(QFileDialog const * this_ptr) {
  return new QString(this_ptr->defaultSuffix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setHistory(QFileDialog * this_ptr, QStringList const * paths) {
  this_ptr->setHistory(*paths);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_history(QFileDialog const * this_ptr) {
  return new QStringList(this_ptr->history());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setItemDelegate(QFileDialog * this_ptr, QAbstractItemDelegate * delegate) {
  this_ptr->setItemDelegate(delegate);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_QFileDialog_itemDelegate(QFileDialog const * this_ptr) {
  return this_ptr->itemDelegate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setIconProvider(QFileDialog * this_ptr, QFileIconProvider * provider) {
  this_ptr->setIconProvider(provider);
}


RITUAL_EXPORT QFileIconProvider * ctr_qt_widgets_ffi_QFileDialog_iconProvider(QFileDialog const * this_ptr) {
  return this_ptr->iconProvider();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setLabelText(QFileDialog * this_ptr, QFileDialog::DialogLabel label, QString const * text) {
  this_ptr->setLabelText(label, *text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_labelText(QFileDialog const * this_ptr, QFileDialog::DialogLabel label) {
  return new QString(this_ptr->labelText(label));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setSupportedSchemes(QFileDialog * this_ptr, QStringList const * schemes) {
  this_ptr->setSupportedSchemes(*schemes);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_supportedSchemes(QFileDialog const * this_ptr) {
  return new QStringList(this_ptr->supportedSchemes());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setProxyModel(QFileDialog * this_ptr, QAbstractProxyModel * model) {
  this_ptr->setProxyModel(model);
}


RITUAL_EXPORT QAbstractProxyModel * ctr_qt_widgets_ffi_QFileDialog_proxyModel(QFileDialog const * this_ptr) {
  return this_ptr->proxyModel();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setOption(QFileDialog * this_ptr, QFileDialog::Option option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileDialog_testOption(QFileDialog const * this_ptr, QFileDialog::Option option) {
  return this_ptr->testOption(option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setOptions(QFileDialog * this_ptr, int options) {
  this_ptr->setOptions(QFlags< QFileDialog::Option >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileDialog_options(QFileDialog const * this_ptr) {
  return int(this_ptr->options());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_open(QFileDialog * this_ptr, QObject * receiver, char const * member) {
  this_ptr->open(receiver, member);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setVisible(QFileDialog * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getOpenFileName(QWidget * parent, QString const * caption, QString const * dir, QString const * filter, QString * selectedFilter, int options) {
  return new QString(QFileDialog::getOpenFileName(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter, int options, QStringList const * supportedSchemes) {
  return new QUrl(QFileDialog::getOpenFileUrl(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options), *supportedSchemes));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getSaveFileName(QWidget * parent, QString const * caption, QString const * dir, QString const * filter, QString * selectedFilter, int options) {
  return new QString(QFileDialog::getSaveFileName(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter, int options, QStringList const * supportedSchemes) {
  return new QUrl(QFileDialog::getSaveFileUrl(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options), *supportedSchemes));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectory(QWidget * parent, QString const * caption, QString const * dir, int options) {
  return new QString(QFileDialog::getExistingDirectory(parent, *caption, *dir, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectoryUrl(QWidget * parent, QString const * caption, QUrl const * dir, int options, QStringList const * supportedSchemes) {
  return new QUrl(QFileDialog::getExistingDirectoryUrl(parent, *caption, *dir, QFlags< QFileDialog::Option >(options), *supportedSchemes));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_getOpenFileNames(QWidget * parent, QString const * caption, QString const * dir, QString const * filter, QString * selectedFilter, int options) {
  return new QStringList(QFileDialog::getOpenFileNames(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter, int options, QStringList const * supportedSchemes) {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options), *supportedSchemes));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_saveFileContent(QByteArray const * fileContent, QString const * fileNameHint) {
  QFileDialog::saveFileContent(*fileContent, *fileNameHint);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFileSystemModel_metaObject(QFileSystemModel const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QFileSystemModel_qt_metacast(QFileSystemModel * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_qt_metacall(QFileSystemModel * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileSystemModel_tr(char const * s, char const * c, int n) {
  return new QString(QFileSystemModel::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileSystemModel_trUtf8(char const * s, char const * c, int n) {
  return new QString(QFileSystemModel::trUtf8(s, c, n));
}


RITUAL_EXPORT QFileSystemModel * ctr_qt_widgets_ffi_QFileSystemModel_QFileSystemModel(QObject * parent) {
  return new QFileSystemModel(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_dQFileSystemModel(QFileSystemModel * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_index(QFileSystemModel const * this_ptr, int row, int column, QModelIndex const * parent) {
  return new QModelIndex(this_ptr->index(row, column, *parent));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_index1(QFileSystemModel const * this_ptr, QString const * path, int column) {
  return new QModelIndex(this_ptr->index(*path, column));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_parent(QFileSystemModel const * this_ptr, QModelIndex const * child) {
  return new QModelIndex(this_ptr->parent(*child));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_sibling(QFileSystemModel const * this_ptr, int row, int column, QModelIndex const * idx) {
  return new QModelIndex(this_ptr->sibling(row, column, *idx));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_hasChildren(QFileSystemModel const * this_ptr, QModelIndex const * parent) {
  return this_ptr->hasChildren(*parent);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_canFetchMore(QFileSystemModel const * this_ptr, QModelIndex const * parent) {
  return this_ptr->canFetchMore(*parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_fetchMore(QFileSystemModel * this_ptr, QModelIndex const * parent) {
  this_ptr->fetchMore(*parent);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_rowCount(QFileSystemModel const * this_ptr, QModelIndex const * parent) {
  return this_ptr->rowCount(*parent);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_columnCount(QFileSystemModel const * this_ptr, QModelIndex const * parent) {
  return this_ptr->columnCount(*parent);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QFileSystemModel_myComputer(QFileSystemModel const * this_ptr, int role) {
  return new QVariant(this_ptr->myComputer(role));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QFileSystemModel_data(QFileSystemModel const * this_ptr, QModelIndex const * index, int role) {
  return new QVariant(this_ptr->data(*index, role));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_setData(QFileSystemModel * this_ptr, QModelIndex const * index, QVariant const * value, int role) {
  return this_ptr->setData(*index, *value, role);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QFileSystemModel_headerData(QFileSystemModel const * this_ptr, int section, Qt::Orientation orientation, int role) {
  return new QVariant(this_ptr->headerData(section, orientation, role));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_flags(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return int(this_ptr->flags(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_sort(QFileSystemModel * this_ptr, int column, Qt::SortOrder order) {
  this_ptr->sort(column, order);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileSystemModel_mimeTypes(QFileSystemModel const * this_ptr) {
  return new QStringList(this_ptr->mimeTypes());
}


RITUAL_EXPORT QMimeData * ctr_qt_widgets_ffi_QFileSystemModel_mimeData(QFileSystemModel const * this_ptr, QList< QModelIndex > const * indexes) {
  return this_ptr->mimeData(*indexes);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_dropMimeData(QFileSystemModel * this_ptr, QMimeData const * data, Qt::DropAction action, int row, int column, QModelIndex const * parent) {
  return this_ptr->dropMimeData(data, action, row, column, *parent);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_supportedDropActions(QFileSystemModel const * this_ptr) {
  return int(this_ptr->supportedDropActions());
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_setRootPath(QFileSystemModel * this_ptr, QString const * path) {
  return new QModelIndex(this_ptr->setRootPath(*path));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileSystemModel_rootPath(QFileSystemModel const * this_ptr) {
  return new QString(this_ptr->rootPath());
}


RITUAL_EXPORT QDir * ctr_qt_widgets_ffi_QFileSystemModel_rootDirectory(QFileSystemModel const * this_ptr) {
  return new QDir(this_ptr->rootDirectory());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setIconProvider(QFileSystemModel * this_ptr, QFileIconProvider * provider) {
  this_ptr->setIconProvider(provider);
}


RITUAL_EXPORT QFileIconProvider * ctr_qt_widgets_ffi_QFileSystemModel_iconProvider(QFileSystemModel const * this_ptr) {
  return this_ptr->iconProvider();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setFilter(QFileSystemModel * this_ptr, int filters) {
  this_ptr->setFilter(QFlags< QDir::Filter >(filters));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_filter(QFileSystemModel const * this_ptr) {
  return int(this_ptr->filter());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setResolveSymlinks(QFileSystemModel * this_ptr, bool enable) {
  this_ptr->setResolveSymlinks(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_resolveSymlinks(QFileSystemModel const * this_ptr) {
  return this_ptr->resolveSymlinks();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setReadOnly(QFileSystemModel * this_ptr, bool enable) {
  this_ptr->setReadOnly(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_isReadOnly(QFileSystemModel const * this_ptr) {
  return this_ptr->isReadOnly();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setNameFilterDisables(QFileSystemModel * this_ptr, bool enable) {
  this_ptr->setNameFilterDisables(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_nameFilterDisables(QFileSystemModel const * this_ptr) {
  return this_ptr->nameFilterDisables();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setNameFilters(QFileSystemModel * this_ptr, QStringList const * filters) {
  this_ptr->setNameFilters(*filters);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileSystemModel_nameFilters(QFileSystemModel const * this_ptr) {
  return new QStringList(this_ptr->nameFilters());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setOption(QFileSystemModel * this_ptr, QFileSystemModel::Option option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_testOption(QFileSystemModel const * this_ptr, QFileSystemModel::Option option) {
  return this_ptr->testOption(option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setOptions(QFileSystemModel * this_ptr, int options) {
  this_ptr->setOptions(QFlags< QFileSystemModel::Option >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_options(QFileSystemModel const * this_ptr) {
  return int(this_ptr->options());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileSystemModel_filePath(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return new QString(this_ptr->filePath(*index));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_isDir(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return this_ptr->isDir(*index);
}


RITUAL_EXPORT qint64 ctr_qt_widgets_ffi_QFileSystemModel_size(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return this_ptr->size(*index);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileSystemModel_type(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return new QString(this_ptr->type(*index));
}


RITUAL_EXPORT QDateTime * ctr_qt_widgets_ffi_QFileSystemModel_lastModified(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return new QDateTime(this_ptr->lastModified(*index));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_mkdir(QFileSystemModel * this_ptr, QModelIndex const * parent, QString const * name) {
  return new QModelIndex(this_ptr->mkdir(*parent, *name));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_rmdir(QFileSystemModel * this_ptr, QModelIndex const * index) {
  return this_ptr->rmdir(*index);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileSystemModel_fileName(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return new QString(this_ptr->fileName(*index));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QFileSystemModel_fileIcon(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return new QIcon(this_ptr->fileIcon(*index));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_permissions(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return int(this_ptr->permissions(*index));
}


RITUAL_EXPORT QFileInfo * ctr_qt_widgets_ffi_QFileSystemModel_fileInfo(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return new QFileInfo(this_ptr->fileInfo(*index));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_remove(QFileSystemModel * this_ptr, QModelIndex const * index) {
  return this_ptr->remove(*index);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFocusFrame_metaObject(QFocusFrame const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QFocusFrame_qt_metacast(QFocusFrame * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFocusFrame_qt_metacall(QFocusFrame * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFocusFrame_tr(char const * s, char const * c, int n) {
  return new QString(QFocusFrame::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFocusFrame_trUtf8(char const * s, char const * c, int n) {
  return new QString(QFocusFrame::trUtf8(s, c, n));
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_QFocusFrame_QFocusFrame(QWidget * parent) {
  return new QFocusFrame(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFocusFrame_dQFocusFrame(QFocusFrame * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFocusFrame_setWidget(QFocusFrame * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QFocusFrame_widget(QFocusFrame const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFontComboBox_metaObject(QFontComboBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QFontComboBox_qt_metacast(QFontComboBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFontComboBox_qt_metacall(QFontComboBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFontComboBox_tr(char const * s, char const * c, int n) {
  return new QString(QFontComboBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFontComboBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QFontComboBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_QFontComboBox_QFontComboBox(QWidget * parent) {
  return new QFontComboBox(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontComboBox_dQFontComboBox(QFontComboBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontComboBox_setWritingSystem(QFontComboBox * this_ptr, QFontDatabase::WritingSystem arg1) {
  this_ptr->setWritingSystem(arg1);
}


RITUAL_EXPORT QFontDatabase::WritingSystem ctr_qt_widgets_ffi_QFontComboBox_writingSystem(QFontComboBox const * this_ptr) {
  return this_ptr->writingSystem();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontComboBox_setFontFilters(QFontComboBox * this_ptr, int filters) {
  this_ptr->setFontFilters(QFlags< QFontComboBox::FontFilter >(filters));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFontComboBox_fontFilters(QFontComboBox const * this_ptr) {
  return int(this_ptr->fontFilters());
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontComboBox_currentFont(QFontComboBox const * this_ptr) {
  return new QFont(this_ptr->currentFont());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QFontComboBox_sizeHint(QFontComboBox const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontComboBox_setCurrentFont(QFontComboBox * this_ptr, QFont const * f) {
  this_ptr->setCurrentFont(*f);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFontDialog_metaObject(QFontDialog const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QFontDialog_qt_metacast(QFontDialog * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFontDialog_qt_metacall(QFontDialog * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFontDialog_tr(char const * s, char const * c, int n) {
  return new QString(QFontDialog::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFontDialog_trUtf8(char const * s, char const * c, int n) {
  return new QString(QFontDialog::trUtf8(s, c, n));
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_QFontDialog_QFontDialog(QWidget * parent) {
  return new QFontDialog(parent);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_QFontDialog_QFontDialog1(QFont const * initial, QWidget * parent) {
  return new QFontDialog(*initial, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontDialog_dQFontDialog(QFontDialog * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontDialog_setCurrentFont(QFontDialog * this_ptr, QFont const * font) {
  this_ptr->setCurrentFont(*font);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_currentFont(QFontDialog const * this_ptr) {
  return new QFont(this_ptr->currentFont());
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_selectedFont(QFontDialog const * this_ptr) {
  return new QFont(this_ptr->selectedFont());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontDialog_setOption(QFontDialog * this_ptr, QFontDialog::FontDialogOption option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFontDialog_testOption(QFontDialog const * this_ptr, QFontDialog::FontDialogOption option) {
  return this_ptr->testOption(option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontDialog_setOptions(QFontDialog * this_ptr, int options) {
  this_ptr->setOptions(QFlags< QFontDialog::FontDialogOption >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFontDialog_options(QFontDialog const * this_ptr) {
  return int(this_ptr->options());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontDialog_open(QFontDialog * this_ptr, QObject * receiver, char const * member) {
  this_ptr->open(receiver, member);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontDialog_setVisible(QFontDialog * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_getFont(bool * ok, QWidget * parent) {
  return new QFont(QFontDialog::getFont(ok, parent));
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_getFont1(bool * ok, QFont const * initial, QWidget * parent, QString const * title, int options) {
  return new QFont(QFontDialog::getFont(ok, *initial, parent, *title, QFlags< QFontDialog::FontDialogOption >(options)));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QFormLayout_metaObject(QFormLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QFormLayout_qt_metacast(QFormLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_qt_metacall(QFormLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFormLayout_tr(char const * s, char const * c, int n) {
  return new QString(QFormLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFormLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QFormLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_QFormLayout_QFormLayout(QWidget * parent) {
  return new QFormLayout(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_dQFormLayout(QFormLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setFieldGrowthPolicy(QFormLayout * this_ptr, QFormLayout::FieldGrowthPolicy policy) {
  this_ptr->setFieldGrowthPolicy(policy);
}


RITUAL_EXPORT QFormLayout::FieldGrowthPolicy ctr_qt_widgets_ffi_QFormLayout_fieldGrowthPolicy(QFormLayout const * this_ptr) {
  return this_ptr->fieldGrowthPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setRowWrapPolicy(QFormLayout * this_ptr, QFormLayout::RowWrapPolicy policy) {
  this_ptr->setRowWrapPolicy(policy);
}


RITUAL_EXPORT QFormLayout::RowWrapPolicy ctr_qt_widgets_ffi_QFormLayout_rowWrapPolicy(QFormLayout const * this_ptr) {
  return this_ptr->rowWrapPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setLabelAlignment(QFormLayout * this_ptr, int alignment) {
  this_ptr->setLabelAlignment(QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_labelAlignment(QFormLayout const * this_ptr) {
  return int(this_ptr->labelAlignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setFormAlignment(QFormLayout * this_ptr, int alignment) {
  this_ptr->setFormAlignment(QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_formAlignment(QFormLayout const * this_ptr) {
  return int(this_ptr->formAlignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setHorizontalSpacing(QFormLayout * this_ptr, int spacing) {
  this_ptr->setHorizontalSpacing(spacing);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_horizontalSpacing(QFormLayout const * this_ptr) {
  return this_ptr->horizontalSpacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setVerticalSpacing(QFormLayout * this_ptr, int spacing) {
  this_ptr->setVerticalSpacing(spacing);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_verticalSpacing(QFormLayout const * this_ptr) {
  return this_ptr->verticalSpacing();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_spacing(QFormLayout const * this_ptr) {
  return this_ptr->spacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setSpacing(QFormLayout * this_ptr, int arg1) {
  this_ptr->setSpacing(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_addRow(QFormLayout * this_ptr, QWidget * label, QWidget * field) {
  this_ptr->addRow(label, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_addRow1(QFormLayout * this_ptr, QWidget * label, QLayout * field) {
  this_ptr->addRow(label, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_addRow2(QFormLayout * this_ptr, QString const * labelText, QWidget * field) {
  this_ptr->addRow(*labelText, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_addRow3(QFormLayout * this_ptr, QString const * labelText, QLayout * field) {
  this_ptr->addRow(*labelText, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_addRow4(QFormLayout * this_ptr, QWidget * widget) {
  this_ptr->addRow(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_addRow5(QFormLayout * this_ptr, QLayout * layout) {
  this_ptr->addRow(layout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_insertRow(QFormLayout * this_ptr, int row, QWidget * label, QWidget * field) {
  this_ptr->insertRow(row, label, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_insertRow1(QFormLayout * this_ptr, int row, QWidget * label, QLayout * field) {
  this_ptr->insertRow(row, label, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_insertRow2(QFormLayout * this_ptr, int row, QString const * labelText, QWidget * field) {
  this_ptr->insertRow(row, *labelText, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_insertRow3(QFormLayout * this_ptr, int row, QString const * labelText, QLayout * field) {
  this_ptr->insertRow(row, *labelText, field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_insertRow4(QFormLayout * this_ptr, int row, QWidget * widget) {
  this_ptr->insertRow(row, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_insertRow5(QFormLayout * this_ptr, int row, QLayout * layout) {
  this_ptr->insertRow(row, layout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_removeRow(QFormLayout * this_ptr, int row) {
  this_ptr->removeRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_removeRow1(QFormLayout * this_ptr, QWidget * widget) {
  this_ptr->removeRow(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_removeRow2(QFormLayout * this_ptr, QLayout * layout) {
  this_ptr->removeRow(layout);
}


RITUAL_EXPORT QFormLayout::TakeRowResult * ctr_qt_widgets_ffi_QFormLayout_takeRow(QFormLayout * this_ptr, int row) {
  return new QFormLayout::TakeRowResult(this_ptr->takeRow(row));
}


RITUAL_EXPORT QFormLayout::TakeRowResult * ctr_qt_widgets_ffi_QFormLayout_takeRow1(QFormLayout * this_ptr, QWidget * widget) {
  return new QFormLayout::TakeRowResult(this_ptr->takeRow(widget));
}


RITUAL_EXPORT QFormLayout::TakeRowResult * ctr_qt_widgets_ffi_QFormLayout_takeRow2(QFormLayout * this_ptr, QLayout * layout) {
  return new QFormLayout::TakeRowResult(this_ptr->takeRow(layout));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setItem(QFormLayout * this_ptr, int row, QFormLayout::ItemRole role, QLayoutItem * item) {
  this_ptr->setItem(row, role, item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setWidget(QFormLayout * this_ptr, int row, QFormLayout::ItemRole role, QWidget * widget) {
  this_ptr->setWidget(row, role, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setLayout(QFormLayout * this_ptr, int row, QFormLayout::ItemRole role, QLayout * layout) {
  this_ptr->setLayout(row, role, layout);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QFormLayout_itemAt(QFormLayout const * this_ptr, int row, QFormLayout::ItemRole role) {
  return this_ptr->itemAt(row, role);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_getItemPosition(QFormLayout const * this_ptr, int index, int * rowPtr, QFormLayout::ItemRole * rolePtr) {
  this_ptr->getItemPosition(index, rowPtr, rolePtr);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_getWidgetPosition(QFormLayout const * this_ptr, QWidget * widget, int * rowPtr, QFormLayout::ItemRole * rolePtr) {
  this_ptr->getWidgetPosition(widget, rowPtr, rolePtr);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_getLayoutPosition(QFormLayout const * this_ptr, QLayout * layout, int * rowPtr, QFormLayout::ItemRole * rolePtr) {
  this_ptr->getLayoutPosition(layout, rowPtr, rolePtr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QFormLayout_labelForField(QFormLayout const * this_ptr, QWidget * field) {
  return this_ptr->labelForField(field);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QFormLayout_labelForField1(QFormLayout const * this_ptr, QLayout * field) {
  return this_ptr->labelForField(field);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_addItem(QFormLayout * this_ptr, QLayoutItem * item) {
  this_ptr->addItem(item);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QFormLayout_itemAt1(QFormLayout const * this_ptr, int index) {
  return this_ptr->itemAt(index);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QFormLayout_takeAt(QFormLayout * this_ptr, int index) {
  return this_ptr->takeAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_setGeometry(QFormLayout * this_ptr, QRect const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QFormLayout_minimumSize(QFormLayout const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QFormLayout_sizeHint(QFormLayout const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_invalidate(QFormLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFormLayout_hasHeightForWidth(QFormLayout const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_heightForWidth(QFormLayout const * this_ptr, int width) {
  return this_ptr->heightForWidth(width);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_expandingDirections(QFormLayout const * this_ptr) {
  return int(this_ptr->expandingDirections());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_count(QFormLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFormLayout_rowCount(QFormLayout const * this_ptr) {
  return this_ptr->rowCount();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGesture_metaObject(QGesture const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGesture_qt_metacast(QGesture * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGesture_qt_metacall(QGesture * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGesture_tr(char const * s, char const * c, int n) {
  return new QString(QGesture::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGesture_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGesture::trUtf8(s, c, n));
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QGesture_QGesture(QObject * parent) {
  return new QGesture(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGesture_dQGesture(QGesture * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QGesture_gestureType(QGesture const * this_ptr) {
  return this_ptr->gestureType();
}


RITUAL_EXPORT Qt::GestureState ctr_qt_widgets_ffi_QGesture_state(QGesture const * this_ptr) {
  return this_ptr->state();
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGesture_hotSpot(QGesture const * this_ptr) {
  return new QPointF(this_ptr->hotSpot());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGesture_setHotSpot(QGesture * this_ptr, QPointF const * value) {
  this_ptr->setHotSpot(*value);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGesture_hasHotSpot(QGesture const * this_ptr) {
  return this_ptr->hasHotSpot();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGesture_unsetHotSpot(QGesture * this_ptr) {
  this_ptr->unsetHotSpot();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGesture_setGestureCancelPolicy(QGesture * this_ptr, QGesture::GestureCancelPolicy policy) {
  this_ptr->setGestureCancelPolicy(policy);
}


RITUAL_EXPORT QGesture::GestureCancelPolicy ctr_qt_widgets_ffi_QGesture_gestureCancelPolicy(QGesture const * this_ptr) {
  return this_ptr->gestureCancelPolicy();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPanGesture_metaObject(QPanGesture const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QPanGesture_qt_metacast(QPanGesture * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPanGesture_qt_metacall(QPanGesture * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPanGesture_tr(char const * s, char const * c, int n) {
  return new QString(QPanGesture::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPanGesture_trUtf8(char const * s, char const * c, int n) {
  return new QString(QPanGesture::trUtf8(s, c, n));
}


RITUAL_EXPORT QPanGesture * ctr_qt_widgets_ffi_QPanGesture_QPanGesture(QObject * parent) {
  return new QPanGesture(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPanGesture_dQPanGesture(QPanGesture * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QPanGesture_lastOffset(QPanGesture const * this_ptr) {
  return new QPointF(this_ptr->lastOffset());
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QPanGesture_offset(QPanGesture const * this_ptr) {
  return new QPointF(this_ptr->offset());
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QPanGesture_delta(QPanGesture const * this_ptr) {
  return new QPointF(this_ptr->delta());
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPanGesture_acceleration(QPanGesture const * this_ptr) {
  return this_ptr->acceleration();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPanGesture_setLastOffset(QPanGesture * this_ptr, QPointF const * value) {
  this_ptr->setLastOffset(*value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPanGesture_setOffset(QPanGesture * this_ptr, QPointF const * value) {
  this_ptr->setOffset(*value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPanGesture_setAcceleration(QPanGesture * this_ptr, double value) {
  this_ptr->setAcceleration(value);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPinchGesture_metaObject(QPinchGesture const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QPinchGesture_qt_metacast(QPinchGesture * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPinchGesture_qt_metacall(QPinchGesture * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPinchGesture_tr(char const * s, char const * c, int n) {
  return new QString(QPinchGesture::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPinchGesture_trUtf8(char const * s, char const * c, int n) {
  return new QString(QPinchGesture::trUtf8(s, c, n));
}


RITUAL_EXPORT QPinchGesture * ctr_qt_widgets_ffi_QPinchGesture_QPinchGesture(QObject * parent) {
  return new QPinchGesture(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_dQPinchGesture(QPinchGesture * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPinchGesture_totalChangeFlags(QPinchGesture const * this_ptr) {
  return int(this_ptr->totalChangeFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setTotalChangeFlags(QPinchGesture * this_ptr, int value) {
  this_ptr->setTotalChangeFlags(QFlags< QPinchGesture::ChangeFlag >(value));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPinchGesture_changeFlags(QPinchGesture const * this_ptr) {
  return int(this_ptr->changeFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setChangeFlags(QPinchGesture * this_ptr, int value) {
  this_ptr->setChangeFlags(QFlags< QPinchGesture::ChangeFlag >(value));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QPinchGesture_startCenterPoint(QPinchGesture const * this_ptr) {
  return new QPointF(this_ptr->startCenterPoint());
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QPinchGesture_lastCenterPoint(QPinchGesture const * this_ptr) {
  return new QPointF(this_ptr->lastCenterPoint());
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QPinchGesture_centerPoint(QPinchGesture const * this_ptr) {
  return new QPointF(this_ptr->centerPoint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setStartCenterPoint(QPinchGesture * this_ptr, QPointF const * value) {
  this_ptr->setStartCenterPoint(*value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setLastCenterPoint(QPinchGesture * this_ptr, QPointF const * value) {
  this_ptr->setLastCenterPoint(*value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setCenterPoint(QPinchGesture * this_ptr, QPointF const * value) {
  this_ptr->setCenterPoint(*value);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPinchGesture_totalScaleFactor(QPinchGesture const * this_ptr) {
  return this_ptr->totalScaleFactor();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPinchGesture_lastScaleFactor(QPinchGesture const * this_ptr) {
  return this_ptr->lastScaleFactor();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPinchGesture_scaleFactor(QPinchGesture const * this_ptr) {
  return this_ptr->scaleFactor();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setTotalScaleFactor(QPinchGesture * this_ptr, double value) {
  this_ptr->setTotalScaleFactor(value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setLastScaleFactor(QPinchGesture * this_ptr, double value) {
  this_ptr->setLastScaleFactor(value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setScaleFactor(QPinchGesture * this_ptr, double value) {
  this_ptr->setScaleFactor(value);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPinchGesture_totalRotationAngle(QPinchGesture const * this_ptr) {
  return this_ptr->totalRotationAngle();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPinchGesture_lastRotationAngle(QPinchGesture const * this_ptr) {
  return this_ptr->lastRotationAngle();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPinchGesture_rotationAngle(QPinchGesture const * this_ptr) {
  return this_ptr->rotationAngle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setTotalRotationAngle(QPinchGesture * this_ptr, double value) {
  this_ptr->setTotalRotationAngle(value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setLastRotationAngle(QPinchGesture * this_ptr, double value) {
  this_ptr->setLastRotationAngle(value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPinchGesture_setRotationAngle(QPinchGesture * this_ptr, double value) {
  this_ptr->setRotationAngle(value);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSwipeGesture_metaObject(QSwipeGesture const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSwipeGesture_qt_metacast(QSwipeGesture * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSwipeGesture_qt_metacall(QSwipeGesture * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSwipeGesture_tr(char const * s, char const * c, int n) {
  return new QString(QSwipeGesture::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSwipeGesture_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSwipeGesture::trUtf8(s, c, n));
}


RITUAL_EXPORT QSwipeGesture * ctr_qt_widgets_ffi_QSwipeGesture_QSwipeGesture(QObject * parent) {
  return new QSwipeGesture(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSwipeGesture_dQSwipeGesture(QSwipeGesture * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSwipeGesture::SwipeDirection ctr_qt_widgets_ffi_QSwipeGesture_horizontalDirection(QSwipeGesture const * this_ptr) {
  return this_ptr->horizontalDirection();
}


RITUAL_EXPORT QSwipeGesture::SwipeDirection ctr_qt_widgets_ffi_QSwipeGesture_verticalDirection(QSwipeGesture const * this_ptr) {
  return this_ptr->verticalDirection();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QSwipeGesture_swipeAngle(QSwipeGesture const * this_ptr) {
  return this_ptr->swipeAngle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSwipeGesture_setSwipeAngle(QSwipeGesture * this_ptr, double value) {
  this_ptr->setSwipeAngle(value);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTapGesture_metaObject(QTapGesture const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTapGesture_qt_metacast(QTapGesture * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTapGesture_qt_metacall(QTapGesture * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTapGesture_tr(char const * s, char const * c, int n) {
  return new QString(QTapGesture::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTapGesture_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTapGesture::trUtf8(s, c, n));
}


RITUAL_EXPORT QTapGesture * ctr_qt_widgets_ffi_QTapGesture_QTapGesture(QObject * parent) {
  return new QTapGesture(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTapGesture_dQTapGesture(QTapGesture * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QTapGesture_position(QTapGesture const * this_ptr) {
  return new QPointF(this_ptr->position());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTapGesture_setPosition(QTapGesture * this_ptr, QPointF const * pos) {
  this_ptr->setPosition(*pos);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTapAndHoldGesture_metaObject(QTapAndHoldGesture const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTapAndHoldGesture_qt_metacast(QTapAndHoldGesture * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTapAndHoldGesture_qt_metacall(QTapAndHoldGesture * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTapAndHoldGesture_tr(char const * s, char const * c, int n) {
  return new QString(QTapAndHoldGesture::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTapAndHoldGesture_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTapAndHoldGesture::trUtf8(s, c, n));
}


RITUAL_EXPORT QTapAndHoldGesture * ctr_qt_widgets_ffi_QTapAndHoldGesture_QTapAndHoldGesture(QObject * parent) {
  return new QTapAndHoldGesture(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTapAndHoldGesture_dQTapAndHoldGesture(QTapAndHoldGesture * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QTapAndHoldGesture_position(QTapAndHoldGesture const * this_ptr) {
  return new QPointF(this_ptr->position());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTapAndHoldGesture_setPosition(QTapAndHoldGesture * this_ptr, QPointF const * pos) {
  this_ptr->setPosition(*pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTapAndHoldGesture_setTimeout(int msecs) {
  QTapAndHoldGesture::setTimeout(msecs);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTapAndHoldGesture_timeout() {
  return QTapAndHoldGesture::timeout();
}


RITUAL_EXPORT QGestureEvent * ctr_qt_widgets_ffi_QGestureEvent_QGestureEvent(QList< QGesture * > const * gestures) {
  return new QGestureEvent(*gestures);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_dQGestureEvent(QGestureEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QGestureEvent_gestures(QGestureEvent const * this_ptr) {
  return new QList< QGesture * >(this_ptr->gestures());
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QGestureEvent_gesture(QGestureEvent const * this_ptr, Qt::GestureType type) {
  return this_ptr->gesture(type);
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QGestureEvent_activeGestures(QGestureEvent const * this_ptr) {
  return new QList< QGesture * >(this_ptr->activeGestures());
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QGestureEvent_canceledGestures(QGestureEvent const * this_ptr) {
  return new QList< QGesture * >(this_ptr->canceledGestures());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_setAccepted(QGestureEvent * this_ptr, QGesture * arg1, bool arg2) {
  this_ptr->setAccepted(arg1, arg2);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_accept(QGestureEvent * this_ptr, QGesture * arg1) {
  this_ptr->accept(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_ignore(QGestureEvent * this_ptr, QGesture * arg1) {
  this_ptr->ignore(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGestureEvent_isAccepted(QGestureEvent const * this_ptr, QGesture * arg1) {
  return this_ptr->isAccepted(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_setAccepted1(QGestureEvent * this_ptr, Qt::GestureType arg1, bool arg2) {
  this_ptr->setAccepted(arg1, arg2);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_accept1(QGestureEvent * this_ptr, Qt::GestureType arg1) {
  this_ptr->accept(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_ignore1(QGestureEvent * this_ptr, Qt::GestureType arg1) {
  this_ptr->ignore(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGestureEvent_isAccepted1(QGestureEvent const * this_ptr, Qt::GestureType arg1) {
  return this_ptr->isAccepted(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureEvent_setWidget(QGestureEvent * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QGestureEvent_widget(QGestureEvent const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGestureEvent_mapToGraphicsScene(QGestureEvent const * this_ptr, QPointF const * gesturePoint) {
  return new QPointF(this_ptr->mapToGraphicsScene(*gesturePoint));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__7(QDebug const * arg1, QGesture const * arg2) {
  return new QDebug(operator<<(*arg1, arg2));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__8(QDebug const * arg1, QGestureEvent const * arg2) {
  return new QDebug(operator<<(*arg1, arg2));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureRecognizer_dQGestureRecognizer(QGestureRecognizer * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QGestureRecognizer_create(QGestureRecognizer * this_ptr, QObject * target) {
  return this_ptr->create(target);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGestureRecognizer_recognize(QGestureRecognizer * this_ptr, QGesture * state, QObject * watched, QEvent * event) {
  return int(this_ptr->recognize(state, watched, event));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureRecognizer_reset(QGestureRecognizer * this_ptr, QGesture * state) {
  this_ptr->reset(state);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QGestureRecognizer_registerRecognizer(QGestureRecognizer * recognizer) {
  return QGestureRecognizer::registerRecognizer(recognizer);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGestureRecognizer_unregisterRecognizer(Qt::GestureType type) {
  QGestureRecognizer::unregisterRecognizer(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_dQGraphicsItem(QGraphicsItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsItem_scene(QGraphicsItem const * this_ptr) {
  return this_ptr->scene();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItem_parentItem(QGraphicsItem const * this_ptr) {
  return this_ptr->parentItem();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItem_topLevelItem(QGraphicsItem const * this_ptr) {
  return this_ptr->topLevelItem();
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_QGraphicsItem_parentObject(QGraphicsItem const * this_ptr) {
  return this_ptr->parentObject();
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsItem_parentWidget(QGraphicsItem const * this_ptr) {
  return this_ptr->parentWidget();
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsItem_topLevelWidget(QGraphicsItem const * this_ptr) {
  return this_ptr->topLevelWidget();
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsItem_window(QGraphicsItem const * this_ptr) {
  return this_ptr->window();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItem_panel(QGraphicsItem const * this_ptr) {
  return this_ptr->panel();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setParentItem(QGraphicsItem * this_ptr, QGraphicsItem * parent) {
  this_ptr->setParentItem(parent);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsItem_childItems(QGraphicsItem const * this_ptr) {
  return new QList< QGraphicsItem * >(this_ptr->childItems());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isWidget(QGraphicsItem const * this_ptr) {
  return this_ptr->isWidget();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isWindow(QGraphicsItem const * this_ptr) {
  return this_ptr->isWindow();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isPanel(QGraphicsItem const * this_ptr) {
  return this_ptr->isPanel();
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_QGraphicsItem_toGraphicsObject(QGraphicsItem * this_ptr) {
  return this_ptr->toGraphicsObject();
}


RITUAL_EXPORT QGraphicsObject const * ctr_qt_widgets_ffi_QGraphicsItem_toGraphicsObject1(QGraphicsItem const * this_ptr) {
  return this_ptr->toGraphicsObject();
}


RITUAL_EXPORT QGraphicsItemGroup * ctr_qt_widgets_ffi_QGraphicsItem_group(QGraphicsItem const * this_ptr) {
  return this_ptr->group();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setGroup(QGraphicsItem * this_ptr, QGraphicsItemGroup * group) {
  this_ptr->setGroup(group);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsItem_flags(QGraphicsItem const * this_ptr) {
  return int(this_ptr->flags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setFlag(QGraphicsItem * this_ptr, QGraphicsItem::GraphicsItemFlag flag, bool enabled) {
  this_ptr->setFlag(flag, enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setFlags(QGraphicsItem * this_ptr, int flags) {
  this_ptr->setFlags(QFlags< QGraphicsItem::GraphicsItemFlag >(flags));
}


RITUAL_EXPORT QGraphicsItem::CacheMode ctr_qt_widgets_ffi_QGraphicsItem_cacheMode(QGraphicsItem const * this_ptr) {
  return this_ptr->cacheMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setCacheMode(QGraphicsItem * this_ptr, QGraphicsItem::CacheMode mode, QSize const * cacheSize) {
  this_ptr->setCacheMode(mode, *cacheSize);
}


RITUAL_EXPORT QGraphicsItem::PanelModality ctr_qt_widgets_ffi_QGraphicsItem_panelModality(QGraphicsItem const * this_ptr) {
  return this_ptr->panelModality();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setPanelModality(QGraphicsItem * this_ptr, QGraphicsItem::PanelModality panelModality) {
  this_ptr->setPanelModality(panelModality);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isBlockedByModalPanel(QGraphicsItem const * this_ptr, QGraphicsItem * * blockingPanel) {
  return this_ptr->isBlockedByModalPanel(blockingPanel);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsItem_toolTip(QGraphicsItem const * this_ptr) {
  return new QString(this_ptr->toolTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setToolTip(QGraphicsItem * this_ptr, QString const * toolTip) {
  this_ptr->setToolTip(*toolTip);
}


RITUAL_EXPORT QCursor * ctr_qt_widgets_ffi_QGraphicsItem_cursor(QGraphicsItem const * this_ptr) {
  return new QCursor(this_ptr->cursor());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setCursor(QGraphicsItem * this_ptr, QCursor const * cursor) {
  this_ptr->setCursor(*cursor);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_hasCursor(QGraphicsItem const * this_ptr) {
  return this_ptr->hasCursor();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_unsetCursor(QGraphicsItem * this_ptr) {
  this_ptr->unsetCursor();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isVisible(QGraphicsItem const * this_ptr) {
  return this_ptr->isVisible();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isVisibleTo(QGraphicsItem const * this_ptr, QGraphicsItem const * parent) {
  return this_ptr->isVisibleTo(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setVisible(QGraphicsItem * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_hide(QGraphicsItem * this_ptr) {
  this_ptr->hide();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_show(QGraphicsItem * this_ptr) {
  this_ptr->show();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isEnabled(QGraphicsItem const * this_ptr) {
  return this_ptr->isEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setEnabled(QGraphicsItem * this_ptr, bool enabled) {
  this_ptr->setEnabled(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isSelected(QGraphicsItem const * this_ptr) {
  return this_ptr->isSelected();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setSelected(QGraphicsItem * this_ptr, bool selected) {
  this_ptr->setSelected(selected);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_acceptDrops(QGraphicsItem const * this_ptr) {
  return this_ptr->acceptDrops();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setAcceptDrops(QGraphicsItem * this_ptr, bool on) {
  this_ptr->setAcceptDrops(on);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_opacity(QGraphicsItem const * this_ptr) {
  return this_ptr->opacity();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_effectiveOpacity(QGraphicsItem const * this_ptr) {
  return this_ptr->effectiveOpacity();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setOpacity(QGraphicsItem * this_ptr, double opacity) {
  this_ptr->setOpacity(opacity);
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_QGraphicsItem_graphicsEffect(QGraphicsItem const * this_ptr) {
  return this_ptr->graphicsEffect();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setGraphicsEffect(QGraphicsItem * this_ptr, QGraphicsEffect * effect) {
  this_ptr->setGraphicsEffect(effect);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsItem_acceptedMouseButtons(QGraphicsItem const * this_ptr) {
  return int(this_ptr->acceptedMouseButtons());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setAcceptedMouseButtons(QGraphicsItem * this_ptr, int buttons) {
  this_ptr->setAcceptedMouseButtons(QFlags< Qt::MouseButton >(buttons));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_acceptHoverEvents(QGraphicsItem const * this_ptr) {
  return this_ptr->acceptHoverEvents();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setAcceptHoverEvents(QGraphicsItem * this_ptr, bool enabled) {
  this_ptr->setAcceptHoverEvents(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_acceptTouchEvents(QGraphicsItem const * this_ptr) {
  return this_ptr->acceptTouchEvents();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setAcceptTouchEvents(QGraphicsItem * this_ptr, bool enabled) {
  this_ptr->setAcceptTouchEvents(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_filtersChildEvents(QGraphicsItem const * this_ptr) {
  return this_ptr->filtersChildEvents();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setFiltersChildEvents(QGraphicsItem * this_ptr, bool enabled) {
  this_ptr->setFiltersChildEvents(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_handlesChildEvents(QGraphicsItem const * this_ptr) {
  return this_ptr->handlesChildEvents();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setHandlesChildEvents(QGraphicsItem * this_ptr, bool enabled) {
  this_ptr->setHandlesChildEvents(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isActive(QGraphicsItem const * this_ptr) {
  return this_ptr->isActive();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setActive(QGraphicsItem * this_ptr, bool active) {
  this_ptr->setActive(active);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_hasFocus(QGraphicsItem const * this_ptr) {
  return this_ptr->hasFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setFocus(QGraphicsItem * this_ptr, Qt::FocusReason focusReason) {
  this_ptr->setFocus(focusReason);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_clearFocus(QGraphicsItem * this_ptr) {
  this_ptr->clearFocus();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItem_focusProxy(QGraphicsItem const * this_ptr) {
  return this_ptr->focusProxy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setFocusProxy(QGraphicsItem * this_ptr, QGraphicsItem * item) {
  this_ptr->setFocusProxy(item);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItem_focusItem(QGraphicsItem const * this_ptr) {
  return this_ptr->focusItem();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItem_focusScopeItem(QGraphicsItem const * this_ptr) {
  return this_ptr->focusScopeItem();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_grabMouse(QGraphicsItem * this_ptr) {
  this_ptr->grabMouse();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ungrabMouse(QGraphicsItem * this_ptr) {
  this_ptr->ungrabMouse();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_grabKeyboard(QGraphicsItem * this_ptr) {
  this_ptr->grabKeyboard();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ungrabKeyboard(QGraphicsItem * this_ptr) {
  this_ptr->ungrabKeyboard();
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_pos(QGraphicsItem const * this_ptr) {
  return new QPointF(this_ptr->pos());
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_x(QGraphicsItem const * this_ptr) {
  return this_ptr->x();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setX(QGraphicsItem * this_ptr, double x) {
  this_ptr->setX(x);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_y(QGraphicsItem const * this_ptr) {
  return this_ptr->y();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setY(QGraphicsItem * this_ptr, double y) {
  this_ptr->setY(y);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_scenePos(QGraphicsItem const * this_ptr) {
  return new QPointF(this_ptr->scenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setPos(QGraphicsItem * this_ptr, QPointF const * pos) {
  this_ptr->setPos(*pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setPos1(QGraphicsItem * this_ptr, double x, double y) {
  this_ptr->setPos(x, y);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_moveBy(QGraphicsItem * this_ptr, double dx, double dy) {
  this_ptr->moveBy(dx, dy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ensureVisible(QGraphicsItem * this_ptr, QRectF const * rect, int xmargin, int ymargin) {
  this_ptr->ensureVisible(*rect, xmargin, ymargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ensureVisible1(QGraphicsItem * this_ptr, double x, double y, double w, double h, int xmargin, int ymargin) {
  this_ptr->ensureVisible(x, y, w, h, xmargin, ymargin);
}


RITUAL_EXPORT QMatrix * ctr_qt_widgets_ffi_QGraphicsItem_matrix(QGraphicsItem const * this_ptr) {
  return new QMatrix(this_ptr->matrix());
}


RITUAL_EXPORT QMatrix * ctr_qt_widgets_ffi_QGraphicsItem_sceneMatrix(QGraphicsItem const * this_ptr) {
  return new QMatrix(this_ptr->sceneMatrix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setMatrix(QGraphicsItem * this_ptr, QMatrix const * matrix, bool combine) {
  this_ptr->setMatrix(*matrix, combine);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_resetMatrix(QGraphicsItem * this_ptr) {
  this_ptr->resetMatrix();
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsItem_transform(QGraphicsItem const * this_ptr) {
  return new QTransform(this_ptr->transform());
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsItem_sceneTransform(QGraphicsItem const * this_ptr) {
  return new QTransform(this_ptr->sceneTransform());
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsItem_deviceTransform(QGraphicsItem const * this_ptr, QTransform const * viewportTransform) {
  return new QTransform(this_ptr->deviceTransform(*viewportTransform));
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsItem_itemTransform(QGraphicsItem const * this_ptr, QGraphicsItem const * other, bool * ok) {
  return new QTransform(this_ptr->itemTransform(other, ok));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setTransform(QGraphicsItem * this_ptr, QTransform const * matrix, bool combine) {
  this_ptr->setTransform(*matrix, combine);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_resetTransform(QGraphicsItem * this_ptr) {
  this_ptr->resetTransform();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setRotation(QGraphicsItem * this_ptr, double angle) {
  this_ptr->setRotation(angle);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_rotation(QGraphicsItem const * this_ptr) {
  return this_ptr->rotation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setScale(QGraphicsItem * this_ptr, double scale) {
  this_ptr->setScale(scale);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_scale(QGraphicsItem const * this_ptr) {
  return this_ptr->scale();
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QGraphicsItem_transformations(QGraphicsItem const * this_ptr) {
  return new QList< QGraphicsTransform * >(this_ptr->transformations());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setTransformations(QGraphicsItem * this_ptr, QList< QGraphicsTransform * > const * transformations) {
  this_ptr->setTransformations(*transformations);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_transformOriginPoint(QGraphicsItem const * this_ptr) {
  return new QPointF(this_ptr->transformOriginPoint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setTransformOriginPoint(QGraphicsItem * this_ptr, QPointF const * origin) {
  this_ptr->setTransformOriginPoint(*origin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setTransformOriginPoint1(QGraphicsItem * this_ptr, double ax, double ay) {
  this_ptr->setTransformOriginPoint(ax, ay);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_advance(QGraphicsItem * this_ptr, int phase) {
  this_ptr->advance(phase);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_zValue(QGraphicsItem const * this_ptr) {
  return this_ptr->zValue();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setZValue(QGraphicsItem * this_ptr, double z) {
  this_ptr->setZValue(z);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_stackBefore(QGraphicsItem * this_ptr, QGraphicsItem const * sibling) {
  this_ptr->stackBefore(sibling);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_boundingRect(QGraphicsItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_childrenBoundingRect(QGraphicsItem const * this_ptr) {
  return new QRectF(this_ptr->childrenBoundingRect());
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_sceneBoundingRect(QGraphicsItem const * this_ptr) {
  return new QRectF(this_ptr->sceneBoundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_shape(QGraphicsItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isClipped(QGraphicsItem const * this_ptr) {
  return this_ptr->isClipped();
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_clipPath(QGraphicsItem const * this_ptr) {
  return new QPainterPath(this_ptr->clipPath());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_contains(QGraphicsItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_collidesWithItem(QGraphicsItem const * this_ptr, QGraphicsItem const * other, Qt::ItemSelectionMode mode) {
  return this_ptr->collidesWithItem(other, mode);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_collidesWithPath(QGraphicsItem const * this_ptr, QPainterPath const * path, Qt::ItemSelectionMode mode) {
  return this_ptr->collidesWithPath(*path, mode);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsItem_collidingItems(QGraphicsItem const * this_ptr, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->collidingItems(mode));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isObscured(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return this_ptr->isObscured(*rect);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isObscured1(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return this_ptr->isObscured(x, y, w, h);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isObscuredBy(QGraphicsItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_opaqueArea(QGraphicsItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT QRegion * ctr_qt_widgets_ffi_QGraphicsItem_boundingRegion(QGraphicsItem const * this_ptr, QTransform const * itemToDeviceTransform) {
  return new QRegion(this_ptr->boundingRegion(*itemToDeviceTransform));
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItem_boundingRegionGranularity(QGraphicsItem const * this_ptr) {
  return this_ptr->boundingRegionGranularity();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setBoundingRegionGranularity(QGraphicsItem * this_ptr, double granularity) {
  this_ptr->setBoundingRegionGranularity(granularity);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_paint(QGraphicsItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_update(QGraphicsItem * this_ptr, QRectF const * rect) {
  this_ptr->update(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_update1(QGraphicsItem * this_ptr, double x, double y, double width, double height) {
  this_ptr->update(x, y, width, height);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_scroll(QGraphicsItem * this_ptr, double dx, double dy, QRectF const * rect) {
  this_ptr->scroll(dx, dy, *rect);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapToItem(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QPointF const * point) {
  return new QPointF(this_ptr->mapToItem(item, *point));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapToParent(QGraphicsItem const * this_ptr, QPointF const * point) {
  return new QPointF(this_ptr->mapToParent(*point));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapToScene(QGraphicsItem const * this_ptr, QPointF const * point) {
  return new QPointF(this_ptr->mapToScene(*point));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToItem1(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QRectF const * rect) {
  return new QPolygonF(this_ptr->mapToItem(item, *rect));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToParent1(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QPolygonF(this_ptr->mapToParent(*rect));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToScene1(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QPolygonF(this_ptr->mapToScene(*rect));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectToItem(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QRectF const * rect) {
  return new QRectF(this_ptr->mapRectToItem(item, *rect));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectToParent(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QRectF(this_ptr->mapRectToParent(*rect));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectToScene(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QRectF(this_ptr->mapRectToScene(*rect));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToItem2(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QPolygonF const * polygon) {
  return new QPolygonF(this_ptr->mapToItem(item, *polygon));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToParent2(QGraphicsItem const * this_ptr, QPolygonF const * polygon) {
  return new QPolygonF(this_ptr->mapToParent(*polygon));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToScene2(QGraphicsItem const * this_ptr, QPolygonF const * polygon) {
  return new QPolygonF(this_ptr->mapToScene(*polygon));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_mapToItem3(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapToItem(item, *path));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_mapToParent3(QGraphicsItem const * this_ptr, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapToParent(*path));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_mapToScene3(QGraphicsItem const * this_ptr, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapToScene(*path));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromItem(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QPointF const * point) {
  return new QPointF(this_ptr->mapFromItem(item, *point));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromParent(QGraphicsItem const * this_ptr, QPointF const * point) {
  return new QPointF(this_ptr->mapFromParent(*point));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromScene(QGraphicsItem const * this_ptr, QPointF const * point) {
  return new QPointF(this_ptr->mapFromScene(*point));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromItem1(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QRectF const * rect) {
  return new QPolygonF(this_ptr->mapFromItem(item, *rect));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromParent1(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QPolygonF(this_ptr->mapFromParent(*rect));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromScene1(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QPolygonF(this_ptr->mapFromScene(*rect));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectFromItem(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QRectF const * rect) {
  return new QRectF(this_ptr->mapRectFromItem(item, *rect));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectFromParent(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QRectF(this_ptr->mapRectFromParent(*rect));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectFromScene(QGraphicsItem const * this_ptr, QRectF const * rect) {
  return new QRectF(this_ptr->mapRectFromScene(*rect));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromItem2(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QPolygonF const * polygon) {
  return new QPolygonF(this_ptr->mapFromItem(item, *polygon));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromParent2(QGraphicsItem const * this_ptr, QPolygonF const * polygon) {
  return new QPolygonF(this_ptr->mapFromParent(*polygon));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromScene2(QGraphicsItem const * this_ptr, QPolygonF const * polygon) {
  return new QPolygonF(this_ptr->mapFromScene(*polygon));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_mapFromItem3(QGraphicsItem const * this_ptr, QGraphicsItem const * item, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapFromItem(item, *path));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_mapFromParent3(QGraphicsItem const * this_ptr, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapFromParent(*path));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItem_mapFromScene3(QGraphicsItem const * this_ptr, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapFromScene(*path));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapToItem4(QGraphicsItem const * this_ptr, QGraphicsItem const * item, double x, double y) {
  return new QPointF(this_ptr->mapToItem(item, x, y));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapToParent4(QGraphicsItem const * this_ptr, double x, double y) {
  return new QPointF(this_ptr->mapToParent(x, y));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapToScene4(QGraphicsItem const * this_ptr, double x, double y) {
  return new QPointF(this_ptr->mapToScene(x, y));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToItem5(QGraphicsItem const * this_ptr, QGraphicsItem const * item, double x, double y, double w, double h) {
  return new QPolygonF(this_ptr->mapToItem(item, x, y, w, h));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToParent5(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QPolygonF(this_ptr->mapToParent(x, y, w, h));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapToScene5(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QPolygonF(this_ptr->mapToScene(x, y, w, h));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectToItem1(QGraphicsItem const * this_ptr, QGraphicsItem const * item, double x, double y, double w, double h) {
  return new QRectF(this_ptr->mapRectToItem(item, x, y, w, h));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectToParent1(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QRectF(this_ptr->mapRectToParent(x, y, w, h));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectToScene1(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QRectF(this_ptr->mapRectToScene(x, y, w, h));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromItem4(QGraphicsItem const * this_ptr, QGraphicsItem const * item, double x, double y) {
  return new QPointF(this_ptr->mapFromItem(item, x, y));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromParent4(QGraphicsItem const * this_ptr, double x, double y) {
  return new QPointF(this_ptr->mapFromParent(x, y));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromScene4(QGraphicsItem const * this_ptr, double x, double y) {
  return new QPointF(this_ptr->mapFromScene(x, y));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromItem5(QGraphicsItem const * this_ptr, QGraphicsItem const * item, double x, double y, double w, double h) {
  return new QPolygonF(this_ptr->mapFromItem(item, x, y, w, h));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromParent5(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QPolygonF(this_ptr->mapFromParent(x, y, w, h));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsItem_mapFromScene5(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QPolygonF(this_ptr->mapFromScene(x, y, w, h));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectFromItem1(QGraphicsItem const * this_ptr, QGraphicsItem const * item, double x, double y, double w, double h) {
  return new QRectF(this_ptr->mapRectFromItem(item, x, y, w, h));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectFromParent1(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QRectF(this_ptr->mapRectFromParent(x, y, w, h));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItem_mapRectFromScene1(QGraphicsItem const * this_ptr, double x, double y, double w, double h) {
  return new QRectF(this_ptr->mapRectFromScene(x, y, w, h));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isAncestorOf(QGraphicsItem const * this_ptr, QGraphicsItem const * child) {
  return this_ptr->isAncestorOf(child);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItem_commonAncestorItem(QGraphicsItem const * this_ptr, QGraphicsItem const * other) {
  return this_ptr->commonAncestorItem(other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isUnderMouse(QGraphicsItem const * this_ptr) {
  return this_ptr->isUnderMouse();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QGraphicsItem_data(QGraphicsItem const * this_ptr, int key) {
  return new QVariant(this_ptr->data(key));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setData(QGraphicsItem * this_ptr, int key, QVariant const * value) {
  this_ptr->setData(key, *value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsItem_inputMethodHints(QGraphicsItem const * this_ptr) {
  return int(this_ptr->inputMethodHints());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setInputMethodHints(QGraphicsItem * this_ptr, int hints) {
  this_ptr->setInputMethodHints(QFlags< Qt::InputMethodHint >(hints));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsItem_type(QGraphicsItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_installSceneEventFilter(QGraphicsItem * this_ptr, QGraphicsItem * filterItem) {
  this_ptr->installSceneEventFilter(filterItem);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_removeSceneEventFilter(QGraphicsItem * this_ptr, QGraphicsItem * filterItem) {
  this_ptr->removeSceneEventFilter(filterItem);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsObject_metaObject(QGraphicsObject const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsObject_qt_metacast(QGraphicsObject * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsObject_qt_metacall(QGraphicsObject * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsObject_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsObject::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsObject_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsObject::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsObject_dQGraphicsObject(QGraphicsObject * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsObject_grabGesture(QGraphicsObject * this_ptr, Qt::GestureType type, int flags) {
  this_ptr->grabGesture(type, QFlags< Qt::GestureFlag >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsObject_ungrabGesture(QGraphicsObject * this_ptr, Qt::GestureType type) {
  this_ptr->ungrabGesture(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractGraphicsShapeItem_dQAbstractGraphicsShapeItem(QAbstractGraphicsShapeItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPen * ctr_qt_widgets_ffi_QAbstractGraphicsShapeItem_pen(QAbstractGraphicsShapeItem const * this_ptr) {
  return new QPen(this_ptr->pen());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractGraphicsShapeItem_setPen(QAbstractGraphicsShapeItem * this_ptr, QPen const * pen) {
  this_ptr->setPen(*pen);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QAbstractGraphicsShapeItem_brush(QAbstractGraphicsShapeItem const * this_ptr) {
  return new QBrush(this_ptr->brush());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractGraphicsShapeItem_setBrush(QAbstractGraphicsShapeItem * this_ptr, QBrush const * brush) {
  this_ptr->setBrush(*brush);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAbstractGraphicsShapeItem_isObscuredBy(QAbstractGraphicsShapeItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QAbstractGraphicsShapeItem_opaqueArea(QAbstractGraphicsShapeItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_QGraphicsPathItem_QGraphicsPathItem(QGraphicsItem * parent) {
  return new QGraphicsPathItem(parent);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_QGraphicsPathItem_QGraphicsPathItem1(QPainterPath const * path, QGraphicsItem * parent) {
  return new QGraphicsPathItem(*path, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPathItem_dQGraphicsPathItem(QGraphicsPathItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsPathItem_path(QGraphicsPathItem const * this_ptr) {
  return new QPainterPath(this_ptr->path());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPathItem_setPath(QGraphicsPathItem * this_ptr, QPainterPath const * path) {
  this_ptr->setPath(*path);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsPathItem_boundingRect(QGraphicsPathItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsPathItem_shape(QGraphicsPathItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsPathItem_contains(QGraphicsPathItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPathItem_paint(QGraphicsPathItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsPathItem_isObscuredBy(QGraphicsPathItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsPathItem_opaqueArea(QGraphicsPathItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsPathItem_type(QGraphicsPathItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsRectItem_QGraphicsRectItem(QGraphicsItem * parent) {
  return new QGraphicsRectItem(parent);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsRectItem_QGraphicsRectItem1(QRectF const * rect, QGraphicsItem * parent) {
  return new QGraphicsRectItem(*rect, parent);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsRectItem_QGraphicsRectItem2(double x, double y, double w, double h, QGraphicsItem * parent) {
  return new QGraphicsRectItem(x, y, w, h, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRectItem_dQGraphicsRectItem(QGraphicsRectItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsRectItem_rect(QGraphicsRectItem const * this_ptr) {
  return new QRectF(this_ptr->rect());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRectItem_setRect(QGraphicsRectItem * this_ptr, QRectF const * rect) {
  this_ptr->setRect(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRectItem_setRect1(QGraphicsRectItem * this_ptr, double x, double y, double w, double h) {
  this_ptr->setRect(x, y, w, h);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsRectItem_boundingRect(QGraphicsRectItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsRectItem_shape(QGraphicsRectItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsRectItem_contains(QGraphicsRectItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRectItem_paint(QGraphicsRectItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsRectItem_isObscuredBy(QGraphicsRectItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsRectItem_opaqueArea(QGraphicsRectItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsRectItem_type(QGraphicsRectItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsEllipseItem_QGraphicsEllipseItem(QGraphicsItem * parent) {
  return new QGraphicsEllipseItem(parent);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsEllipseItem_QGraphicsEllipseItem1(QRectF const * rect, QGraphicsItem * parent) {
  return new QGraphicsEllipseItem(*rect, parent);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsEllipseItem_QGraphicsEllipseItem2(double x, double y, double w, double h, QGraphicsItem * parent) {
  return new QGraphicsEllipseItem(x, y, w, h, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEllipseItem_dQGraphicsEllipseItem(QGraphicsEllipseItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsEllipseItem_rect(QGraphicsEllipseItem const * this_ptr) {
  return new QRectF(this_ptr->rect());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEllipseItem_setRect(QGraphicsEllipseItem * this_ptr, QRectF const * rect) {
  this_ptr->setRect(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEllipseItem_setRect1(QGraphicsEllipseItem * this_ptr, double x, double y, double w, double h) {
  this_ptr->setRect(x, y, w, h);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsEllipseItem_startAngle(QGraphicsEllipseItem const * this_ptr) {
  return this_ptr->startAngle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEllipseItem_setStartAngle(QGraphicsEllipseItem * this_ptr, int angle) {
  this_ptr->setStartAngle(angle);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsEllipseItem_spanAngle(QGraphicsEllipseItem const * this_ptr) {
  return this_ptr->spanAngle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEllipseItem_setSpanAngle(QGraphicsEllipseItem * this_ptr, int angle) {
  this_ptr->setSpanAngle(angle);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsEllipseItem_boundingRect(QGraphicsEllipseItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsEllipseItem_shape(QGraphicsEllipseItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsEllipseItem_contains(QGraphicsEllipseItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEllipseItem_paint(QGraphicsEllipseItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsEllipseItem_isObscuredBy(QGraphicsEllipseItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsEllipseItem_opaqueArea(QGraphicsEllipseItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsEllipseItem_type(QGraphicsEllipseItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_QGraphicsPolygonItem_QGraphicsPolygonItem(QGraphicsItem * parent) {
  return new QGraphicsPolygonItem(parent);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_QGraphicsPolygonItem_QGraphicsPolygonItem1(QPolygonF const * polygon, QGraphicsItem * parent) {
  return new QGraphicsPolygonItem(*polygon, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPolygonItem_dQGraphicsPolygonItem(QGraphicsPolygonItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsPolygonItem_polygon(QGraphicsPolygonItem const * this_ptr) {
  return new QPolygonF(this_ptr->polygon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPolygonItem_setPolygon(QGraphicsPolygonItem * this_ptr, QPolygonF const * polygon) {
  this_ptr->setPolygon(*polygon);
}


RITUAL_EXPORT Qt::FillRule ctr_qt_widgets_ffi_QGraphicsPolygonItem_fillRule(QGraphicsPolygonItem const * this_ptr) {
  return this_ptr->fillRule();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPolygonItem_setFillRule(QGraphicsPolygonItem * this_ptr, Qt::FillRule rule) {
  this_ptr->setFillRule(rule);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsPolygonItem_boundingRect(QGraphicsPolygonItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsPolygonItem_shape(QGraphicsPolygonItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsPolygonItem_contains(QGraphicsPolygonItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPolygonItem_paint(QGraphicsPolygonItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsPolygonItem_isObscuredBy(QGraphicsPolygonItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsPolygonItem_opaqueArea(QGraphicsPolygonItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsPolygonItem_type(QGraphicsPolygonItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsLineItem_QGraphicsLineItem(QGraphicsItem * parent) {
  return new QGraphicsLineItem(parent);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsLineItem_QGraphicsLineItem1(QLineF const * line, QGraphicsItem * parent) {
  return new QGraphicsLineItem(*line, parent);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsLineItem_QGraphicsLineItem2(double x1, double y1, double x2, double y2, QGraphicsItem * parent) {
  return new QGraphicsLineItem(x1, y1, x2, y2, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLineItem_dQGraphicsLineItem(QGraphicsLineItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPen * ctr_qt_widgets_ffi_QGraphicsLineItem_pen(QGraphicsLineItem const * this_ptr) {
  return new QPen(this_ptr->pen());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLineItem_setPen(QGraphicsLineItem * this_ptr, QPen const * pen) {
  this_ptr->setPen(*pen);
}


RITUAL_EXPORT QLineF * ctr_qt_widgets_ffi_QGraphicsLineItem_line(QGraphicsLineItem const * this_ptr) {
  return new QLineF(this_ptr->line());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLineItem_setLine(QGraphicsLineItem * this_ptr, QLineF const * line) {
  this_ptr->setLine(*line);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLineItem_setLine1(QGraphicsLineItem * this_ptr, double x1, double y1, double x2, double y2) {
  this_ptr->setLine(x1, y1, x2, y2);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsLineItem_boundingRect(QGraphicsLineItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsLineItem_shape(QGraphicsLineItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsLineItem_contains(QGraphicsLineItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLineItem_paint(QGraphicsLineItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsLineItem_isObscuredBy(QGraphicsLineItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsLineItem_opaqueArea(QGraphicsLineItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsLineItem_type(QGraphicsLineItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsPixmapItem * ctr_qt_widgets_ffi_QGraphicsPixmapItem_QGraphicsPixmapItem(QGraphicsItem * parent) {
  return new QGraphicsPixmapItem(parent);
}


RITUAL_EXPORT QGraphicsPixmapItem * ctr_qt_widgets_ffi_QGraphicsPixmapItem_QGraphicsPixmapItem1(QPixmap const * pixmap, QGraphicsItem * parent) {
  return new QGraphicsPixmapItem(*pixmap, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPixmapItem_dQGraphicsPixmapItem(QGraphicsPixmapItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QGraphicsPixmapItem_pixmap(QGraphicsPixmapItem const * this_ptr) {
  return new QPixmap(this_ptr->pixmap());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPixmapItem_setPixmap(QGraphicsPixmapItem * this_ptr, QPixmap const * pixmap) {
  this_ptr->setPixmap(*pixmap);
}


RITUAL_EXPORT Qt::TransformationMode ctr_qt_widgets_ffi_QGraphicsPixmapItem_transformationMode(QGraphicsPixmapItem const * this_ptr) {
  return this_ptr->transformationMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPixmapItem_setTransformationMode(QGraphicsPixmapItem * this_ptr, Qt::TransformationMode mode) {
  this_ptr->setTransformationMode(mode);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsPixmapItem_offset(QGraphicsPixmapItem const * this_ptr) {
  return new QPointF(this_ptr->offset());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPixmapItem_setOffset(QGraphicsPixmapItem * this_ptr, QPointF const * offset) {
  this_ptr->setOffset(*offset);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPixmapItem_setOffset1(QGraphicsPixmapItem * this_ptr, double x, double y) {
  this_ptr->setOffset(x, y);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsPixmapItem_boundingRect(QGraphicsPixmapItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsPixmapItem_shape(QGraphicsPixmapItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsPixmapItem_contains(QGraphicsPixmapItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPixmapItem_paint(QGraphicsPixmapItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsPixmapItem_isObscuredBy(QGraphicsPixmapItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsPixmapItem_opaqueArea(QGraphicsPixmapItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsPixmapItem_type(QGraphicsPixmapItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsPixmapItem::ShapeMode ctr_qt_widgets_ffi_QGraphicsPixmapItem_shapeMode(QGraphicsPixmapItem const * this_ptr) {
  return this_ptr->shapeMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPixmapItem_setShapeMode(QGraphicsPixmapItem * this_ptr, QGraphicsPixmapItem::ShapeMode mode) {
  this_ptr->setShapeMode(mode);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsTextItem_metaObject(QGraphicsTextItem const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsTextItem_qt_metacast(QGraphicsTextItem * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsTextItem_qt_metacall(QGraphicsTextItem * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsTextItem_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsTextItem::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsTextItem_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsTextItem::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_QGraphicsTextItem_QGraphicsTextItem(QGraphicsItem * parent) {
  return new QGraphicsTextItem(parent);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_QGraphicsTextItem_QGraphicsTextItem1(QString const * text, QGraphicsItem * parent) {
  return new QGraphicsTextItem(*text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_dQGraphicsTextItem(QGraphicsTextItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsTextItem_toHtml(QGraphicsTextItem const * this_ptr) {
  return new QString(this_ptr->toHtml());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setHtml(QGraphicsTextItem * this_ptr, QString const * html) {
  this_ptr->setHtml(*html);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsTextItem_toPlainText(QGraphicsTextItem const * this_ptr) {
  return new QString(this_ptr->toPlainText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setPlainText(QGraphicsTextItem * this_ptr, QString const * text) {
  this_ptr->setPlainText(*text);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QGraphicsTextItem_font(QGraphicsTextItem const * this_ptr) {
  return new QFont(this_ptr->font());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setFont(QGraphicsTextItem * this_ptr, QFont const * font) {
  this_ptr->setFont(*font);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setDefaultTextColor(QGraphicsTextItem * this_ptr, QColor const * c) {
  this_ptr->setDefaultTextColor(*c);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QGraphicsTextItem_defaultTextColor(QGraphicsTextItem const * this_ptr) {
  return new QColor(this_ptr->defaultTextColor());
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsTextItem_boundingRect(QGraphicsTextItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsTextItem_shape(QGraphicsTextItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsTextItem_contains(QGraphicsTextItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_paint(QGraphicsTextItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsTextItem_isObscuredBy(QGraphicsTextItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsTextItem_opaqueArea(QGraphicsTextItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsTextItem_type(QGraphicsTextItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setTextWidth(QGraphicsTextItem * this_ptr, double width) {
  this_ptr->setTextWidth(width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsTextItem_textWidth(QGraphicsTextItem const * this_ptr) {
  return this_ptr->textWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_adjustSize(QGraphicsTextItem * this_ptr) {
  this_ptr->adjustSize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setDocument(QGraphicsTextItem * this_ptr, QTextDocument * document) {
  this_ptr->setDocument(document);
}


RITUAL_EXPORT QTextDocument * ctr_qt_widgets_ffi_QGraphicsTextItem_document(QGraphicsTextItem const * this_ptr) {
  return this_ptr->document();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setTextInteractionFlags(QGraphicsTextItem * this_ptr, int flags) {
  this_ptr->setTextInteractionFlags(QFlags< Qt::TextInteractionFlag >(flags));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsTextItem_textInteractionFlags(QGraphicsTextItem const * this_ptr) {
  return int(this_ptr->textInteractionFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setTabChangesFocus(QGraphicsTextItem * this_ptr, bool b) {
  this_ptr->setTabChangesFocus(b);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsTextItem_tabChangesFocus(QGraphicsTextItem const * this_ptr) {
  return this_ptr->tabChangesFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setOpenExternalLinks(QGraphicsTextItem * this_ptr, bool open) {
  this_ptr->setOpenExternalLinks(open);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsTextItem_openExternalLinks(QGraphicsTextItem const * this_ptr) {
  return this_ptr->openExternalLinks();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTextItem_setTextCursor(QGraphicsTextItem * this_ptr, QTextCursor const * cursor) {
  this_ptr->setTextCursor(*cursor);
}


RITUAL_EXPORT QTextCursor * ctr_qt_widgets_ffi_QGraphicsTextItem_textCursor(QGraphicsTextItem const * this_ptr) {
  return new QTextCursor(this_ptr->textCursor());
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_QGraphicsSimpleTextItem(QGraphicsItem * parent) {
  return new QGraphicsSimpleTextItem(parent);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_QGraphicsSimpleTextItem1(QString const * text, QGraphicsItem * parent) {
  return new QGraphicsSimpleTextItem(*text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_dQGraphicsSimpleTextItem(QGraphicsSimpleTextItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_setText(QGraphicsSimpleTextItem * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_text(QGraphicsSimpleTextItem const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_setFont(QGraphicsSimpleTextItem * this_ptr, QFont const * font) {
  this_ptr->setFont(*font);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_font(QGraphicsSimpleTextItem const * this_ptr) {
  return new QFont(this_ptr->font());
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_boundingRect(QGraphicsSimpleTextItem const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_shape(QGraphicsSimpleTextItem const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_contains(QGraphicsSimpleTextItem const * this_ptr, QPointF const * point) {
  return this_ptr->contains(*point);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_paint(QGraphicsSimpleTextItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_isObscuredBy(QGraphicsSimpleTextItem const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_opaqueArea(QGraphicsSimpleTextItem const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_type(QGraphicsSimpleTextItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsItemGroup * ctr_qt_widgets_ffi_QGraphicsItemGroup_QGraphicsItemGroup(QGraphicsItem * parent) {
  return new QGraphicsItemGroup(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemGroup_dQGraphicsItemGroup(QGraphicsItemGroup * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemGroup_addToGroup(QGraphicsItemGroup * this_ptr, QGraphicsItem * item) {
  this_ptr->addToGroup(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemGroup_removeFromGroup(QGraphicsItemGroup * this_ptr, QGraphicsItem * item) {
  this_ptr->removeFromGroup(item);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsItemGroup_boundingRect(QGraphicsItemGroup const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemGroup_paint(QGraphicsItemGroup * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItemGroup_isObscuredBy(QGraphicsItemGroup const * this_ptr, QGraphicsItem const * item) {
  return this_ptr->isObscuredBy(item);
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsItemGroup_opaqueArea(QGraphicsItemGroup const * this_ptr) {
  return new QPainterPath(this_ptr->opaqueArea());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsItemGroup_type(QGraphicsItemGroup const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__9(QDebug const * debug, QGraphicsItem * item) {
  return new QDebug(operator<<(*debug, item));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__10(QDebug const * debug, QGraphicsObject * item) {
  return new QDebug(operator<<(*debug, item));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__11(QDebug const * debug, QGraphicsItem::GraphicsItemChange change) {
  return new QDebug(operator<<(*debug, change));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__12(QDebug const * debug, QGraphicsItem::GraphicsItemFlag flag) {
  return new QDebug(operator<<(*debug, flag));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_dQGraphicsLayoutItem(QGraphicsLayoutItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setSizePolicy(QGraphicsLayoutItem * this_ptr, QSizePolicy const * policy) {
  this_ptr->setSizePolicy(*policy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setSizePolicy1(QGraphicsLayoutItem * this_ptr, QSizePolicy::Policy hPolicy, QSizePolicy::Policy vPolicy, QSizePolicy::ControlType controlType) {
  this_ptr->setSizePolicy(hPolicy, vPolicy, controlType);
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QGraphicsLayoutItem_sizePolicy(QGraphicsLayoutItem const * this_ptr) {
  return new QSizePolicy(this_ptr->sizePolicy());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMinimumSize(QGraphicsLayoutItem * this_ptr, QSizeF const * size) {
  this_ptr->setMinimumSize(*size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMinimumSize1(QGraphicsLayoutItem * this_ptr, double w, double h) {
  this_ptr->setMinimumSize(w, h);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsLayoutItem_minimumSize(QGraphicsLayoutItem const * this_ptr) {
  return new QSizeF(this_ptr->minimumSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMinimumWidth(QGraphicsLayoutItem * this_ptr, double width) {
  this_ptr->setMinimumWidth(width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLayoutItem_minimumWidth(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->minimumWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMinimumHeight(QGraphicsLayoutItem * this_ptr, double height) {
  this_ptr->setMinimumHeight(height);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLayoutItem_minimumHeight(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->minimumHeight();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setPreferredSize(QGraphicsLayoutItem * this_ptr, QSizeF const * size) {
  this_ptr->setPreferredSize(*size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setPreferredSize1(QGraphicsLayoutItem * this_ptr, double w, double h) {
  this_ptr->setPreferredSize(w, h);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsLayoutItem_preferredSize(QGraphicsLayoutItem const * this_ptr) {
  return new QSizeF(this_ptr->preferredSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setPreferredWidth(QGraphicsLayoutItem * this_ptr, double width) {
  this_ptr->setPreferredWidth(width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLayoutItem_preferredWidth(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->preferredWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setPreferredHeight(QGraphicsLayoutItem * this_ptr, double height) {
  this_ptr->setPreferredHeight(height);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLayoutItem_preferredHeight(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->preferredHeight();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMaximumSize(QGraphicsLayoutItem * this_ptr, QSizeF const * size) {
  this_ptr->setMaximumSize(*size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMaximumSize1(QGraphicsLayoutItem * this_ptr, double w, double h) {
  this_ptr->setMaximumSize(w, h);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsLayoutItem_maximumSize(QGraphicsLayoutItem const * this_ptr) {
  return new QSizeF(this_ptr->maximumSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMaximumWidth(QGraphicsLayoutItem * this_ptr, double width) {
  this_ptr->setMaximumWidth(width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLayoutItem_maximumWidth(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->maximumWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setMaximumHeight(QGraphicsLayoutItem * this_ptr, double height) {
  this_ptr->setMaximumHeight(height);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLayoutItem_maximumHeight(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->maximumHeight();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setGeometry(QGraphicsLayoutItem * this_ptr, QRectF const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsLayoutItem_geometry(QGraphicsLayoutItem const * this_ptr) {
  return new QRectF(this_ptr->geometry());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_getContentsMargins(QGraphicsLayoutItem const * this_ptr, double * left, double * top, double * right, double * bottom) {
  this_ptr->getContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsLayoutItem_contentsRect(QGraphicsLayoutItem const * this_ptr) {
  return new QRectF(this_ptr->contentsRect());
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsLayoutItem_effectiveSizeHint(QGraphicsLayoutItem const * this_ptr, Qt::SizeHint which, QSizeF const * constraint) {
  return new QSizeF(this_ptr->effectiveSizeHint(which, *constraint));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_updateGeometry(QGraphicsLayoutItem * this_ptr) {
  this_ptr->updateGeometry();
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_QGraphicsLayoutItem_parentLayoutItem(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->parentLayoutItem();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setParentLayoutItem(QGraphicsLayoutItem * this_ptr, QGraphicsLayoutItem * parent) {
  this_ptr->setParentLayoutItem(parent);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsLayoutItem_isLayout(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->isLayout();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsLayoutItem_graphicsItem(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->graphicsItem();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsLayoutItem_ownedByLayout(QGraphicsLayoutItem const * this_ptr) {
  return this_ptr->ownedByLayout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_dQGraphicsLayout(QGraphicsLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_setContentsMargins(QGraphicsLayout * this_ptr, double left, double top, double right, double bottom) {
  this_ptr->setContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_getContentsMargins(QGraphicsLayout const * this_ptr, double * left, double * top, double * right, double * bottom) {
  this_ptr->getContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_activate(QGraphicsLayout * this_ptr) {
  this_ptr->activate();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsLayout_isActivated(QGraphicsLayout const * this_ptr) {
  return this_ptr->isActivated();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_invalidate(QGraphicsLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_updateGeometry(QGraphicsLayout * this_ptr) {
  this_ptr->updateGeometry();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_widgetEvent(QGraphicsLayout * this_ptr, QEvent * e) {
  this_ptr->widgetEvent(e);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsLayout_count(QGraphicsLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_QGraphicsLayout_itemAt(QGraphicsLayout const * this_ptr, int i) {
  return this_ptr->itemAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_removeAt(QGraphicsLayout * this_ptr, int index) {
  this_ptr->removeAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayout_setInstantInvalidatePropagation(bool enable) {
  QGraphicsLayout::setInstantInvalidatePropagation(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsLayout_instantInvalidatePropagation() {
  return QGraphicsLayout::instantInvalidatePropagation();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsAnchor_metaObject(QGraphicsAnchor const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsAnchor_qt_metacast(QGraphicsAnchor * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsAnchor_qt_metacall(QGraphicsAnchor * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsAnchor_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsAnchor::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsAnchor_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsAnchor::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchor_setSpacing(QGraphicsAnchor * this_ptr, double spacing) {
  this_ptr->setSpacing(spacing);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchor_unsetSpacing(QGraphicsAnchor * this_ptr) {
  this_ptr->unsetSpacing();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsAnchor_spacing(QGraphicsAnchor const * this_ptr) {
  return this_ptr->spacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchor_setSizePolicy(QGraphicsAnchor * this_ptr, QSizePolicy::Policy policy) {
  this_ptr->setSizePolicy(policy);
}


RITUAL_EXPORT QSizePolicy::Policy ctr_qt_widgets_ffi_QGraphicsAnchor_sizePolicy(QGraphicsAnchor const * this_ptr) {
  return this_ptr->sizePolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchor_dQGraphicsAnchor(QGraphicsAnchor * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QGraphicsAnchorLayout * ctr_qt_widgets_ffi_QGraphicsAnchorLayout_QGraphicsAnchorLayout(QGraphicsLayoutItem * parent) {
  return new QGraphicsAnchorLayout(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_dQGraphicsAnchorLayout(QGraphicsAnchorLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QGraphicsAnchor * ctr_qt_widgets_ffi_QGraphicsAnchorLayout_addAnchor(QGraphicsAnchorLayout * this_ptr, QGraphicsLayoutItem * firstItem, Qt::AnchorPoint firstEdge, QGraphicsLayoutItem * secondItem, Qt::AnchorPoint secondEdge) {
  return this_ptr->addAnchor(firstItem, firstEdge, secondItem, secondEdge);
}


RITUAL_EXPORT QGraphicsAnchor * ctr_qt_widgets_ffi_QGraphicsAnchorLayout_anchor(QGraphicsAnchorLayout * this_ptr, QGraphicsLayoutItem * firstItem, Qt::AnchorPoint firstEdge, QGraphicsLayoutItem * secondItem, Qt::AnchorPoint secondEdge) {
  return this_ptr->anchor(firstItem, firstEdge, secondItem, secondEdge);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_addCornerAnchors(QGraphicsAnchorLayout * this_ptr, QGraphicsLayoutItem * firstItem, Qt::Corner firstCorner, QGraphicsLayoutItem * secondItem, Qt::Corner secondCorner) {
  this_ptr->addCornerAnchors(firstItem, firstCorner, secondItem, secondCorner);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_addAnchors(QGraphicsAnchorLayout * this_ptr, QGraphicsLayoutItem * firstItem, QGraphicsLayoutItem * secondItem, int orientations) {
  this_ptr->addAnchors(firstItem, secondItem, QFlags< Qt::Orientation >(orientations));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_setHorizontalSpacing(QGraphicsAnchorLayout * this_ptr, double spacing) {
  this_ptr->setHorizontalSpacing(spacing);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_setVerticalSpacing(QGraphicsAnchorLayout * this_ptr, double spacing) {
  this_ptr->setVerticalSpacing(spacing);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_setSpacing(QGraphicsAnchorLayout * this_ptr, double spacing) {
  this_ptr->setSpacing(spacing);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsAnchorLayout_horizontalSpacing(QGraphicsAnchorLayout const * this_ptr) {
  return this_ptr->horizontalSpacing();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsAnchorLayout_verticalSpacing(QGraphicsAnchorLayout const * this_ptr) {
  return this_ptr->verticalSpacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_removeAt(QGraphicsAnchorLayout * this_ptr, int index) {
  this_ptr->removeAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_setGeometry(QGraphicsAnchorLayout * this_ptr, QRectF const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsAnchorLayout_count(QGraphicsAnchorLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_QGraphicsAnchorLayout_itemAt(QGraphicsAnchorLayout const * this_ptr, int index) {
  return this_ptr->itemAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_invalidate(QGraphicsAnchorLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsEffect_metaObject(QGraphicsEffect const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsEffect_qt_metacast(QGraphicsEffect * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsEffect_qt_metacall(QGraphicsEffect * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsEffect_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsEffect::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsEffect_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsEffect::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEffect_dQGraphicsEffect(QGraphicsEffect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsEffect_boundingRectFor(QGraphicsEffect const * this_ptr, QRectF const * sourceRect) {
  return new QRectF(this_ptr->boundingRectFor(*sourceRect));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsEffect_boundingRect(QGraphicsEffect const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsEffect_isEnabled(QGraphicsEffect const * this_ptr) {
  return this_ptr->isEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEffect_setEnabled(QGraphicsEffect * this_ptr, bool enable) {
  this_ptr->setEnabled(enable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEffect_update(QGraphicsEffect * this_ptr) {
  this_ptr->update();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_metaObject(QGraphicsColorizeEffect const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_qt_metacast(QGraphicsColorizeEffect * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsColorizeEffect_qt_metacall(QGraphicsColorizeEffect * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsColorizeEffect::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsColorizeEffect::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsColorizeEffect * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_QGraphicsColorizeEffect(QObject * parent) {
  return new QGraphicsColorizeEffect(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsColorizeEffect_dQGraphicsColorizeEffect(QGraphicsColorizeEffect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_color(QGraphicsColorizeEffect const * this_ptr) {
  return new QColor(this_ptr->color());
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsColorizeEffect_strength(QGraphicsColorizeEffect const * this_ptr) {
  return this_ptr->strength();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsColorizeEffect_setColor(QGraphicsColorizeEffect * this_ptr, QColor const * c) {
  this_ptr->setColor(*c);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsColorizeEffect_setStrength(QGraphicsColorizeEffect * this_ptr, double strength) {
  this_ptr->setStrength(strength);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsBlurEffect_metaObject(QGraphicsBlurEffect const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsBlurEffect_qt_metacast(QGraphicsBlurEffect * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsBlurEffect_qt_metacall(QGraphicsBlurEffect * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsBlurEffect_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsBlurEffect::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsBlurEffect_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsBlurEffect::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsBlurEffect * ctr_qt_widgets_ffi_QGraphicsBlurEffect_QGraphicsBlurEffect(QObject * parent) {
  return new QGraphicsBlurEffect(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsBlurEffect_dQGraphicsBlurEffect(QGraphicsBlurEffect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsBlurEffect_boundingRectFor(QGraphicsBlurEffect const * this_ptr, QRectF const * rect) {
  return new QRectF(this_ptr->boundingRectFor(*rect));
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsBlurEffect_blurRadius(QGraphicsBlurEffect const * this_ptr) {
  return this_ptr->blurRadius();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsBlurEffect_blurHints(QGraphicsBlurEffect const * this_ptr) {
  return int(this_ptr->blurHints());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsBlurEffect_setBlurRadius(QGraphicsBlurEffect * this_ptr, double blurRadius) {
  this_ptr->setBlurRadius(blurRadius);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsBlurEffect_setBlurHints(QGraphicsBlurEffect * this_ptr, int hints) {
  this_ptr->setBlurHints(QFlags< QGraphicsBlurEffect::BlurHint >(hints));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_metaObject(QGraphicsDropShadowEffect const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_qt_metacast(QGraphicsDropShadowEffect * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_qt_metacall(QGraphicsDropShadowEffect * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsDropShadowEffect::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsDropShadowEffect::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsDropShadowEffect * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_QGraphicsDropShadowEffect(QObject * parent) {
  return new QGraphicsDropShadowEffect(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_dQGraphicsDropShadowEffect(QGraphicsDropShadowEffect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_boundingRectFor(QGraphicsDropShadowEffect const * this_ptr, QRectF const * rect) {
  return new QRectF(this_ptr->boundingRectFor(*rect));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_offset(QGraphicsDropShadowEffect const * this_ptr) {
  return new QPointF(this_ptr->offset());
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_xOffset(QGraphicsDropShadowEffect const * this_ptr) {
  return this_ptr->xOffset();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_yOffset(QGraphicsDropShadowEffect const * this_ptr) {
  return this_ptr->yOffset();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_blurRadius(QGraphicsDropShadowEffect const * this_ptr) {
  return this_ptr->blurRadius();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_color(QGraphicsDropShadowEffect const * this_ptr) {
  return new QColor(this_ptr->color());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_setOffset(QGraphicsDropShadowEffect * this_ptr, QPointF const * ofs) {
  this_ptr->setOffset(*ofs);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_setOffset1(QGraphicsDropShadowEffect * this_ptr, double dx, double dy) {
  this_ptr->setOffset(dx, dy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_setOffset2(QGraphicsDropShadowEffect * this_ptr, double d) {
  this_ptr->setOffset(d);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_setXOffset(QGraphicsDropShadowEffect * this_ptr, double dx) {
  this_ptr->setXOffset(dx);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_setYOffset(QGraphicsDropShadowEffect * this_ptr, double dy) {
  this_ptr->setYOffset(dy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_setBlurRadius(QGraphicsDropShadowEffect * this_ptr, double blurRadius) {
  this_ptr->setBlurRadius(blurRadius);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_setColor(QGraphicsDropShadowEffect * this_ptr, QColor const * color) {
  this_ptr->setColor(*color);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_metaObject(QGraphicsOpacityEffect const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_qt_metacast(QGraphicsOpacityEffect * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsOpacityEffect_qt_metacall(QGraphicsOpacityEffect * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsOpacityEffect::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsOpacityEffect::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsOpacityEffect * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_QGraphicsOpacityEffect(QObject * parent) {
  return new QGraphicsOpacityEffect(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsOpacityEffect_dQGraphicsOpacityEffect(QGraphicsOpacityEffect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsOpacityEffect_opacity(QGraphicsOpacityEffect const * this_ptr) {
  return this_ptr->opacity();
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_opacityMask(QGraphicsOpacityEffect const * this_ptr) {
  return new QBrush(this_ptr->opacityMask());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsOpacityEffect_setOpacity(QGraphicsOpacityEffect * this_ptr, double opacity) {
  this_ptr->setOpacity(opacity);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsOpacityEffect_setOpacityMask(QGraphicsOpacityEffect * this_ptr, QBrush const * mask) {
  this_ptr->setOpacityMask(*mask);
}


RITUAL_EXPORT QGraphicsGridLayout * ctr_qt_widgets_ffi_QGraphicsGridLayout_QGraphicsGridLayout(QGraphicsLayoutItem * parent) {
  return new QGraphicsGridLayout(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_dQGraphicsGridLayout(QGraphicsGridLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_addItem(QGraphicsGridLayout * this_ptr, QGraphicsLayoutItem * item, int row, int column, int rowSpan, int columnSpan, int alignment) {
  this_ptr->addItem(item, row, column, rowSpan, columnSpan, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_addItem1(QGraphicsGridLayout * this_ptr, QGraphicsLayoutItem * item, int row, int column, int alignment) {
  this_ptr->addItem(item, row, column, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setHorizontalSpacing(QGraphicsGridLayout * this_ptr, double spacing) {
  this_ptr->setHorizontalSpacing(spacing);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_horizontalSpacing(QGraphicsGridLayout const * this_ptr) {
  return this_ptr->horizontalSpacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setVerticalSpacing(QGraphicsGridLayout * this_ptr, double spacing) {
  this_ptr->setVerticalSpacing(spacing);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_verticalSpacing(QGraphicsGridLayout const * this_ptr) {
  return this_ptr->verticalSpacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setSpacing(QGraphicsGridLayout * this_ptr, double spacing) {
  this_ptr->setSpacing(spacing);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setRowSpacing(QGraphicsGridLayout * this_ptr, int row, double spacing) {
  this_ptr->setRowSpacing(row, spacing);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_rowSpacing(QGraphicsGridLayout const * this_ptr, int row) {
  return this_ptr->rowSpacing(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setColumnSpacing(QGraphicsGridLayout * this_ptr, int column, double spacing) {
  this_ptr->setColumnSpacing(column, spacing);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_columnSpacing(QGraphicsGridLayout const * this_ptr, int column) {
  return this_ptr->columnSpacing(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setRowStretchFactor(QGraphicsGridLayout * this_ptr, int row, int stretch) {
  this_ptr->setRowStretchFactor(row, stretch);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_rowStretchFactor(QGraphicsGridLayout const * this_ptr, int row) {
  return this_ptr->rowStretchFactor(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setColumnStretchFactor(QGraphicsGridLayout * this_ptr, int column, int stretch) {
  this_ptr->setColumnStretchFactor(column, stretch);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_columnStretchFactor(QGraphicsGridLayout const * this_ptr, int column) {
  return this_ptr->columnStretchFactor(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setRowMinimumHeight(QGraphicsGridLayout * this_ptr, int row, double height) {
  this_ptr->setRowMinimumHeight(row, height);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_rowMinimumHeight(QGraphicsGridLayout const * this_ptr, int row) {
  return this_ptr->rowMinimumHeight(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setRowPreferredHeight(QGraphicsGridLayout * this_ptr, int row, double height) {
  this_ptr->setRowPreferredHeight(row, height);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_rowPreferredHeight(QGraphicsGridLayout const * this_ptr, int row) {
  return this_ptr->rowPreferredHeight(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setRowMaximumHeight(QGraphicsGridLayout * this_ptr, int row, double height) {
  this_ptr->setRowMaximumHeight(row, height);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_rowMaximumHeight(QGraphicsGridLayout const * this_ptr, int row) {
  return this_ptr->rowMaximumHeight(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setRowFixedHeight(QGraphicsGridLayout * this_ptr, int row, double height) {
  this_ptr->setRowFixedHeight(row, height);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setColumnMinimumWidth(QGraphicsGridLayout * this_ptr, int column, double width) {
  this_ptr->setColumnMinimumWidth(column, width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_columnMinimumWidth(QGraphicsGridLayout const * this_ptr, int column) {
  return this_ptr->columnMinimumWidth(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setColumnPreferredWidth(QGraphicsGridLayout * this_ptr, int column, double width) {
  this_ptr->setColumnPreferredWidth(column, width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_columnPreferredWidth(QGraphicsGridLayout const * this_ptr, int column) {
  return this_ptr->columnPreferredWidth(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setColumnMaximumWidth(QGraphicsGridLayout * this_ptr, int column, double width) {
  this_ptr->setColumnMaximumWidth(column, width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsGridLayout_columnMaximumWidth(QGraphicsGridLayout const * this_ptr, int column) {
  return this_ptr->columnMaximumWidth(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setColumnFixedWidth(QGraphicsGridLayout * this_ptr, int column, double width) {
  this_ptr->setColumnFixedWidth(column, width);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setRowAlignment(QGraphicsGridLayout * this_ptr, int row, int alignment) {
  this_ptr->setRowAlignment(row, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_rowAlignment(QGraphicsGridLayout const * this_ptr, int row) {
  return int(this_ptr->rowAlignment(row));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setColumnAlignment(QGraphicsGridLayout * this_ptr, int column, int alignment) {
  this_ptr->setColumnAlignment(column, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_columnAlignment(QGraphicsGridLayout const * this_ptr, int column) {
  return int(this_ptr->columnAlignment(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setAlignment(QGraphicsGridLayout * this_ptr, QGraphicsLayoutItem * item, int alignment) {
  this_ptr->setAlignment(item, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_alignment(QGraphicsGridLayout const * this_ptr, QGraphicsLayoutItem * item) {
  return int(this_ptr->alignment(item));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_rowCount(QGraphicsGridLayout const * this_ptr) {
  return this_ptr->rowCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_columnCount(QGraphicsGridLayout const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_QGraphicsGridLayout_itemAt(QGraphicsGridLayout const * this_ptr, int row, int column) {
  return this_ptr->itemAt(row, column);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsGridLayout_count(QGraphicsGridLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_QGraphicsGridLayout_itemAt1(QGraphicsGridLayout const * this_ptr, int index) {
  return this_ptr->itemAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_removeAt(QGraphicsGridLayout * this_ptr, int index) {
  this_ptr->removeAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_removeItem(QGraphicsGridLayout * this_ptr, QGraphicsLayoutItem * item) {
  this_ptr->removeItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_invalidate(QGraphicsGridLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_setGeometry(QGraphicsGridLayout * this_ptr, QRectF const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsGridLayout_sizeHint(QGraphicsGridLayout const * this_ptr, Qt::SizeHint which, QSizeF const * constraint) {
  return new QSizeF(this_ptr->sizeHint(which, *constraint));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsItemAnimation_metaObject(QGraphicsItemAnimation const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsItemAnimation_qt_metacast(QGraphicsItemAnimation * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsItemAnimation_qt_metacall(QGraphicsItemAnimation * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsItemAnimation_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsItemAnimation::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsItemAnimation_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsItemAnimation::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsItemAnimation * ctr_qt_widgets_ffi_QGraphicsItemAnimation_QGraphicsItemAnimation(QObject * parent) {
  return new QGraphicsItemAnimation(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_dQGraphicsItemAnimation(QGraphicsItemAnimation * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsItemAnimation_item(QGraphicsItemAnimation const * this_ptr) {
  return this_ptr->item();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setItem(QGraphicsItemAnimation * this_ptr, QGraphicsItem * item) {
  this_ptr->setItem(item);
}


RITUAL_EXPORT QTimeLine * ctr_qt_widgets_ffi_QGraphicsItemAnimation_timeLine(QGraphicsItemAnimation const * this_ptr) {
  return this_ptr->timeLine();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setTimeLine(QGraphicsItemAnimation * this_ptr, QTimeLine * timeLine) {
  this_ptr->setTimeLine(timeLine);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsItemAnimation_posAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return new QPointF(this_ptr->posAt(step));
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QGraphicsItemAnimation_posList(QGraphicsItemAnimation const * this_ptr) {
  return new QList< QPair< double, QPointF > >(this_ptr->posList());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setPosAt(QGraphicsItemAnimation * this_ptr, double step, QPointF const * pos) {
  this_ptr->setPosAt(step, *pos);
}


RITUAL_EXPORT QMatrix * ctr_qt_widgets_ffi_QGraphicsItemAnimation_matrixAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return new QMatrix(this_ptr->matrixAt(step));
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsItemAnimation_transformAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return new QTransform(this_ptr->transformAt(step));
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItemAnimation_rotationAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return this_ptr->rotationAt(step);
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QGraphicsItemAnimation_rotationList(QGraphicsItemAnimation const * this_ptr) {
  return new QList< QPair< double, double > >(this_ptr->rotationList());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setRotationAt(QGraphicsItemAnimation * this_ptr, double step, double angle) {
  this_ptr->setRotationAt(step, angle);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItemAnimation_xTranslationAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return this_ptr->xTranslationAt(step);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItemAnimation_yTranslationAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return this_ptr->yTranslationAt(step);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QGraphicsItemAnimation_translationList(QGraphicsItemAnimation const * this_ptr) {
  return new QList< QPair< double, QPointF > >(this_ptr->translationList());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setTranslationAt(QGraphicsItemAnimation * this_ptr, double step, double dx, double dy) {
  this_ptr->setTranslationAt(step, dx, dy);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItemAnimation_verticalScaleAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return this_ptr->verticalScaleAt(step);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItemAnimation_horizontalScaleAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return this_ptr->horizontalScaleAt(step);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QGraphicsItemAnimation_scaleList(QGraphicsItemAnimation const * this_ptr) {
  return new QList< QPair< double, QPointF > >(this_ptr->scaleList());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setScaleAt(QGraphicsItemAnimation * this_ptr, double step, double sx, double sy) {
  this_ptr->setScaleAt(step, sx, sy);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItemAnimation_verticalShearAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return this_ptr->verticalShearAt(step);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsItemAnimation_horizontalShearAt(QGraphicsItemAnimation const * this_ptr, double step) {
  return this_ptr->horizontalShearAt(step);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QGraphicsItemAnimation_shearList(QGraphicsItemAnimation const * this_ptr) {
  return new QList< QPair< double, QPointF > >(this_ptr->shearList());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setShearAt(QGraphicsItemAnimation * this_ptr, double step, double sh, double sv) {
  this_ptr->setShearAt(step, sh, sv);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_clear(QGraphicsItemAnimation * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_setStep(QGraphicsItemAnimation * this_ptr, double x) {
  this_ptr->setStep(x);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemAnimation_reset(QGraphicsItemAnimation * this_ptr) {
  this_ptr->reset();
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_QGraphicsLinearLayout_QGraphicsLinearLayout(QGraphicsLayoutItem * parent) {
  return new QGraphicsLinearLayout(parent);
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_QGraphicsLinearLayout_QGraphicsLinearLayout1(Qt::Orientation orientation, QGraphicsLayoutItem * parent) {
  return new QGraphicsLinearLayout(orientation, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_dQGraphicsLinearLayout(QGraphicsLinearLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_setOrientation(QGraphicsLinearLayout * this_ptr, Qt::Orientation orientation) {
  this_ptr->setOrientation(orientation);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QGraphicsLinearLayout_orientation(QGraphicsLinearLayout const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_addItem(QGraphicsLinearLayout * this_ptr, QGraphicsLayoutItem * item) {
  this_ptr->addItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_addStretch(QGraphicsLinearLayout * this_ptr, int stretch) {
  this_ptr->addStretch(stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_insertItem(QGraphicsLinearLayout * this_ptr, int index, QGraphicsLayoutItem * item) {
  this_ptr->insertItem(index, item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_insertStretch(QGraphicsLinearLayout * this_ptr, int index, int stretch) {
  this_ptr->insertStretch(index, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_removeItem(QGraphicsLinearLayout * this_ptr, QGraphicsLayoutItem * item) {
  this_ptr->removeItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_removeAt(QGraphicsLinearLayout * this_ptr, int index) {
  this_ptr->removeAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_setSpacing(QGraphicsLinearLayout * this_ptr, double spacing) {
  this_ptr->setSpacing(spacing);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLinearLayout_spacing(QGraphicsLinearLayout const * this_ptr) {
  return this_ptr->spacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_setItemSpacing(QGraphicsLinearLayout * this_ptr, int index, double spacing) {
  this_ptr->setItemSpacing(index, spacing);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsLinearLayout_itemSpacing(QGraphicsLinearLayout const * this_ptr, int index) {
  return this_ptr->itemSpacing(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_setStretchFactor(QGraphicsLinearLayout * this_ptr, QGraphicsLayoutItem * item, int stretch) {
  this_ptr->setStretchFactor(item, stretch);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsLinearLayout_stretchFactor(QGraphicsLinearLayout const * this_ptr, QGraphicsLayoutItem * item) {
  return this_ptr->stretchFactor(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_setAlignment(QGraphicsLinearLayout * this_ptr, QGraphicsLayoutItem * item, int alignment) {
  this_ptr->setAlignment(item, QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsLinearLayout_alignment(QGraphicsLinearLayout const * this_ptr, QGraphicsLayoutItem * item) {
  return int(this_ptr->alignment(item));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_setGeometry(QGraphicsLinearLayout * this_ptr, QRectF const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsLinearLayout_count(QGraphicsLinearLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_QGraphicsLinearLayout_itemAt(QGraphicsLinearLayout const * this_ptr, int index) {
  return this_ptr->itemAt(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_invalidate(QGraphicsLinearLayout * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsLinearLayout_sizeHint(QGraphicsLinearLayout const * this_ptr, Qt::SizeHint which, QSizeF const * constraint) {
  return new QSizeF(this_ptr->sizeHint(which, *constraint));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_dump(QGraphicsLinearLayout const * this_ptr, int indent) {
  this_ptr->dump(indent);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsWidget_metaObject(QGraphicsWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsWidget_qt_metacast(QGraphicsWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsWidget_qt_metacall(QGraphicsWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsWidget_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsWidget_QGraphicsWidget(QGraphicsItem * parent, int wFlags) {
  return new QGraphicsWidget(parent, QFlags< Qt::WindowType >(wFlags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_dQGraphicsWidget(QGraphicsWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QGraphicsLayout * ctr_qt_widgets_ffi_QGraphicsWidget_layout(QGraphicsWidget const * this_ptr) {
  return this_ptr->layout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setLayout(QGraphicsWidget * this_ptr, QGraphicsLayout * layout) {
  this_ptr->setLayout(layout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_adjustSize(QGraphicsWidget * this_ptr) {
  this_ptr->adjustSize();
}


RITUAL_EXPORT Qt::LayoutDirection ctr_qt_widgets_ffi_QGraphicsWidget_layoutDirection(QGraphicsWidget const * this_ptr) {
  return this_ptr->layoutDirection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setLayoutDirection(QGraphicsWidget * this_ptr, Qt::LayoutDirection direction) {
  this_ptr->setLayoutDirection(direction);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_unsetLayoutDirection(QGraphicsWidget * this_ptr) {
  this_ptr->unsetLayoutDirection();
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QGraphicsWidget_style(QGraphicsWidget const * this_ptr) {
  return this_ptr->style();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setStyle(QGraphicsWidget * this_ptr, QStyle * style) {
  this_ptr->setStyle(style);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QGraphicsWidget_font(QGraphicsWidget const * this_ptr) {
  return new QFont(this_ptr->font());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setFont(QGraphicsWidget * this_ptr, QFont const * font) {
  this_ptr->setFont(*font);
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QGraphicsWidget_palette(QGraphicsWidget const * this_ptr) {
  return new QPalette(this_ptr->palette());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setPalette(QGraphicsWidget * this_ptr, QPalette const * palette) {
  this_ptr->setPalette(*palette);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsWidget_autoFillBackground(QGraphicsWidget const * this_ptr) {
  return this_ptr->autoFillBackground();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setAutoFillBackground(QGraphicsWidget * this_ptr, bool enabled) {
  this_ptr->setAutoFillBackground(enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_resize(QGraphicsWidget * this_ptr, QSizeF const * size) {
  this_ptr->resize(*size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_resize1(QGraphicsWidget * this_ptr, double w, double h) {
  this_ptr->resize(w, h);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsWidget_size(QGraphicsWidget const * this_ptr) {
  return new QSizeF(this_ptr->size());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setGeometry(QGraphicsWidget * this_ptr, QRectF const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setGeometry1(QGraphicsWidget * this_ptr, double x, double y, double w, double h) {
  this_ptr->setGeometry(x, y, w, h);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsWidget_rect(QGraphicsWidget const * this_ptr) {
  return new QRectF(this_ptr->rect());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setContentsMargins(QGraphicsWidget * this_ptr, double left, double top, double right, double bottom) {
  this_ptr->setContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setContentsMargins1(QGraphicsWidget * this_ptr, QMarginsF const * margins) {
  this_ptr->setContentsMargins(*margins);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_getContentsMargins(QGraphicsWidget const * this_ptr, double * left, double * top, double * right, double * bottom) {
  this_ptr->getContentsMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setWindowFrameMargins(QGraphicsWidget * this_ptr, double left, double top, double right, double bottom) {
  this_ptr->setWindowFrameMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setWindowFrameMargins1(QGraphicsWidget * this_ptr, QMarginsF const * margins) {
  this_ptr->setWindowFrameMargins(*margins);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_getWindowFrameMargins(QGraphicsWidget const * this_ptr, double * left, double * top, double * right, double * bottom) {
  this_ptr->getWindowFrameMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_unsetWindowFrameMargins(QGraphicsWidget * this_ptr) {
  this_ptr->unsetWindowFrameMargins();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsWidget_windowFrameGeometry(QGraphicsWidget const * this_ptr) {
  return new QRectF(this_ptr->windowFrameGeometry());
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsWidget_windowFrameRect(QGraphicsWidget const * this_ptr) {
  return new QRectF(this_ptr->windowFrameRect());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsWidget_windowFlags(QGraphicsWidget const * this_ptr) {
  return int(this_ptr->windowFlags());
}


RITUAL_EXPORT Qt::WindowType ctr_qt_widgets_ffi_QGraphicsWidget_windowType(QGraphicsWidget const * this_ptr) {
  return this_ptr->windowType();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setWindowFlags(QGraphicsWidget * this_ptr, int wFlags) {
  this_ptr->setWindowFlags(QFlags< Qt::WindowType >(wFlags));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsWidget_isActiveWindow(QGraphicsWidget const * this_ptr) {
  return this_ptr->isActiveWindow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setWindowTitle(QGraphicsWidget * this_ptr, QString const * title) {
  this_ptr->setWindowTitle(*title);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsWidget_windowTitle(QGraphicsWidget const * this_ptr) {
  return new QString(this_ptr->windowTitle());
}


RITUAL_EXPORT Qt::FocusPolicy ctr_qt_widgets_ffi_QGraphicsWidget_focusPolicy(QGraphicsWidget const * this_ptr) {
  return this_ptr->focusPolicy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setFocusPolicy(QGraphicsWidget * this_ptr, Qt::FocusPolicy policy) {
  this_ptr->setFocusPolicy(policy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setTabOrder(QGraphicsWidget * first, QGraphicsWidget * second) {
  QGraphicsWidget::setTabOrder(first, second);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsWidget_focusWidget(QGraphicsWidget const * this_ptr) {
  return this_ptr->focusWidget();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsWidget_grabShortcut(QGraphicsWidget * this_ptr, QKeySequence const * sequence, Qt::ShortcutContext context) {
  return this_ptr->grabShortcut(*sequence, context);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_releaseShortcut(QGraphicsWidget * this_ptr, int id) {
  this_ptr->releaseShortcut(id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setShortcutEnabled(QGraphicsWidget * this_ptr, int id, bool enabled) {
  this_ptr->setShortcutEnabled(id, enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setShortcutAutoRepeat(QGraphicsWidget * this_ptr, int id, bool enabled) {
  this_ptr->setShortcutAutoRepeat(id, enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_addAction(QGraphicsWidget * this_ptr, QAction * action) {
  this_ptr->addAction(action);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_addActions(QGraphicsWidget * this_ptr, QList< QAction * > const * actions) {
  this_ptr->addActions(*actions);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_insertActions(QGraphicsWidget * this_ptr, QAction * before, QList< QAction * > const * actions) {
  this_ptr->insertActions(before, *actions);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_insertAction(QGraphicsWidget * this_ptr, QAction * before, QAction * action) {
  this_ptr->insertAction(before, action);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_removeAction(QGraphicsWidget * this_ptr, QAction * action) {
  this_ptr->removeAction(action);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QGraphicsWidget_actions(QGraphicsWidget const * this_ptr) {
  return new QList< QAction * >(this_ptr->actions());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setAttribute(QGraphicsWidget * this_ptr, Qt::WidgetAttribute attribute, bool on) {
  this_ptr->setAttribute(attribute, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsWidget_testAttribute(QGraphicsWidget const * this_ptr, Qt::WidgetAttribute attribute) {
  return this_ptr->testAttribute(attribute);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsWidget_type(QGraphicsWidget const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_paint(QGraphicsWidget * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_paintWindowFrame(QGraphicsWidget * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paintWindowFrame(painter, option, widget);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsWidget_boundingRect(QGraphicsWidget const * this_ptr) {
  return new QRectF(this_ptr->boundingRect());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsWidget_shape(QGraphicsWidget const * this_ptr) {
  return new QPainterPath(this_ptr->shape());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsWidget_close(QGraphicsWidget * this_ptr) {
  return this_ptr->close();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsProxyWidget_metaObject(QGraphicsProxyWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsProxyWidget_qt_metacast(QGraphicsProxyWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsProxyWidget_qt_metacall(QGraphicsProxyWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsProxyWidget_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsProxyWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsProxyWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsProxyWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_QGraphicsProxyWidget_QGraphicsProxyWidget(QGraphicsItem * parent, int wFlags) {
  return new QGraphicsProxyWidget(parent, QFlags< Qt::WindowType >(wFlags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsProxyWidget_dQGraphicsProxyWidget(QGraphicsProxyWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsProxyWidget_setWidget(QGraphicsProxyWidget * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QGraphicsProxyWidget_widget(QGraphicsProxyWidget const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsProxyWidget_subWidgetRect(QGraphicsProxyWidget const * this_ptr, QWidget const * widget) {
  return new QRectF(this_ptr->subWidgetRect(widget));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsProxyWidget_setGeometry(QGraphicsProxyWidget * this_ptr, QRectF const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsProxyWidget_paint(QGraphicsProxyWidget * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option, QWidget * widget) {
  this_ptr->paint(painter, option, widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsProxyWidget_type(QGraphicsProxyWidget const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_QGraphicsProxyWidget_createProxyForChildWidget(QGraphicsProxyWidget * this_ptr, QWidget * child) {
  return this_ptr->createProxyForChildWidget(child);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsScene_metaObject(QGraphicsScene const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsScene_qt_metacast(QGraphicsScene * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsScene_qt_metacall(QGraphicsScene * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsScene_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsScene::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsScene_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsScene::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsScene_QGraphicsScene(QObject * parent) {
  return new QGraphicsScene(parent);
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsScene_QGraphicsScene1(QRectF const * sceneRect, QObject * parent) {
  return new QGraphicsScene(*sceneRect, parent);
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsScene_QGraphicsScene2(double x, double y, double width, double height, QObject * parent) {
  return new QGraphicsScene(x, y, width, height, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_dQGraphicsScene(QGraphicsScene * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsScene_sceneRect(QGraphicsScene const * this_ptr) {
  return new QRectF(this_ptr->sceneRect());
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsScene_width(QGraphicsScene const * this_ptr) {
  return this_ptr->width();
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsScene_height(QGraphicsScene const * this_ptr) {
  return this_ptr->height();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSceneRect(QGraphicsScene * this_ptr, QRectF const * rect) {
  this_ptr->setSceneRect(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSceneRect1(QGraphicsScene * this_ptr, double x, double y, double w, double h) {
  this_ptr->setSceneRect(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_render(QGraphicsScene * this_ptr, QPainter * painter, QRectF const * target, QRectF const * source, Qt::AspectRatioMode aspectRatioMode) {
  this_ptr->render(painter, *target, *source, aspectRatioMode);
}


RITUAL_EXPORT QGraphicsScene::ItemIndexMethod ctr_qt_widgets_ffi_QGraphicsScene_itemIndexMethod(QGraphicsScene const * this_ptr) {
  return this_ptr->itemIndexMethod();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setItemIndexMethod(QGraphicsScene * this_ptr, QGraphicsScene::ItemIndexMethod method) {
  this_ptr->setItemIndexMethod(method);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsScene_isSortCacheEnabled(QGraphicsScene const * this_ptr) {
  return this_ptr->isSortCacheEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSortCacheEnabled(QGraphicsScene * this_ptr, bool enabled) {
  this_ptr->setSortCacheEnabled(enabled);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsScene_bspTreeDepth(QGraphicsScene const * this_ptr) {
  return this_ptr->bspTreeDepth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setBspTreeDepth(QGraphicsScene * this_ptr, int depth) {
  this_ptr->setBspTreeDepth(depth);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsScene_itemsBoundingRect(QGraphicsScene const * this_ptr) {
  return new QRectF(this_ptr->itemsBoundingRect());
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items(QGraphicsScene const * this_ptr, Qt::SortOrder order) {
  return new QList< QGraphicsItem * >(this_ptr->items(order));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items1(QGraphicsScene const * this_ptr, QPointF const * pos, Qt::ItemSelectionMode mode, Qt::SortOrder order, QTransform const * deviceTransform) {
  return new QList< QGraphicsItem * >(this_ptr->items(*pos, mode, order, *deviceTransform));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items2(QGraphicsScene const * this_ptr, QRectF const * rect, Qt::ItemSelectionMode mode, Qt::SortOrder order, QTransform const * deviceTransform) {
  return new QList< QGraphicsItem * >(this_ptr->items(*rect, mode, order, *deviceTransform));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items3(QGraphicsScene const * this_ptr, QPolygonF const * polygon, Qt::ItemSelectionMode mode, Qt::SortOrder order, QTransform const * deviceTransform) {
  return new QList< QGraphicsItem * >(this_ptr->items(*polygon, mode, order, *deviceTransform));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items4(QGraphicsScene const * this_ptr, QPainterPath const * path, Qt::ItemSelectionMode mode, Qt::SortOrder order, QTransform const * deviceTransform) {
  return new QList< QGraphicsItem * >(this_ptr->items(*path, mode, order, *deviceTransform));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_collidingItems(QGraphicsScene const * this_ptr, QGraphicsItem const * item, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->collidingItems(item, mode));
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsScene_itemAt(QGraphicsScene const * this_ptr, QPointF const * pos, QTransform const * deviceTransform) {
  return this_ptr->itemAt(*pos, *deviceTransform);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items5(QGraphicsScene const * this_ptr, double x, double y, double w, double h, Qt::ItemSelectionMode mode, Qt::SortOrder order, QTransform const * deviceTransform) {
  return new QList< QGraphicsItem * >(this_ptr->items(x, y, w, h, mode, order, *deviceTransform));
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsScene_itemAt1(QGraphicsScene const * this_ptr, double x, double y, QTransform const * deviceTransform) {
  return this_ptr->itemAt(x, y, *deviceTransform);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_selectedItems(QGraphicsScene const * this_ptr) {
  return new QList< QGraphicsItem * >(this_ptr->selectedItems());
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsScene_selectionArea(QGraphicsScene const * this_ptr) {
  return new QPainterPath(this_ptr->selectionArea());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSelectionArea(QGraphicsScene * this_ptr, QPainterPath const * path, QTransform const * deviceTransform) {
  this_ptr->setSelectionArea(*path, *deviceTransform);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSelectionArea1(QGraphicsScene * this_ptr, QPainterPath const * path, Qt::ItemSelectionMode mode, QTransform const * deviceTransform) {
  this_ptr->setSelectionArea(*path, mode, *deviceTransform);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSelectionArea2(QGraphicsScene * this_ptr, QPainterPath const * path, Qt::ItemSelectionOperation selectionOperation, Qt::ItemSelectionMode mode, QTransform const * deviceTransform) {
  this_ptr->setSelectionArea(*path, selectionOperation, mode, *deviceTransform);
}


RITUAL_EXPORT QGraphicsItemGroup * ctr_qt_widgets_ffi_QGraphicsScene_createItemGroup(QGraphicsScene * this_ptr, QList< QGraphicsItem * > const * items) {
  return this_ptr->createItemGroup(*items);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_destroyItemGroup(QGraphicsScene * this_ptr, QGraphicsItemGroup * group) {
  this_ptr->destroyItemGroup(group);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_addItem(QGraphicsScene * this_ptr, QGraphicsItem * item) {
  this_ptr->addItem(item);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsScene_addEllipse(QGraphicsScene * this_ptr, QRectF const * rect, QPen const * pen, QBrush const * brush) {
  return this_ptr->addEllipse(*rect, *pen, *brush);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsScene_addLine(QGraphicsScene * this_ptr, QLineF const * line, QPen const * pen) {
  return this_ptr->addLine(*line, *pen);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_QGraphicsScene_addPath(QGraphicsScene * this_ptr, QPainterPath const * path, QPen const * pen, QBrush const * brush) {
  return this_ptr->addPath(*path, *pen, *brush);
}


RITUAL_EXPORT QGraphicsPixmapItem * ctr_qt_widgets_ffi_QGraphicsScene_addPixmap(QGraphicsScene * this_ptr, QPixmap const * pixmap) {
  return this_ptr->addPixmap(*pixmap);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_QGraphicsScene_addPolygon(QGraphicsScene * this_ptr, QPolygonF const * polygon, QPen const * pen, QBrush const * brush) {
  return this_ptr->addPolygon(*polygon, *pen, *brush);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsScene_addRect(QGraphicsScene * this_ptr, QRectF const * rect, QPen const * pen, QBrush const * brush) {
  return this_ptr->addRect(*rect, *pen, *brush);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_QGraphicsScene_addText(QGraphicsScene * this_ptr, QString const * text, QFont const * font) {
  return this_ptr->addText(*text, *font);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_QGraphicsScene_addSimpleText(QGraphicsScene * this_ptr, QString const * text, QFont const * font) {
  return this_ptr->addSimpleText(*text, *font);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_QGraphicsScene_addWidget(QGraphicsScene * this_ptr, QWidget * widget, int wFlags) {
  return this_ptr->addWidget(widget, QFlags< Qt::WindowType >(wFlags));
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsScene_addEllipse1(QGraphicsScene * this_ptr, double x, double y, double w, double h, QPen const * pen, QBrush const * brush) {
  return this_ptr->addEllipse(x, y, w, h, *pen, *brush);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsScene_addLine1(QGraphicsScene * this_ptr, double x1, double y1, double x2, double y2, QPen const * pen) {
  return this_ptr->addLine(x1, y1, x2, y2, *pen);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsScene_addRect1(QGraphicsScene * this_ptr, double x, double y, double w, double h, QPen const * pen, QBrush const * brush) {
  return this_ptr->addRect(x, y, w, h, *pen, *brush);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_removeItem(QGraphicsScene * this_ptr, QGraphicsItem * item) {
  this_ptr->removeItem(item);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsScene_focusItem(QGraphicsScene const * this_ptr) {
  return this_ptr->focusItem();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setFocusItem(QGraphicsScene * this_ptr, QGraphicsItem * item, Qt::FocusReason focusReason) {
  this_ptr->setFocusItem(item, focusReason);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsScene_hasFocus(QGraphicsScene const * this_ptr) {
  return this_ptr->hasFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setFocus(QGraphicsScene * this_ptr, Qt::FocusReason focusReason) {
  this_ptr->setFocus(focusReason);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_clearFocus(QGraphicsScene * this_ptr) {
  this_ptr->clearFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setStickyFocus(QGraphicsScene * this_ptr, bool enabled) {
  this_ptr->setStickyFocus(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsScene_stickyFocus(QGraphicsScene const * this_ptr) {
  return this_ptr->stickyFocus();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsScene_mouseGrabberItem(QGraphicsScene const * this_ptr) {
  return this_ptr->mouseGrabberItem();
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QGraphicsScene_backgroundBrush(QGraphicsScene const * this_ptr) {
  return new QBrush(this_ptr->backgroundBrush());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setBackgroundBrush(QGraphicsScene * this_ptr, QBrush const * brush) {
  this_ptr->setBackgroundBrush(*brush);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QGraphicsScene_foregroundBrush(QGraphicsScene const * this_ptr) {
  return new QBrush(this_ptr->foregroundBrush());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setForegroundBrush(QGraphicsScene * this_ptr, QBrush const * brush) {
  this_ptr->setForegroundBrush(*brush);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QGraphicsScene_inputMethodQuery(QGraphicsScene const * this_ptr, Qt::InputMethodQuery query) {
  return new QVariant(this_ptr->inputMethodQuery(query));
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QGraphicsScene_views(QGraphicsScene const * this_ptr) {
  return new QList< QGraphicsView * >(this_ptr->views());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_update(QGraphicsScene * this_ptr, double x, double y, double w, double h) {
  this_ptr->update(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_invalidate(QGraphicsScene * this_ptr, double x, double y, double w, double h, int layers) {
  this_ptr->invalidate(x, y, w, h, QFlags< QGraphicsScene::SceneLayer >(layers));
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QGraphicsScene_style(QGraphicsScene const * this_ptr) {
  return this_ptr->style();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setStyle(QGraphicsScene * this_ptr, QStyle * style) {
  this_ptr->setStyle(style);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QGraphicsScene_font(QGraphicsScene const * this_ptr) {
  return new QFont(this_ptr->font());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setFont(QGraphicsScene * this_ptr, QFont const * font) {
  this_ptr->setFont(*font);
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QGraphicsScene_palette(QGraphicsScene const * this_ptr) {
  return new QPalette(this_ptr->palette());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setPalette(QGraphicsScene * this_ptr, QPalette const * palette) {
  this_ptr->setPalette(*palette);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsScene_isActive(QGraphicsScene const * this_ptr) {
  return this_ptr->isActive();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsScene_activePanel(QGraphicsScene const * this_ptr) {
  return this_ptr->activePanel();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setActivePanel(QGraphicsScene * this_ptr, QGraphicsItem * item) {
  this_ptr->setActivePanel(item);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsScene_activeWindow(QGraphicsScene const * this_ptr) {
  return this_ptr->activeWindow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setActiveWindow(QGraphicsScene * this_ptr, QGraphicsWidget * widget) {
  this_ptr->setActiveWindow(widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsScene_sendEvent(QGraphicsScene * this_ptr, QGraphicsItem * item, QEvent * event) {
  return this_ptr->sendEvent(item, event);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsScene_minimumRenderSize(QGraphicsScene const * this_ptr) {
  return this_ptr->minimumRenderSize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setMinimumRenderSize(QGraphicsScene * this_ptr, double minSize) {
  this_ptr->setMinimumRenderSize(minSize);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsScene_focusOnTouch(QGraphicsScene const * this_ptr) {
  return this_ptr->focusOnTouch();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setFocusOnTouch(QGraphicsScene * this_ptr, bool enabled) {
  this_ptr->setFocusOnTouch(enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_update1(QGraphicsScene * this_ptr, QRectF const * rect) {
  this_ptr->update(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_invalidate1(QGraphicsScene * this_ptr, QRectF const * rect, int layers) {
  this_ptr->invalidate(*rect, QFlags< QGraphicsScene::SceneLayer >(layers));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_advance(QGraphicsScene * this_ptr) {
  this_ptr->advance();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_clearSelection(QGraphicsScene * this_ptr) {
  this_ptr->clearSelection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_clear(QGraphicsScene * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_QGraphicsSceneEvent_QGraphicsSceneEvent(QEvent::Type type) {
  return new QGraphicsSceneEvent(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneEvent_dQGraphicsSceneEvent(QGraphicsSceneEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QGraphicsSceneEvent_widget(QGraphicsSceneEvent const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneEvent_setWidget(QGraphicsSceneEvent * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT QGraphicsSceneMouseEvent * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_QGraphicsSceneMouseEvent(QEvent::Type type) {
  return new QGraphicsSceneMouseEvent(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_dQGraphicsSceneMouseEvent(QGraphicsSceneMouseEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_pos(QGraphicsSceneMouseEvent const * this_ptr) {
  return new QPointF(this_ptr->pos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setPos(QGraphicsSceneMouseEvent * this_ptr, QPointF const * pos) {
  this_ptr->setPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_scenePos(QGraphicsSceneMouseEvent const * this_ptr) {
  return new QPointF(this_ptr->scenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setScenePos(QGraphicsSceneMouseEvent * this_ptr, QPointF const * pos) {
  this_ptr->setScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_screenPos(QGraphicsSceneMouseEvent const * this_ptr) {
  return new QPoint(this_ptr->screenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setScreenPos(QGraphicsSceneMouseEvent * this_ptr, QPoint const * pos) {
  this_ptr->setScreenPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_buttonDownPos(QGraphicsSceneMouseEvent const * this_ptr, Qt::MouseButton button) {
  return new QPointF(this_ptr->buttonDownPos(button));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setButtonDownPos(QGraphicsSceneMouseEvent * this_ptr, Qt::MouseButton button, QPointF const * pos) {
  this_ptr->setButtonDownPos(button, *pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_buttonDownScenePos(QGraphicsSceneMouseEvent const * this_ptr, Qt::MouseButton button) {
  return new QPointF(this_ptr->buttonDownScenePos(button));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setButtonDownScenePos(QGraphicsSceneMouseEvent * this_ptr, Qt::MouseButton button, QPointF const * pos) {
  this_ptr->setButtonDownScenePos(button, *pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_buttonDownScreenPos(QGraphicsSceneMouseEvent const * this_ptr, Qt::MouseButton button) {
  return new QPoint(this_ptr->buttonDownScreenPos(button));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setButtonDownScreenPos(QGraphicsSceneMouseEvent * this_ptr, Qt::MouseButton button, QPoint const * pos) {
  this_ptr->setButtonDownScreenPos(button, *pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_lastPos(QGraphicsSceneMouseEvent const * this_ptr) {
  return new QPointF(this_ptr->lastPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setLastPos(QGraphicsSceneMouseEvent * this_ptr, QPointF const * pos) {
  this_ptr->setLastPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_lastScenePos(QGraphicsSceneMouseEvent const * this_ptr) {
  return new QPointF(this_ptr->lastScenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setLastScenePos(QGraphicsSceneMouseEvent * this_ptr, QPointF const * pos) {
  this_ptr->setLastScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_lastScreenPos(QGraphicsSceneMouseEvent const * this_ptr) {
  return new QPoint(this_ptr->lastScreenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setLastScreenPos(QGraphicsSceneMouseEvent * this_ptr, QPoint const * pos) {
  this_ptr->setLastScreenPos(*pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_buttons(QGraphicsSceneMouseEvent const * this_ptr) {
  return int(this_ptr->buttons());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setButtons(QGraphicsSceneMouseEvent * this_ptr, int buttons) {
  this_ptr->setButtons(QFlags< Qt::MouseButton >(buttons));
}


RITUAL_EXPORT Qt::MouseButton ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_button(QGraphicsSceneMouseEvent const * this_ptr) {
  return this_ptr->button();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setButton(QGraphicsSceneMouseEvent * this_ptr, Qt::MouseButton button) {
  this_ptr->setButton(button);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_modifiers(QGraphicsSceneMouseEvent const * this_ptr) {
  return int(this_ptr->modifiers());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setModifiers(QGraphicsSceneMouseEvent * this_ptr, int modifiers) {
  this_ptr->setModifiers(QFlags< Qt::KeyboardModifier >(modifiers));
}


RITUAL_EXPORT Qt::MouseEventSource ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_source(QGraphicsSceneMouseEvent const * this_ptr) {
  return this_ptr->source();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setSource(QGraphicsSceneMouseEvent * this_ptr, Qt::MouseEventSource source) {
  this_ptr->setSource(source);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_flags(QGraphicsSceneMouseEvent const * this_ptr) {
  return int(this_ptr->flags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_setFlags(QGraphicsSceneMouseEvent * this_ptr, int arg1) {
  this_ptr->setFlags(QFlags< Qt::MouseEventFlag >(arg1));
}


RITUAL_EXPORT QGraphicsSceneWheelEvent * ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_QGraphicsSceneWheelEvent(QEvent::Type type) {
  return new QGraphicsSceneWheelEvent(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_dQGraphicsSceneWheelEvent(QGraphicsSceneWheelEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_pos(QGraphicsSceneWheelEvent const * this_ptr) {
  return new QPointF(this_ptr->pos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_setPos(QGraphicsSceneWheelEvent * this_ptr, QPointF const * pos) {
  this_ptr->setPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_scenePos(QGraphicsSceneWheelEvent const * this_ptr) {
  return new QPointF(this_ptr->scenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_setScenePos(QGraphicsSceneWheelEvent * this_ptr, QPointF const * pos) {
  this_ptr->setScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_screenPos(QGraphicsSceneWheelEvent const * this_ptr) {
  return new QPoint(this_ptr->screenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_setScreenPos(QGraphicsSceneWheelEvent * this_ptr, QPoint const * pos) {
  this_ptr->setScreenPos(*pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_buttons(QGraphicsSceneWheelEvent const * this_ptr) {
  return int(this_ptr->buttons());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_setButtons(QGraphicsSceneWheelEvent * this_ptr, int buttons) {
  this_ptr->setButtons(QFlags< Qt::MouseButton >(buttons));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_modifiers(QGraphicsSceneWheelEvent const * this_ptr) {
  return int(this_ptr->modifiers());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_setModifiers(QGraphicsSceneWheelEvent * this_ptr, int modifiers) {
  this_ptr->setModifiers(QFlags< Qt::KeyboardModifier >(modifiers));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_delta(QGraphicsSceneWheelEvent const * this_ptr) {
  return this_ptr->delta();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_setDelta(QGraphicsSceneWheelEvent * this_ptr, int delta) {
  this_ptr->setDelta(delta);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_orientation(QGraphicsSceneWheelEvent const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_setOrientation(QGraphicsSceneWheelEvent * this_ptr, Qt::Orientation orientation) {
  this_ptr->setOrientation(orientation);
}


RITUAL_EXPORT QGraphicsSceneContextMenuEvent * ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_QGraphicsSceneContextMenuEvent(QEvent::Type type) {
  return new QGraphicsSceneContextMenuEvent(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_dQGraphicsSceneContextMenuEvent(QGraphicsSceneContextMenuEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_pos(QGraphicsSceneContextMenuEvent const * this_ptr) {
  return new QPointF(this_ptr->pos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_setPos(QGraphicsSceneContextMenuEvent * this_ptr, QPointF const * pos) {
  this_ptr->setPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_scenePos(QGraphicsSceneContextMenuEvent const * this_ptr) {
  return new QPointF(this_ptr->scenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_setScenePos(QGraphicsSceneContextMenuEvent * this_ptr, QPointF const * pos) {
  this_ptr->setScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_screenPos(QGraphicsSceneContextMenuEvent const * this_ptr) {
  return new QPoint(this_ptr->screenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_setScreenPos(QGraphicsSceneContextMenuEvent * this_ptr, QPoint const * pos) {
  this_ptr->setScreenPos(*pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_modifiers(QGraphicsSceneContextMenuEvent const * this_ptr) {
  return int(this_ptr->modifiers());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_setModifiers(QGraphicsSceneContextMenuEvent * this_ptr, int modifiers) {
  this_ptr->setModifiers(QFlags< Qt::KeyboardModifier >(modifiers));
}


RITUAL_EXPORT QGraphicsSceneContextMenuEvent::Reason ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_reason(QGraphicsSceneContextMenuEvent const * this_ptr) {
  return this_ptr->reason();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_setReason(QGraphicsSceneContextMenuEvent * this_ptr, QGraphicsSceneContextMenuEvent::Reason reason) {
  this_ptr->setReason(reason);
}


RITUAL_EXPORT QGraphicsSceneHoverEvent * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_QGraphicsSceneHoverEvent(QEvent::Type type) {
  return new QGraphicsSceneHoverEvent(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_dQGraphicsSceneHoverEvent(QGraphicsSceneHoverEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_pos(QGraphicsSceneHoverEvent const * this_ptr) {
  return new QPointF(this_ptr->pos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_setPos(QGraphicsSceneHoverEvent * this_ptr, QPointF const * pos) {
  this_ptr->setPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_scenePos(QGraphicsSceneHoverEvent const * this_ptr) {
  return new QPointF(this_ptr->scenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_setScenePos(QGraphicsSceneHoverEvent * this_ptr, QPointF const * pos) {
  this_ptr->setScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_screenPos(QGraphicsSceneHoverEvent const * this_ptr) {
  return new QPoint(this_ptr->screenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_setScreenPos(QGraphicsSceneHoverEvent * this_ptr, QPoint const * pos) {
  this_ptr->setScreenPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_lastPos(QGraphicsSceneHoverEvent const * this_ptr) {
  return new QPointF(this_ptr->lastPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_setLastPos(QGraphicsSceneHoverEvent * this_ptr, QPointF const * pos) {
  this_ptr->setLastPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_lastScenePos(QGraphicsSceneHoverEvent const * this_ptr) {
  return new QPointF(this_ptr->lastScenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_setLastScenePos(QGraphicsSceneHoverEvent * this_ptr, QPointF const * pos) {
  this_ptr->setLastScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_lastScreenPos(QGraphicsSceneHoverEvent const * this_ptr) {
  return new QPoint(this_ptr->lastScreenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_setLastScreenPos(QGraphicsSceneHoverEvent * this_ptr, QPoint const * pos) {
  this_ptr->setLastScreenPos(*pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_modifiers(QGraphicsSceneHoverEvent const * this_ptr) {
  return int(this_ptr->modifiers());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_setModifiers(QGraphicsSceneHoverEvent * this_ptr, int modifiers) {
  this_ptr->setModifiers(QFlags< Qt::KeyboardModifier >(modifiers));
}


RITUAL_EXPORT QGraphicsSceneHelpEvent * ctr_qt_widgets_ffi_QGraphicsSceneHelpEvent_QGraphicsSceneHelpEvent(QEvent::Type type) {
  return new QGraphicsSceneHelpEvent(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHelpEvent_dQGraphicsSceneHelpEvent(QGraphicsSceneHelpEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneHelpEvent_scenePos(QGraphicsSceneHelpEvent const * this_ptr) {
  return new QPointF(this_ptr->scenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHelpEvent_setScenePos(QGraphicsSceneHelpEvent * this_ptr, QPointF const * pos) {
  this_ptr->setScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneHelpEvent_screenPos(QGraphicsSceneHelpEvent const * this_ptr) {
  return new QPoint(this_ptr->screenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneHelpEvent_setScreenPos(QGraphicsSceneHelpEvent * this_ptr, QPoint const * pos) {
  this_ptr->setScreenPos(*pos);
}


RITUAL_EXPORT QGraphicsSceneDragDropEvent * ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_QGraphicsSceneDragDropEvent(QEvent::Type type) {
  return new QGraphicsSceneDragDropEvent(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_dQGraphicsSceneDragDropEvent(QGraphicsSceneDragDropEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_pos(QGraphicsSceneDragDropEvent const * this_ptr) {
  return new QPointF(this_ptr->pos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setPos(QGraphicsSceneDragDropEvent * this_ptr, QPointF const * pos) {
  this_ptr->setPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_scenePos(QGraphicsSceneDragDropEvent const * this_ptr) {
  return new QPointF(this_ptr->scenePos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setScenePos(QGraphicsSceneDragDropEvent * this_ptr, QPointF const * pos) {
  this_ptr->setScenePos(*pos);
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_screenPos(QGraphicsSceneDragDropEvent const * this_ptr) {
  return new QPoint(this_ptr->screenPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setScreenPos(QGraphicsSceneDragDropEvent * this_ptr, QPoint const * pos) {
  this_ptr->setScreenPos(*pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_buttons(QGraphicsSceneDragDropEvent const * this_ptr) {
  return int(this_ptr->buttons());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setButtons(QGraphicsSceneDragDropEvent * this_ptr, int buttons) {
  this_ptr->setButtons(QFlags< Qt::MouseButton >(buttons));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_modifiers(QGraphicsSceneDragDropEvent const * this_ptr) {
  return int(this_ptr->modifiers());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setModifiers(QGraphicsSceneDragDropEvent * this_ptr, int modifiers) {
  this_ptr->setModifiers(QFlags< Qt::KeyboardModifier >(modifiers));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_possibleActions(QGraphicsSceneDragDropEvent const * this_ptr) {
  return int(this_ptr->possibleActions());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setPossibleActions(QGraphicsSceneDragDropEvent * this_ptr, int actions) {
  this_ptr->setPossibleActions(QFlags< Qt::DropAction >(actions));
}


RITUAL_EXPORT Qt::DropAction ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_proposedAction(QGraphicsSceneDragDropEvent const * this_ptr) {
  return this_ptr->proposedAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setProposedAction(QGraphicsSceneDragDropEvent * this_ptr, Qt::DropAction action) {
  this_ptr->setProposedAction(action);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_acceptProposedAction(QGraphicsSceneDragDropEvent * this_ptr) {
  this_ptr->acceptProposedAction();
}


RITUAL_EXPORT Qt::DropAction ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_dropAction(QGraphicsSceneDragDropEvent const * this_ptr) {
  return this_ptr->dropAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setDropAction(QGraphicsSceneDragDropEvent * this_ptr, Qt::DropAction action) {
  this_ptr->setDropAction(action);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_source(QGraphicsSceneDragDropEvent const * this_ptr) {
  return this_ptr->source();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setSource(QGraphicsSceneDragDropEvent * this_ptr, QWidget * source) {
  this_ptr->setSource(source);
}


RITUAL_EXPORT QMimeData const * ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_mimeData(QGraphicsSceneDragDropEvent const * this_ptr) {
  return this_ptr->mimeData();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_setMimeData(QGraphicsSceneDragDropEvent * this_ptr, QMimeData const * data) {
  this_ptr->setMimeData(data);
}


RITUAL_EXPORT QGraphicsSceneResizeEvent * ctr_qt_widgets_ffi_QGraphicsSceneResizeEvent_QGraphicsSceneResizeEvent() {
  return new QGraphicsSceneResizeEvent();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneResizeEvent_dQGraphicsSceneResizeEvent(QGraphicsSceneResizeEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsSceneResizeEvent_oldSize(QGraphicsSceneResizeEvent const * this_ptr) {
  return new QSizeF(this_ptr->oldSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneResizeEvent_setOldSize(QGraphicsSceneResizeEvent * this_ptr, QSizeF const * size) {
  this_ptr->setOldSize(*size);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsSceneResizeEvent_newSize(QGraphicsSceneResizeEvent const * this_ptr) {
  return new QSizeF(this_ptr->newSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneResizeEvent_setNewSize(QGraphicsSceneResizeEvent * this_ptr, QSizeF const * size) {
  this_ptr->setNewSize(*size);
}


RITUAL_EXPORT QGraphicsSceneMoveEvent * ctr_qt_widgets_ffi_QGraphicsSceneMoveEvent_QGraphicsSceneMoveEvent() {
  return new QGraphicsSceneMoveEvent();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMoveEvent_dQGraphicsSceneMoveEvent(QGraphicsSceneMoveEvent * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMoveEvent_oldPos(QGraphicsSceneMoveEvent const * this_ptr) {
  return new QPointF(this_ptr->oldPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMoveEvent_setOldPos(QGraphicsSceneMoveEvent * this_ptr, QPointF const * pos) {
  this_ptr->setOldPos(*pos);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsSceneMoveEvent_newPos(QGraphicsSceneMoveEvent const * this_ptr) {
  return new QPointF(this_ptr->newPos());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsSceneMoveEvent_setNewPos(QGraphicsSceneMoveEvent * this_ptr, QPointF const * pos) {
  this_ptr->setNewPos(*pos);
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__13(QDebug const * arg1, QGraphicsSceneEvent const * arg2) {
  return new QDebug(operator<<(*arg1, arg2));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsTransform_metaObject(QGraphicsTransform const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsTransform_qt_metacast(QGraphicsTransform * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsTransform_qt_metacall(QGraphicsTransform * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsTransform_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsTransform::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsTransform_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsTransform::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTransform_dQGraphicsTransform(QGraphicsTransform * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsTransform_applyTo(QGraphicsTransform const * this_ptr, QMatrix4x4 * matrix) {
  this_ptr->applyTo(matrix);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsScale_metaObject(QGraphicsScale const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsScale_qt_metacast(QGraphicsScale * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsScale_qt_metacall(QGraphicsScale * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsScale_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsScale::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsScale_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsScale::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsScale * ctr_qt_widgets_ffi_QGraphicsScale_QGraphicsScale(QObject * parent) {
  return new QGraphicsScale(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScale_dQGraphicsScale(QGraphicsScale * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QVector3D * ctr_qt_widgets_ffi_QGraphicsScale_origin(QGraphicsScale const * this_ptr) {
  return new QVector3D(this_ptr->origin());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScale_setOrigin(QGraphicsScale * this_ptr, QVector3D const * point) {
  this_ptr->setOrigin(*point);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsScale_xScale(QGraphicsScale const * this_ptr) {
  return this_ptr->xScale();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScale_setXScale(QGraphicsScale * this_ptr, double arg1) {
  this_ptr->setXScale(arg1);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsScale_yScale(QGraphicsScale const * this_ptr) {
  return this_ptr->yScale();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScale_setYScale(QGraphicsScale * this_ptr, double arg1) {
  this_ptr->setYScale(arg1);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsScale_zScale(QGraphicsScale const * this_ptr) {
  return this_ptr->zScale();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScale_setZScale(QGraphicsScale * this_ptr, double arg1) {
  this_ptr->setZScale(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScale_applyTo(QGraphicsScale const * this_ptr, QMatrix4x4 * matrix) {
  this_ptr->applyTo(matrix);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsRotation_metaObject(QGraphicsRotation const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsRotation_qt_metacast(QGraphicsRotation * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsRotation_qt_metacall(QGraphicsRotation * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsRotation_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsRotation::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsRotation_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsRotation::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsRotation * ctr_qt_widgets_ffi_QGraphicsRotation_QGraphicsRotation(QObject * parent) {
  return new QGraphicsRotation(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRotation_dQGraphicsRotation(QGraphicsRotation * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QVector3D * ctr_qt_widgets_ffi_QGraphicsRotation_origin(QGraphicsRotation const * this_ptr) {
  return new QVector3D(this_ptr->origin());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRotation_setOrigin(QGraphicsRotation * this_ptr, QVector3D const * point) {
  this_ptr->setOrigin(*point);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QGraphicsRotation_angle(QGraphicsRotation const * this_ptr) {
  return this_ptr->angle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRotation_setAngle(QGraphicsRotation * this_ptr, double arg1) {
  this_ptr->setAngle(arg1);
}


RITUAL_EXPORT QVector3D * ctr_qt_widgets_ffi_QGraphicsRotation_axis(QGraphicsRotation const * this_ptr) {
  return new QVector3D(this_ptr->axis());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRotation_setAxis(QGraphicsRotation * this_ptr, QVector3D const * axis) {
  this_ptr->setAxis(*axis);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRotation_setAxis1(QGraphicsRotation * this_ptr, Qt::Axis axis) {
  this_ptr->setAxis(axis);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRotation_applyTo(QGraphicsRotation const * this_ptr, QMatrix4x4 * matrix) {
  this_ptr->applyTo(matrix);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QScrollArea_metaObject(QScrollArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QScrollArea_qt_metacast(QScrollArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QScrollArea_qt_metacall(QScrollArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QScrollArea_tr(char const * s, char const * c, int n) {
  return new QString(QScrollArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QScrollArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(QScrollArea::trUtf8(s, c, n));
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_QScrollArea_QScrollArea(QWidget * parent) {
  return new QScrollArea(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_dQScrollArea(QScrollArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QScrollArea_widget(QScrollArea const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_setWidget(QScrollArea * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QScrollArea_takeWidget(QScrollArea * this_ptr) {
  return this_ptr->takeWidget();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QScrollArea_widgetResizable(QScrollArea const * this_ptr) {
  return this_ptr->widgetResizable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_setWidgetResizable(QScrollArea * this_ptr, bool resizable) {
  this_ptr->setWidgetResizable(resizable);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QScrollArea_sizeHint(QScrollArea const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QScrollArea_focusNextPrevChild(QScrollArea * this_ptr, bool next) {
  return this_ptr->focusNextPrevChild(next);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QScrollArea_alignment(QScrollArea const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_setAlignment(QScrollArea * this_ptr, int arg1) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(arg1));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_ensureVisible(QScrollArea * this_ptr, int x, int y, int xmargin, int ymargin) {
  this_ptr->ensureVisible(x, y, xmargin, ymargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_ensureWidgetVisible(QScrollArea * this_ptr, QWidget * childWidget, int xmargin, int ymargin) {
  this_ptr->ensureWidgetVisible(childWidget, xmargin, ymargin);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGraphicsView_metaObject(QGraphicsView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGraphicsView_qt_metacast(QGraphicsView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsView_qt_metacall(QGraphicsView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsView_tr(char const * s, char const * c, int n) {
  return new QString(QGraphicsView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGraphicsView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGraphicsView::trUtf8(s, c, n));
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QGraphicsView_QGraphicsView(QWidget * parent) {
  return new QGraphicsView(parent);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QGraphicsView_QGraphicsView1(QGraphicsScene * scene, QWidget * parent) {
  return new QGraphicsView(scene, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_dQGraphicsView(QGraphicsView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QGraphicsView_sizeHint(QGraphicsView const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsView_renderHints(QGraphicsView const * this_ptr) {
  return int(this_ptr->renderHints());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setRenderHint(QGraphicsView * this_ptr, QPainter::RenderHint hint, bool enabled) {
  this_ptr->setRenderHint(hint, enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setRenderHints(QGraphicsView * this_ptr, int hints) {
  this_ptr->setRenderHints(QFlags< QPainter::RenderHint >(hints));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsView_alignment(QGraphicsView const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setAlignment(QGraphicsView * this_ptr, int alignment) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT QGraphicsView::ViewportAnchor ctr_qt_widgets_ffi_QGraphicsView_transformationAnchor(QGraphicsView const * this_ptr) {
  return this_ptr->transformationAnchor();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setTransformationAnchor(QGraphicsView * this_ptr, QGraphicsView::ViewportAnchor anchor) {
  this_ptr->setTransformationAnchor(anchor);
}


RITUAL_EXPORT QGraphicsView::ViewportAnchor ctr_qt_widgets_ffi_QGraphicsView_resizeAnchor(QGraphicsView const * this_ptr) {
  return this_ptr->resizeAnchor();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setResizeAnchor(QGraphicsView * this_ptr, QGraphicsView::ViewportAnchor anchor) {
  this_ptr->setResizeAnchor(anchor);
}


RITUAL_EXPORT QGraphicsView::ViewportUpdateMode ctr_qt_widgets_ffi_QGraphicsView_viewportUpdateMode(QGraphicsView const * this_ptr) {
  return this_ptr->viewportUpdateMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setViewportUpdateMode(QGraphicsView * this_ptr, QGraphicsView::ViewportUpdateMode mode) {
  this_ptr->setViewportUpdateMode(mode);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsView_optimizationFlags(QGraphicsView const * this_ptr) {
  return int(this_ptr->optimizationFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setOptimizationFlag(QGraphicsView * this_ptr, QGraphicsView::OptimizationFlag flag, bool enabled) {
  this_ptr->setOptimizationFlag(flag, enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setOptimizationFlags(QGraphicsView * this_ptr, int flags) {
  this_ptr->setOptimizationFlags(QFlags< QGraphicsView::OptimizationFlag >(flags));
}


RITUAL_EXPORT QGraphicsView::DragMode ctr_qt_widgets_ffi_QGraphicsView_dragMode(QGraphicsView const * this_ptr) {
  return this_ptr->dragMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setDragMode(QGraphicsView * this_ptr, QGraphicsView::DragMode mode) {
  this_ptr->setDragMode(mode);
}


RITUAL_EXPORT Qt::ItemSelectionMode ctr_qt_widgets_ffi_QGraphicsView_rubberBandSelectionMode(QGraphicsView const * this_ptr) {
  return this_ptr->rubberBandSelectionMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setRubberBandSelectionMode(QGraphicsView * this_ptr, Qt::ItemSelectionMode mode) {
  this_ptr->setRubberBandSelectionMode(mode);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QGraphicsView_rubberBandRect(QGraphicsView const * this_ptr) {
  return new QRect(this_ptr->rubberBandRect());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsView_cacheMode(QGraphicsView const * this_ptr) {
  return int(this_ptr->cacheMode());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setCacheMode(QGraphicsView * this_ptr, int mode) {
  this_ptr->setCacheMode(QFlags< QGraphicsView::CacheModeFlag >(mode));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_resetCachedContent(QGraphicsView * this_ptr) {
  this_ptr->resetCachedContent();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsView_isInteractive(QGraphicsView const * this_ptr) {
  return this_ptr->isInteractive();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setInteractive(QGraphicsView * this_ptr, bool allowed) {
  this_ptr->setInteractive(allowed);
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsView_scene(QGraphicsView const * this_ptr) {
  return this_ptr->scene();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setScene(QGraphicsView * this_ptr, QGraphicsScene * scene) {
  this_ptr->setScene(scene);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QGraphicsView_sceneRect(QGraphicsView const * this_ptr) {
  return new QRectF(this_ptr->sceneRect());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setSceneRect(QGraphicsView * this_ptr, QRectF const * rect) {
  this_ptr->setSceneRect(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setSceneRect1(QGraphicsView * this_ptr, double x, double y, double w, double h) {
  this_ptr->setSceneRect(x, y, w, h);
}


RITUAL_EXPORT QMatrix * ctr_qt_widgets_ffi_QGraphicsView_matrix(QGraphicsView const * this_ptr) {
  return new QMatrix(this_ptr->matrix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setMatrix(QGraphicsView * this_ptr, QMatrix const * matrix, bool combine) {
  this_ptr->setMatrix(*matrix, combine);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_resetMatrix(QGraphicsView * this_ptr) {
  this_ptr->resetMatrix();
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsView_transform(QGraphicsView const * this_ptr) {
  return new QTransform(this_ptr->transform());
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsView_viewportTransform(QGraphicsView const * this_ptr) {
  return new QTransform(this_ptr->viewportTransform());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsView_isTransformed(QGraphicsView const * this_ptr) {
  return this_ptr->isTransformed();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setTransform(QGraphicsView * this_ptr, QTransform const * matrix, bool combine) {
  this_ptr->setTransform(*matrix, combine);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_resetTransform(QGraphicsView * this_ptr) {
  this_ptr->resetTransform();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_rotate(QGraphicsView * this_ptr, double angle) {
  this_ptr->rotate(angle);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_scale(QGraphicsView * this_ptr, double sx, double sy) {
  this_ptr->scale(sx, sy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_shear(QGraphicsView * this_ptr, double sh, double sv) {
  this_ptr->shear(sh, sv);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_translate(QGraphicsView * this_ptr, double dx, double dy) {
  this_ptr->translate(dx, dy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_centerOn(QGraphicsView * this_ptr, QPointF const * pos) {
  this_ptr->centerOn(*pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_centerOn1(QGraphicsView * this_ptr, double x, double y) {
  this_ptr->centerOn(x, y);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_centerOn2(QGraphicsView * this_ptr, QGraphicsItem const * item) {
  this_ptr->centerOn(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible(QGraphicsView * this_ptr, QRectF const * rect, int xmargin, int ymargin) {
  this_ptr->ensureVisible(*rect, xmargin, ymargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible1(QGraphicsView * this_ptr, double x, double y, double w, double h, int xmargin, int ymargin) {
  this_ptr->ensureVisible(x, y, w, h, xmargin, ymargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible2(QGraphicsView * this_ptr, QGraphicsItem const * item, int xmargin, int ymargin) {
  this_ptr->ensureVisible(item, xmargin, ymargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_fitInView(QGraphicsView * this_ptr, QRectF const * rect, Qt::AspectRatioMode aspectRadioMode) {
  this_ptr->fitInView(*rect, aspectRadioMode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_fitInView1(QGraphicsView * this_ptr, double x, double y, double w, double h, Qt::AspectRatioMode aspectRadioMode) {
  this_ptr->fitInView(x, y, w, h, aspectRadioMode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_fitInView2(QGraphicsView * this_ptr, QGraphicsItem const * item, Qt::AspectRatioMode aspectRadioMode) {
  this_ptr->fitInView(item, aspectRadioMode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_render(QGraphicsView * this_ptr, QPainter * painter, QRectF const * target, QRect const * source, Qt::AspectRatioMode aspectRatioMode) {
  this_ptr->render(painter, *target, *source, aspectRatioMode);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items(QGraphicsView const * this_ptr) {
  return new QList< QGraphicsItem * >(this_ptr->items());
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items1(QGraphicsView const * this_ptr, QPoint const * pos) {
  return new QList< QGraphicsItem * >(this_ptr->items(*pos));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items2(QGraphicsView const * this_ptr, int x, int y) {
  return new QList< QGraphicsItem * >(this_ptr->items(x, y));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items3(QGraphicsView const * this_ptr, QRect const * rect, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(*rect, mode));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items4(QGraphicsView const * this_ptr, int x, int y, int w, int h, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(x, y, w, h, mode));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items5(QGraphicsView const * this_ptr, QPolygon const * polygon, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(*polygon, mode));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items6(QGraphicsView const * this_ptr, QPainterPath const * path, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(*path, mode));
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsView_itemAt(QGraphicsView const * this_ptr, QPoint const * pos) {
  return this_ptr->itemAt(*pos);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QGraphicsView_itemAt1(QGraphicsView const * this_ptr, int x, int y) {
  return this_ptr->itemAt(x, y);
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsView_mapToScene(QGraphicsView const * this_ptr, QPoint const * point) {
  return new QPointF(this_ptr->mapToScene(*point));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsView_mapToScene1(QGraphicsView const * this_ptr, QRect const * rect) {
  return new QPolygonF(this_ptr->mapToScene(*rect));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsView_mapToScene2(QGraphicsView const * this_ptr, QPolygon const * polygon) {
  return new QPolygonF(this_ptr->mapToScene(*polygon));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsView_mapToScene3(QGraphicsView const * this_ptr, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapToScene(*path));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsView_mapFromScene(QGraphicsView const * this_ptr, QPointF const * point) {
  return new QPoint(this_ptr->mapFromScene(*point));
}


RITUAL_EXPORT QPolygon * ctr_qt_widgets_ffi_QGraphicsView_mapFromScene1(QGraphicsView const * this_ptr, QRectF const * rect) {
  return new QPolygon(this_ptr->mapFromScene(*rect));
}


RITUAL_EXPORT QPolygon * ctr_qt_widgets_ffi_QGraphicsView_mapFromScene2(QGraphicsView const * this_ptr, QPolygonF const * polygon) {
  return new QPolygon(this_ptr->mapFromScene(*polygon));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QGraphicsView_mapFromScene3(QGraphicsView const * this_ptr, QPainterPath const * path) {
  return new QPainterPath(this_ptr->mapFromScene(*path));
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QGraphicsView_mapToScene4(QGraphicsView const * this_ptr, int x, int y) {
  return new QPointF(this_ptr->mapToScene(x, y));
}


RITUAL_EXPORT QPolygonF * ctr_qt_widgets_ffi_QGraphicsView_mapToScene5(QGraphicsView const * this_ptr, int x, int y, int w, int h) {
  return new QPolygonF(this_ptr->mapToScene(x, y, w, h));
}


RITUAL_EXPORT QPoint * ctr_qt_widgets_ffi_QGraphicsView_mapFromScene4(QGraphicsView const * this_ptr, double x, double y) {
  return new QPoint(this_ptr->mapFromScene(x, y));
}


RITUAL_EXPORT QPolygon * ctr_qt_widgets_ffi_QGraphicsView_mapFromScene5(QGraphicsView const * this_ptr, double x, double y, double w, double h) {
  return new QPolygon(this_ptr->mapFromScene(x, y, w, h));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QGraphicsView_inputMethodQuery(QGraphicsView const * this_ptr, Qt::InputMethodQuery query) {
  return new QVariant(this_ptr->inputMethodQuery(query));
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QGraphicsView_backgroundBrush(QGraphicsView const * this_ptr) {
  return new QBrush(this_ptr->backgroundBrush());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setBackgroundBrush(QGraphicsView * this_ptr, QBrush const * brush) {
  this_ptr->setBackgroundBrush(*brush);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QGraphicsView_foregroundBrush(QGraphicsView const * this_ptr) {
  return new QBrush(this_ptr->foregroundBrush());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setForegroundBrush(QGraphicsView * this_ptr, QBrush const * brush) {
  this_ptr->setForegroundBrush(*brush);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_updateScene(QGraphicsView * this_ptr, QList< QRectF > const * rects) {
  this_ptr->updateScene(*rects);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_invalidateScene(QGraphicsView * this_ptr, QRectF const * rect, int layers) {
  this_ptr->invalidateScene(*rect, QFlags< QGraphicsScene::SceneLayer >(layers));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_updateSceneRect(QGraphicsView * this_ptr, QRectF const * rect) {
  this_ptr->updateSceneRect(*rect);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QGroupBox_metaObject(QGroupBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QGroupBox_qt_metacast(QGroupBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGroupBox_qt_metacall(QGroupBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGroupBox_tr(char const * s, char const * c, int n) {
  return new QString(QGroupBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGroupBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QGroupBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_QGroupBox_QGroupBox(QWidget * parent) {
  return new QGroupBox(parent);
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_QGroupBox_QGroupBox1(QString const * title, QWidget * parent) {
  return new QGroupBox(*title, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGroupBox_dQGroupBox(QGroupBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QGroupBox_title(QGroupBox const * this_ptr) {
  return new QString(this_ptr->title());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGroupBox_setTitle(QGroupBox * this_ptr, QString const * title) {
  this_ptr->setTitle(*title);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGroupBox_alignment(QGroupBox const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGroupBox_setAlignment(QGroupBox * this_ptr, int alignment) {
  this_ptr->setAlignment(alignment);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QGroupBox_minimumSizeHint(QGroupBox const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGroupBox_isFlat(QGroupBox const * this_ptr) {
  return this_ptr->isFlat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGroupBox_setFlat(QGroupBox * this_ptr, bool flat) {
  this_ptr->setFlat(flat);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGroupBox_isCheckable(QGroupBox const * this_ptr) {
  return this_ptr->isCheckable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGroupBox_setCheckable(QGroupBox * this_ptr, bool checkable) {
  this_ptr->setCheckable(checkable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGroupBox_isChecked(QGroupBox const * this_ptr) {
  return this_ptr->isChecked();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGroupBox_setChecked(QGroupBox * this_ptr, bool checked) {
  this_ptr->setChecked(checked);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QHeaderView_metaObject(QHeaderView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QHeaderView_qt_metacast(QHeaderView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_qt_metacall(QHeaderView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QHeaderView_tr(char const * s, char const * c, int n) {
  return new QString(QHeaderView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QHeaderView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QHeaderView::trUtf8(s, c, n));
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_QHeaderView_QHeaderView(Qt::Orientation orientation, QWidget * parent) {
  return new QHeaderView(orientation, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_dQHeaderView(QHeaderView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setModel(QHeaderView * this_ptr, QAbstractItemModel * model) {
  this_ptr->setModel(model);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QHeaderView_orientation(QHeaderView const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_offset(QHeaderView const * this_ptr) {
  return this_ptr->offset();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_length(QHeaderView const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QHeaderView_sizeHint(QHeaderView const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setVisible(QHeaderView * this_ptr, bool v) {
  this_ptr->setVisible(v);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_sectionSizeHint(QHeaderView const * this_ptr, int logicalIndex) {
  return this_ptr->sectionSizeHint(logicalIndex);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_visualIndexAt(QHeaderView const * this_ptr, int position) {
  return this_ptr->visualIndexAt(position);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_logicalIndexAt(QHeaderView const * this_ptr, int position) {
  return this_ptr->logicalIndexAt(position);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_logicalIndexAt1(QHeaderView const * this_ptr, int x, int y) {
  return this_ptr->logicalIndexAt(x, y);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_logicalIndexAt2(QHeaderView const * this_ptr, QPoint const * pos) {
  return this_ptr->logicalIndexAt(*pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_sectionSize(QHeaderView const * this_ptr, int logicalIndex) {
  return this_ptr->sectionSize(logicalIndex);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_sectionPosition(QHeaderView const * this_ptr, int logicalIndex) {
  return this_ptr->sectionPosition(logicalIndex);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_sectionViewportPosition(QHeaderView const * this_ptr, int logicalIndex) {
  return this_ptr->sectionViewportPosition(logicalIndex);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_moveSection(QHeaderView * this_ptr, int from, int to) {
  this_ptr->moveSection(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_swapSections(QHeaderView * this_ptr, int first, int second) {
  this_ptr->swapSections(first, second);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_resizeSection(QHeaderView * this_ptr, int logicalIndex, int size) {
  this_ptr->resizeSection(logicalIndex, size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_resizeSections(QHeaderView * this_ptr, QHeaderView::ResizeMode mode) {
  this_ptr->resizeSections(mode);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_isSectionHidden(QHeaderView const * this_ptr, int logicalIndex) {
  return this_ptr->isSectionHidden(logicalIndex);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setSectionHidden(QHeaderView * this_ptr, int logicalIndex, bool hide) {
  this_ptr->setSectionHidden(logicalIndex, hide);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_hiddenSectionCount(QHeaderView const * this_ptr) {
  return this_ptr->hiddenSectionCount();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_hideSection(QHeaderView * this_ptr, int logicalIndex) {
  this_ptr->hideSection(logicalIndex);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_showSection(QHeaderView * this_ptr, int logicalIndex) {
  this_ptr->showSection(logicalIndex);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_count(QHeaderView const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_visualIndex(QHeaderView const * this_ptr, int logicalIndex) {
  return this_ptr->visualIndex(logicalIndex);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_logicalIndex(QHeaderView const * this_ptr, int visualIndex) {
  return this_ptr->logicalIndex(visualIndex);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setSectionsMovable(QHeaderView * this_ptr, bool movable) {
  this_ptr->setSectionsMovable(movable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_sectionsMovable(QHeaderView const * this_ptr) {
  return this_ptr->sectionsMovable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setFirstSectionMovable(QHeaderView * this_ptr, bool movable) {
  this_ptr->setFirstSectionMovable(movable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_isFirstSectionMovable(QHeaderView const * this_ptr) {
  return this_ptr->isFirstSectionMovable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setSectionsClickable(QHeaderView * this_ptr, bool clickable) {
  this_ptr->setSectionsClickable(clickable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_sectionsClickable(QHeaderView const * this_ptr) {
  return this_ptr->sectionsClickable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setHighlightSections(QHeaderView * this_ptr, bool highlight) {
  this_ptr->setHighlightSections(highlight);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_highlightSections(QHeaderView const * this_ptr) {
  return this_ptr->highlightSections();
}


RITUAL_EXPORT QHeaderView::ResizeMode ctr_qt_widgets_ffi_QHeaderView_sectionResizeMode(QHeaderView const * this_ptr, int logicalIndex) {
  return this_ptr->sectionResizeMode(logicalIndex);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setSectionResizeMode(QHeaderView * this_ptr, QHeaderView::ResizeMode mode) {
  this_ptr->setSectionResizeMode(mode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setSectionResizeMode1(QHeaderView * this_ptr, int logicalIndex, QHeaderView::ResizeMode mode) {
  this_ptr->setSectionResizeMode(logicalIndex, mode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setResizeContentsPrecision(QHeaderView * this_ptr, int precision) {
  this_ptr->setResizeContentsPrecision(precision);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_resizeContentsPrecision(QHeaderView const * this_ptr) {
  return this_ptr->resizeContentsPrecision();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_stretchSectionCount(QHeaderView const * this_ptr) {
  return this_ptr->stretchSectionCount();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setSortIndicatorShown(QHeaderView * this_ptr, bool show) {
  this_ptr->setSortIndicatorShown(show);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_isSortIndicatorShown(QHeaderView const * this_ptr) {
  return this_ptr->isSortIndicatorShown();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setSortIndicator(QHeaderView * this_ptr, int logicalIndex, Qt::SortOrder order) {
  this_ptr->setSortIndicator(logicalIndex, order);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_sortIndicatorSection(QHeaderView const * this_ptr) {
  return this_ptr->sortIndicatorSection();
}


RITUAL_EXPORT Qt::SortOrder ctr_qt_widgets_ffi_QHeaderView_sortIndicatorOrder(QHeaderView const * this_ptr) {
  return this_ptr->sortIndicatorOrder();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_stretchLastSection(QHeaderView const * this_ptr) {
  return this_ptr->stretchLastSection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setStretchLastSection(QHeaderView * this_ptr, bool stretch) {
  this_ptr->setStretchLastSection(stretch);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_cascadingSectionResizes(QHeaderView const * this_ptr) {
  return this_ptr->cascadingSectionResizes();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setCascadingSectionResizes(QHeaderView * this_ptr, bool enable) {
  this_ptr->setCascadingSectionResizes(enable);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_defaultSectionSize(QHeaderView const * this_ptr) {
  return this_ptr->defaultSectionSize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setDefaultSectionSize(QHeaderView * this_ptr, int size) {
  this_ptr->setDefaultSectionSize(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_resetDefaultSectionSize(QHeaderView * this_ptr) {
  this_ptr->resetDefaultSectionSize();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_minimumSectionSize(QHeaderView const * this_ptr) {
  return this_ptr->minimumSectionSize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setMinimumSectionSize(QHeaderView * this_ptr, int size) {
  this_ptr->setMinimumSectionSize(size);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_maximumSectionSize(QHeaderView const * this_ptr) {
  return this_ptr->maximumSectionSize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setMaximumSectionSize(QHeaderView * this_ptr, int size) {
  this_ptr->setMaximumSectionSize(size);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHeaderView_defaultAlignment(QHeaderView const * this_ptr) {
  return int(this_ptr->defaultAlignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setDefaultAlignment(QHeaderView * this_ptr, int alignment) {
  this_ptr->setDefaultAlignment(QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_doItemsLayout(QHeaderView * this_ptr) {
  this_ptr->doItemsLayout();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_sectionsMoved(QHeaderView const * this_ptr) {
  return this_ptr->sectionsMoved();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_sectionsHidden(QHeaderView const * this_ptr) {
  return this_ptr->sectionsHidden();
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QHeaderView_saveState(QHeaderView const * this_ptr) {
  return new QByteArray(this_ptr->saveState());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHeaderView_restoreState(QHeaderView * this_ptr, QByteArray const * state) {
  return this_ptr->restoreState(*state);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_reset(QHeaderView * this_ptr) {
  this_ptr->reset();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setOffset(QHeaderView * this_ptr, int offset) {
  this_ptr->setOffset(offset);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setOffsetToSectionPosition(QHeaderView * this_ptr, int visualIndex) {
  this_ptr->setOffsetToSectionPosition(visualIndex);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_setOffsetToLastSection(QHeaderView * this_ptr) {
  this_ptr->setOffsetToLastSection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHeaderView_headerDataChanged(QHeaderView * this_ptr, Qt::Orientation orientation, int logicalFirst, int logicalLast) {
  this_ptr->headerDataChanged(orientation, logicalFirst, logicalLast);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLineEdit_metaObject(QLineEdit const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QLineEdit_qt_metacast(QLineEdit * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_qt_metacall(QLineEdit * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLineEdit_tr(char const * s, char const * c, int n) {
  return new QString(QLineEdit::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLineEdit_trUtf8(char const * s, char const * c, int n) {
  return new QString(QLineEdit::trUtf8(s, c, n));
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_QLineEdit_QLineEdit(QWidget * parent) {
  return new QLineEdit(parent);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_QLineEdit_QLineEdit1(QString const * arg1, QWidget * parent) {
  return new QLineEdit(*arg1, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_dQLineEdit(QLineEdit * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLineEdit_text(QLineEdit const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLineEdit_displayText(QLineEdit const * this_ptr) {
  return new QString(this_ptr->displayText());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLineEdit_placeholderText(QLineEdit const * this_ptr) {
  return new QString(this_ptr->placeholderText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setPlaceholderText(QLineEdit * this_ptr, QString const * arg1) {
  this_ptr->setPlaceholderText(*arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_maxLength(QLineEdit const * this_ptr) {
  return this_ptr->maxLength();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setMaxLength(QLineEdit * this_ptr, int arg1) {
  this_ptr->setMaxLength(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setFrame(QLineEdit * this_ptr, bool arg1) {
  this_ptr->setFrame(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_hasFrame(QLineEdit const * this_ptr) {
  return this_ptr->hasFrame();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setClearButtonEnabled(QLineEdit * this_ptr, bool enable) {
  this_ptr->setClearButtonEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_isClearButtonEnabled(QLineEdit const * this_ptr) {
  return this_ptr->isClearButtonEnabled();
}


RITUAL_EXPORT QLineEdit::EchoMode ctr_qt_widgets_ffi_QLineEdit_echoMode(QLineEdit const * this_ptr) {
  return this_ptr->echoMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setEchoMode(QLineEdit * this_ptr, QLineEdit::EchoMode arg1) {
  this_ptr->setEchoMode(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_isReadOnly(QLineEdit const * this_ptr) {
  return this_ptr->isReadOnly();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setReadOnly(QLineEdit * this_ptr, bool arg1) {
  this_ptr->setReadOnly(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setValidator(QLineEdit * this_ptr, QValidator const * arg1) {
  this_ptr->setValidator(arg1);
}


RITUAL_EXPORT QValidator const * ctr_qt_widgets_ffi_QLineEdit_validator(QLineEdit const * this_ptr) {
  return this_ptr->validator();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setCompleter(QLineEdit * this_ptr, QCompleter * completer) {
  this_ptr->setCompleter(completer);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QLineEdit_completer(QLineEdit const * this_ptr) {
  return this_ptr->completer();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLineEdit_sizeHint(QLineEdit const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLineEdit_minimumSizeHint(QLineEdit const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_cursorPosition(QLineEdit const * this_ptr) {
  return this_ptr->cursorPosition();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setCursorPosition(QLineEdit * this_ptr, int arg1) {
  this_ptr->setCursorPosition(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_cursorPositionAt(QLineEdit * this_ptr, QPoint const * pos) {
  return this_ptr->cursorPositionAt(*pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setAlignment(QLineEdit * this_ptr, int flag) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(flag));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_alignment(QLineEdit const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_cursorForward(QLineEdit * this_ptr, bool mark, int steps) {
  this_ptr->cursorForward(mark, steps);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_cursorBackward(QLineEdit * this_ptr, bool mark, int steps) {
  this_ptr->cursorBackward(mark, steps);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_cursorWordForward(QLineEdit * this_ptr, bool mark) {
  this_ptr->cursorWordForward(mark);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_cursorWordBackward(QLineEdit * this_ptr, bool mark) {
  this_ptr->cursorWordBackward(mark);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_backspace(QLineEdit * this_ptr) {
  this_ptr->backspace();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_del(QLineEdit * this_ptr) {
  this_ptr->del();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_home(QLineEdit * this_ptr, bool mark) {
  this_ptr->home(mark);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_end(QLineEdit * this_ptr, bool mark) {
  this_ptr->end(mark);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_isModified(QLineEdit const * this_ptr) {
  return this_ptr->isModified();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setModified(QLineEdit * this_ptr, bool arg1) {
  this_ptr->setModified(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setSelection(QLineEdit * this_ptr, int arg1, int arg2) {
  this_ptr->setSelection(arg1, arg2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_hasSelectedText(QLineEdit const * this_ptr) {
  return this_ptr->hasSelectedText();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLineEdit_selectedText(QLineEdit const * this_ptr) {
  return new QString(this_ptr->selectedText());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_selectionStart(QLineEdit const * this_ptr) {
  return this_ptr->selectionStart();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_selectionEnd(QLineEdit const * this_ptr) {
  return this_ptr->selectionEnd();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLineEdit_selectionLength(QLineEdit const * this_ptr) {
  return this_ptr->selectionLength();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_isUndoAvailable(QLineEdit const * this_ptr) {
  return this_ptr->isUndoAvailable();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_isRedoAvailable(QLineEdit const * this_ptr) {
  return this_ptr->isRedoAvailable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setDragEnabled(QLineEdit * this_ptr, bool b) {
  this_ptr->setDragEnabled(b);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_dragEnabled(QLineEdit const * this_ptr) {
  return this_ptr->dragEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setCursorMoveStyle(QLineEdit * this_ptr, Qt::CursorMoveStyle style) {
  this_ptr->setCursorMoveStyle(style);
}


RITUAL_EXPORT Qt::CursorMoveStyle ctr_qt_widgets_ffi_QLineEdit_cursorMoveStyle(QLineEdit const * this_ptr) {
  return this_ptr->cursorMoveStyle();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLineEdit_inputMask(QLineEdit const * this_ptr) {
  return new QString(this_ptr->inputMask());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setInputMask(QLineEdit * this_ptr, QString const * inputMask) {
  this_ptr->setInputMask(*inputMask);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_hasAcceptableInput(QLineEdit const * this_ptr) {
  return this_ptr->hasAcceptableInput();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setTextMargins(QLineEdit * this_ptr, int left, int top, int right, int bottom) {
  this_ptr->setTextMargins(left, top, right, bottom);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setTextMargins1(QLineEdit * this_ptr, QMargins const * margins) {
  this_ptr->setTextMargins(*margins);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_getTextMargins(QLineEdit const * this_ptr, int * left, int * top, int * right, int * bottom) {
  this_ptr->getTextMargins(left, top, right, bottom);
}


RITUAL_EXPORT QMargins * ctr_qt_widgets_ffi_QLineEdit_textMargins(QLineEdit const * this_ptr) {
  return new QMargins(this_ptr->textMargins());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_addAction(QLineEdit * this_ptr, QAction * action, QLineEdit::ActionPosition position) {
  this_ptr->addAction(action, position);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QLineEdit_addAction1(QLineEdit * this_ptr, QIcon const * icon, QLineEdit::ActionPosition position) {
  return this_ptr->addAction(*icon, position);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_setText(QLineEdit * this_ptr, QString const * arg1) {
  this_ptr->setText(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_clear(QLineEdit * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_selectAll(QLineEdit * this_ptr) {
  this_ptr->selectAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_undo(QLineEdit * this_ptr) {
  this_ptr->undo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_redo(QLineEdit * this_ptr) {
  this_ptr->redo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_cut(QLineEdit * this_ptr) {
  this_ptr->cut();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_copy(QLineEdit const * this_ptr) {
  this_ptr->copy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_paste(QLineEdit * this_ptr) {
  this_ptr->paste();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_deselect(QLineEdit * this_ptr) {
  this_ptr->deselect();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_insert(QLineEdit * this_ptr, QString const * arg1) {
  this_ptr->insert(*arg1);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QLineEdit_createStandardContextMenu(QLineEdit * this_ptr) {
  return this_ptr->createStandardContextMenu();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QLineEdit_inputMethodQuery(QLineEdit const * this_ptr, Qt::InputMethodQuery arg1) {
  return new QVariant(this_ptr->inputMethodQuery(arg1));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QLineEdit_inputMethodQuery1(QLineEdit const * this_ptr, Qt::InputMethodQuery property, QVariant const * argument) {
  return new QVariant(this_ptr->inputMethodQuery(property, *argument));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLineEdit_event(QLineEdit * this_ptr, QEvent * arg1) {
  return this_ptr->event(arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QInputDialog_metaObject(QInputDialog const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QInputDialog_qt_metacast(QInputDialog * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_qt_metacall(QInputDialog * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_tr(char const * s, char const * c, int n) {
  return new QString(QInputDialog::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_trUtf8(char const * s, char const * c, int n) {
  return new QString(QInputDialog::trUtf8(s, c, n));
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_QInputDialog_QInputDialog(QWidget * parent, int flags) {
  return new QInputDialog(parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_dQInputDialog(QInputDialog * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setInputMode(QInputDialog * this_ptr, QInputDialog::InputMode mode) {
  this_ptr->setInputMode(mode);
}


RITUAL_EXPORT QInputDialog::InputMode ctr_qt_widgets_ffi_QInputDialog_inputMode(QInputDialog const * this_ptr) {
  return this_ptr->inputMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setLabelText(QInputDialog * this_ptr, QString const * text) {
  this_ptr->setLabelText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_labelText(QInputDialog const * this_ptr) {
  return new QString(this_ptr->labelText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setOption(QInputDialog * this_ptr, QInputDialog::InputDialogOption option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QInputDialog_testOption(QInputDialog const * this_ptr, QInputDialog::InputDialogOption option) {
  return this_ptr->testOption(option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setOptions(QInputDialog * this_ptr, int options) {
  this_ptr->setOptions(QFlags< QInputDialog::InputDialogOption >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_options(QInputDialog const * this_ptr) {
  return int(this_ptr->options());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setTextValue(QInputDialog * this_ptr, QString const * text) {
  this_ptr->setTextValue(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_textValue(QInputDialog const * this_ptr) {
  return new QString(this_ptr->textValue());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setTextEchoMode(QInputDialog * this_ptr, QLineEdit::EchoMode mode) {
  this_ptr->setTextEchoMode(mode);
}


RITUAL_EXPORT QLineEdit::EchoMode ctr_qt_widgets_ffi_QInputDialog_textEchoMode(QInputDialog const * this_ptr) {
  return this_ptr->textEchoMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setComboBoxEditable(QInputDialog * this_ptr, bool editable) {
  this_ptr->setComboBoxEditable(editable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QInputDialog_isComboBoxEditable(QInputDialog const * this_ptr) {
  return this_ptr->isComboBoxEditable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setComboBoxItems(QInputDialog * this_ptr, QStringList const * items) {
  this_ptr->setComboBoxItems(*items);
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QInputDialog_comboBoxItems(QInputDialog const * this_ptr) {
  return new QStringList(this_ptr->comboBoxItems());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setIntValue(QInputDialog * this_ptr, int value) {
  this_ptr->setIntValue(value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_intValue(QInputDialog const * this_ptr) {
  return this_ptr->intValue();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setIntMinimum(QInputDialog * this_ptr, int min) {
  this_ptr->setIntMinimum(min);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_intMinimum(QInputDialog const * this_ptr) {
  return this_ptr->intMinimum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setIntMaximum(QInputDialog * this_ptr, int max) {
  this_ptr->setIntMaximum(max);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_intMaximum(QInputDialog const * this_ptr) {
  return this_ptr->intMaximum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setIntRange(QInputDialog * this_ptr, int min, int max) {
  this_ptr->setIntRange(min, max);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setIntStep(QInputDialog * this_ptr, int step) {
  this_ptr->setIntStep(step);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_intStep(QInputDialog const * this_ptr) {
  return this_ptr->intStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setDoubleValue(QInputDialog * this_ptr, double value) {
  this_ptr->setDoubleValue(value);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_doubleValue(QInputDialog const * this_ptr) {
  return this_ptr->doubleValue();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setDoubleMinimum(QInputDialog * this_ptr, double min) {
  this_ptr->setDoubleMinimum(min);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_doubleMinimum(QInputDialog const * this_ptr) {
  return this_ptr->doubleMinimum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setDoubleMaximum(QInputDialog * this_ptr, double max) {
  this_ptr->setDoubleMaximum(max);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_doubleMaximum(QInputDialog const * this_ptr) {
  return this_ptr->doubleMaximum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setDoubleRange(QInputDialog * this_ptr, double min, double max) {
  this_ptr->setDoubleRange(min, max);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setDoubleDecimals(QInputDialog * this_ptr, int decimals) {
  this_ptr->setDoubleDecimals(decimals);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_doubleDecimals(QInputDialog const * this_ptr) {
  return this_ptr->doubleDecimals();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setOkButtonText(QInputDialog * this_ptr, QString const * text) {
  this_ptr->setOkButtonText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_okButtonText(QInputDialog const * this_ptr) {
  return new QString(this_ptr->okButtonText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setCancelButtonText(QInputDialog * this_ptr, QString const * text) {
  this_ptr->setCancelButtonText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_cancelButtonText(QInputDialog const * this_ptr) {
  return new QString(this_ptr->cancelButtonText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_open(QInputDialog * this_ptr, QObject * receiver, char const * member) {
  this_ptr->open(receiver, member);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QInputDialog_minimumSizeHint(QInputDialog const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QInputDialog_sizeHint(QInputDialog const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setVisible(QInputDialog * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getText(QWidget * parent, QString const * title, QString const * label, QLineEdit::EchoMode echo, QString const * text, bool * ok, int flags, int inputMethodHints) {
  return new QString(QInputDialog::getText(parent, *title, *label, echo, *text, ok, QFlags< Qt::WindowType >(flags), QFlags< Qt::InputMethodHint >(inputMethodHints)));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getMultiLineText(QWidget * parent, QString const * title, QString const * label, QString const * text, bool * ok, int flags, int inputMethodHints) {
  return new QString(QInputDialog::getMultiLineText(parent, *title, *label, *text, ok, QFlags< Qt::WindowType >(flags), QFlags< Qt::InputMethodHint >(inputMethodHints)));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getItem(QWidget * parent, QString const * title, QString const * label, QStringList const * items, int current, bool editable, bool * ok, int flags, int inputMethodHints) {
  return new QString(QInputDialog::getItem(parent, *title, *label, *items, current, editable, ok, QFlags< Qt::WindowType >(flags), QFlags< Qt::InputMethodHint >(inputMethodHints)));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_getInt(QWidget * parent, QString const * title, QString const * label, int value, int minValue, int maxValue, int step, bool * ok, int flags) {
  return QInputDialog::getInt(parent, *title, *label, value, minValue, maxValue, step, ok, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble(QWidget * parent, QString const * title, QString const * label, double value, double minValue, double maxValue, int decimals, bool * ok, int flags) {
  return QInputDialog::getDouble(parent, *title, *label, value, minValue, maxValue, decimals, ok, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble1(QWidget * parent, QString const * title, QString const * label, double value, double minValue, double maxValue, int decimals, bool * ok, int flags, double step) {
  return QInputDialog::getDouble(parent, *title, *label, value, minValue, maxValue, decimals, ok, QFlags< Qt::WindowType >(flags), step);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setDoubleStep(QInputDialog * this_ptr, double step) {
  this_ptr->setDoubleStep(step);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_doubleStep(QInputDialog const * this_ptr) {
  return this_ptr->doubleStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_done(QInputDialog * this_ptr, int result) {
  this_ptr->done(result);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QItemDelegate_metaObject(QItemDelegate const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QItemDelegate_qt_metacast(QItemDelegate * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QItemDelegate_qt_metacall(QItemDelegate * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QItemDelegate_tr(char const * s, char const * c, int n) {
  return new QString(QItemDelegate::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QItemDelegate_trUtf8(char const * s, char const * c, int n) {
  return new QString(QItemDelegate::trUtf8(s, c, n));
}


RITUAL_EXPORT QItemDelegate * ctr_qt_widgets_ffi_QItemDelegate_QItemDelegate(QObject * parent) {
  return new QItemDelegate(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemDelegate_dQItemDelegate(QItemDelegate * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QItemDelegate_hasClipping(QItemDelegate const * this_ptr) {
  return this_ptr->hasClipping();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemDelegate_setClipping(QItemDelegate * this_ptr, bool clip) {
  this_ptr->setClipping(clip);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemDelegate_paint(QItemDelegate const * this_ptr, QPainter * painter, QStyleOptionViewItem const * option, QModelIndex const * index) {
  this_ptr->paint(painter, *option, *index);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QItemDelegate_sizeHint(QItemDelegate const * this_ptr, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return new QSize(this_ptr->sizeHint(*option, *index));
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QItemDelegate_createEditor(QItemDelegate const * this_ptr, QWidget * parent, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return this_ptr->createEditor(parent, *option, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemDelegate_setEditorData(QItemDelegate const * this_ptr, QWidget * editor, QModelIndex const * index) {
  this_ptr->setEditorData(editor, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemDelegate_setModelData(QItemDelegate const * this_ptr, QWidget * editor, QAbstractItemModel * model, QModelIndex const * index) {
  this_ptr->setModelData(editor, model, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemDelegate_updateEditorGeometry(QItemDelegate const * this_ptr, QWidget * editor, QStyleOptionViewItem const * option, QModelIndex const * index) {
  this_ptr->updateEditorGeometry(editor, *option, *index);
}


RITUAL_EXPORT QItemEditorFactory * ctr_qt_widgets_ffi_QItemDelegate_itemEditorFactory(QItemDelegate const * this_ptr) {
  return this_ptr->itemEditorFactory();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemDelegate_setItemEditorFactory(QItemDelegate * this_ptr, QItemEditorFactory * factory) {
  this_ptr->setItemEditorFactory(factory);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemEditorCreatorBase_dQItemEditorCreatorBase(QItemEditorCreatorBase * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QItemEditorCreatorBase_createWidget(QItemEditorCreatorBase const * this_ptr, QWidget * parent) {
  return this_ptr->createWidget(parent);
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QItemEditorCreatorBase_valuePropertyName(QItemEditorCreatorBase const * this_ptr) {
  return new QByteArray(this_ptr->valuePropertyName());
}


RITUAL_EXPORT QItemEditorFactory * ctr_qt_widgets_ffi_QItemEditorFactory_QItemEditorFactory() {
  return new QItemEditorFactory();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemEditorFactory_dQItemEditorFactory(QItemEditorFactory * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QItemEditorFactory_createEditor(QItemEditorFactory const * this_ptr, int userType, QWidget * parent) {
  return this_ptr->createEditor(userType, parent);
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QItemEditorFactory_valuePropertyName(QItemEditorFactory const * this_ptr, int userType) {
  return new QByteArray(this_ptr->valuePropertyName(userType));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemEditorFactory_registerEditor(QItemEditorFactory * this_ptr, int userType, QItemEditorCreatorBase * creator) {
  this_ptr->registerEditor(userType, creator);
}


RITUAL_EXPORT QItemEditorFactory const * ctr_qt_widgets_ffi_QItemEditorFactory_defaultFactory() {
  return QItemEditorFactory::defaultFactory();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QItemEditorFactory_setDefaultFactory(QItemEditorFactory * factory) {
  QItemEditorFactory::setDefaultFactory(factory);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QKeyEventTransition_metaObject(QKeyEventTransition const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QKeyEventTransition_qt_metacast(QKeyEventTransition * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QKeyEventTransition_qt_metacall(QKeyEventTransition * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QKeyEventTransition_tr(char const * s, char const * c, int n) {
  return new QString(QKeyEventTransition::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QKeyEventTransition_trUtf8(char const * s, char const * c, int n) {
  return new QString(QKeyEventTransition::trUtf8(s, c, n));
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_QKeyEventTransition_QKeyEventTransition(QState * sourceState) {
  return new QKeyEventTransition(sourceState);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_QKeyEventTransition_QKeyEventTransition1(QObject * object, QEvent::Type type, int key, QState * sourceState) {
  return new QKeyEventTransition(object, type, key, sourceState);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QKeyEventTransition_dQKeyEventTransition(QKeyEventTransition * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QKeyEventTransition_key(QKeyEventTransition const * this_ptr) {
  return this_ptr->key();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QKeyEventTransition_setKey(QKeyEventTransition * this_ptr, int key) {
  this_ptr->setKey(key);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QKeyEventTransition_modifierMask(QKeyEventTransition const * this_ptr) {
  return int(this_ptr->modifierMask());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QKeyEventTransition_setModifierMask(QKeyEventTransition * this_ptr, int modifiers) {
  this_ptr->setModifierMask(QFlags< Qt::KeyboardModifier >(modifiers));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QKeySequenceEdit_metaObject(QKeySequenceEdit const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QKeySequenceEdit_qt_metacast(QKeySequenceEdit * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QKeySequenceEdit_qt_metacall(QKeySequenceEdit * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QKeySequenceEdit_tr(char const * s, char const * c, int n) {
  return new QString(QKeySequenceEdit::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QKeySequenceEdit_trUtf8(char const * s, char const * c, int n) {
  return new QString(QKeySequenceEdit::trUtf8(s, c, n));
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_QKeySequenceEdit_QKeySequenceEdit(QWidget * parent) {
  return new QKeySequenceEdit(parent);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_QKeySequenceEdit_QKeySequenceEdit1(QKeySequence const * keySequence, QWidget * parent) {
  return new QKeySequenceEdit(*keySequence, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QKeySequenceEdit_dQKeySequenceEdit(QKeySequenceEdit * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QKeySequence * ctr_qt_widgets_ffi_QKeySequenceEdit_keySequence(QKeySequenceEdit const * this_ptr) {
  return new QKeySequence(this_ptr->keySequence());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QKeySequenceEdit_setKeySequence(QKeySequenceEdit * this_ptr, QKeySequence const * keySequence) {
  this_ptr->setKeySequence(*keySequence);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QKeySequenceEdit_clear(QKeySequenceEdit * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLabel_metaObject(QLabel const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QLabel_qt_metacast(QLabel * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLabel_qt_metacall(QLabel * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLabel_tr(char const * s, char const * c, int n) {
  return new QString(QLabel::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLabel_trUtf8(char const * s, char const * c, int n) {
  return new QString(QLabel::trUtf8(s, c, n));
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_QLabel_QLabel(QWidget * parent, int f) {
  return new QLabel(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_QLabel_QLabel1(QString const * text, QWidget * parent, int f) {
  return new QLabel(*text, parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_dQLabel(QLabel * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLabel_text(QLabel const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT QPixmap const * ctr_qt_widgets_ffi_QLabel_pixmap(QLabel const * this_ptr) {
  return this_ptr->pixmap();
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QLabel_pixmap1(QLabel const * this_ptr, Qt::ReturnByValueConstant arg1) {
  return new QPixmap(this_ptr->pixmap(arg1));
}


RITUAL_EXPORT QPicture const * ctr_qt_widgets_ffi_QLabel_picture(QLabel const * this_ptr) {
  return this_ptr->picture();
}


RITUAL_EXPORT QPicture * ctr_qt_widgets_ffi_QLabel_picture1(QLabel const * this_ptr, Qt::ReturnByValueConstant arg1) {
  return new QPicture(this_ptr->picture(arg1));
}


RITUAL_EXPORT QMovie * ctr_qt_widgets_ffi_QLabel_movie(QLabel const * this_ptr) {
  return this_ptr->movie();
}


RITUAL_EXPORT Qt::TextFormat ctr_qt_widgets_ffi_QLabel_textFormat(QLabel const * this_ptr) {
  return this_ptr->textFormat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setTextFormat(QLabel * this_ptr, Qt::TextFormat arg1) {
  this_ptr->setTextFormat(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLabel_alignment(QLabel const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setAlignment(QLabel * this_ptr, int arg1) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(arg1));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setWordWrap(QLabel * this_ptr, bool on) {
  this_ptr->setWordWrap(on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLabel_wordWrap(QLabel const * this_ptr) {
  return this_ptr->wordWrap();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLabel_indent(QLabel const * this_ptr) {
  return this_ptr->indent();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setIndent(QLabel * this_ptr, int arg1) {
  this_ptr->setIndent(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLabel_margin(QLabel const * this_ptr) {
  return this_ptr->margin();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setMargin(QLabel * this_ptr, int arg1) {
  this_ptr->setMargin(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLabel_hasScaledContents(QLabel const * this_ptr) {
  return this_ptr->hasScaledContents();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setScaledContents(QLabel * this_ptr, bool arg1) {
  this_ptr->setScaledContents(arg1);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLabel_sizeHint(QLabel const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLabel_minimumSizeHint(QLabel const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setBuddy(QLabel * this_ptr, QWidget * arg1) {
  this_ptr->setBuddy(arg1);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QLabel_buddy(QLabel const * this_ptr) {
  return this_ptr->buddy();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLabel_heightForWidth(QLabel const * this_ptr, int arg1) {
  return this_ptr->heightForWidth(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLabel_openExternalLinks(QLabel const * this_ptr) {
  return this_ptr->openExternalLinks();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setOpenExternalLinks(QLabel * this_ptr, bool open) {
  this_ptr->setOpenExternalLinks(open);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setTextInteractionFlags(QLabel * this_ptr, int flags) {
  this_ptr->setTextInteractionFlags(QFlags< Qt::TextInteractionFlag >(flags));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLabel_textInteractionFlags(QLabel const * this_ptr) {
  return int(this_ptr->textInteractionFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setSelection(QLabel * this_ptr, int arg1, int arg2) {
  this_ptr->setSelection(arg1, arg2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLabel_hasSelectedText(QLabel const * this_ptr) {
  return this_ptr->hasSelectedText();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLabel_selectedText(QLabel const * this_ptr) {
  return new QString(this_ptr->selectedText());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLabel_selectionStart(QLabel const * this_ptr) {
  return this_ptr->selectionStart();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setText(QLabel * this_ptr, QString const * arg1) {
  this_ptr->setText(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setPixmap(QLabel * this_ptr, QPixmap const * arg1) {
  this_ptr->setPixmap(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setPicture(QLabel * this_ptr, QPicture const * arg1) {
  this_ptr->setPicture(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setMovie(QLabel * this_ptr, QMovie * movie) {
  this_ptr->setMovie(movie);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setNum(QLabel * this_ptr, int arg1) {
  this_ptr->setNum(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_setNum1(QLabel * this_ptr, double arg1) {
  this_ptr->setNum(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLabel_clear(QLabel * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QLCDNumber_metaObject(QLCDNumber const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QLCDNumber_qt_metacast(QLCDNumber * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLCDNumber_qt_metacall(QLCDNumber * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLCDNumber_tr(char const * s, char const * c, int n) {
  return new QString(QLCDNumber::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QLCDNumber_trUtf8(char const * s, char const * c, int n) {
  return new QString(QLCDNumber::trUtf8(s, c, n));
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_QLCDNumber_QLCDNumber(QWidget * parent) {
  return new QLCDNumber(parent);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_QLCDNumber_QLCDNumber1(unsigned int numDigits, QWidget * parent) {
  return new QLCDNumber(numDigits, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_dQLCDNumber(QLCDNumber * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLCDNumber_smallDecimalPoint(QLCDNumber const * this_ptr) {
  return this_ptr->smallDecimalPoint();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLCDNumber_digitCount(QLCDNumber const * this_ptr) {
  return this_ptr->digitCount();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setDigitCount(QLCDNumber * this_ptr, int nDigits) {
  this_ptr->setDigitCount(nDigits);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLCDNumber_checkOverflow(QLCDNumber const * this_ptr, double num) {
  return this_ptr->checkOverflow(num);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QLCDNumber_checkOverflow1(QLCDNumber const * this_ptr, int num) {
  return this_ptr->checkOverflow(num);
}


RITUAL_EXPORT QLCDNumber::Mode ctr_qt_widgets_ffi_QLCDNumber_mode(QLCDNumber const * this_ptr) {
  return this_ptr->mode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setMode(QLCDNumber * this_ptr, QLCDNumber::Mode arg1) {
  this_ptr->setMode(arg1);
}


RITUAL_EXPORT QLCDNumber::SegmentStyle ctr_qt_widgets_ffi_QLCDNumber_segmentStyle(QLCDNumber const * this_ptr) {
  return this_ptr->segmentStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setSegmentStyle(QLCDNumber * this_ptr, QLCDNumber::SegmentStyle arg1) {
  this_ptr->setSegmentStyle(arg1);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QLCDNumber_value(QLCDNumber const * this_ptr) {
  return this_ptr->value();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QLCDNumber_intValue(QLCDNumber const * this_ptr) {
  return this_ptr->intValue();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QLCDNumber_sizeHint(QLCDNumber const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_display(QLCDNumber * this_ptr, QString const * str) {
  this_ptr->display(*str);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_display1(QLCDNumber * this_ptr, int num) {
  this_ptr->display(num);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_display2(QLCDNumber * this_ptr, double num) {
  this_ptr->display(num);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setHexMode(QLCDNumber * this_ptr) {
  this_ptr->setHexMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setDecMode(QLCDNumber * this_ptr) {
  this_ptr->setDecMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setOctMode(QLCDNumber * this_ptr) {
  this_ptr->setOctMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setBinMode(QLCDNumber * this_ptr) {
  this_ptr->setBinMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLCDNumber_setSmallDecimalPoint(QLCDNumber * this_ptr, bool arg1) {
  this_ptr->setSmallDecimalPoint(arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QListView_metaObject(QListView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QListView_qt_metacast(QListView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListView_qt_metacall(QListView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListView_tr(char const * s, char const * c, int n) {
  return new QString(QListView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QListView::trUtf8(s, c, n));
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_QListView_QListView(QWidget * parent) {
  return new QListView(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_dQListView(QListView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setMovement(QListView * this_ptr, QListView::Movement movement) {
  this_ptr->setMovement(movement);
}


RITUAL_EXPORT QListView::Movement ctr_qt_widgets_ffi_QListView_movement(QListView const * this_ptr) {
  return this_ptr->movement();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setFlow(QListView * this_ptr, QListView::Flow flow) {
  this_ptr->setFlow(flow);
}


RITUAL_EXPORT QListView::Flow ctr_qt_widgets_ffi_QListView_flow(QListView const * this_ptr) {
  return this_ptr->flow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setWrapping(QListView * this_ptr, bool enable) {
  this_ptr->setWrapping(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListView_isWrapping(QListView const * this_ptr) {
  return this_ptr->isWrapping();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setResizeMode(QListView * this_ptr, QListView::ResizeMode mode) {
  this_ptr->setResizeMode(mode);
}


RITUAL_EXPORT QListView::ResizeMode ctr_qt_widgets_ffi_QListView_resizeMode(QListView const * this_ptr) {
  return this_ptr->resizeMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setLayoutMode(QListView * this_ptr, QListView::LayoutMode mode) {
  this_ptr->setLayoutMode(mode);
}


RITUAL_EXPORT QListView::LayoutMode ctr_qt_widgets_ffi_QListView_layoutMode(QListView const * this_ptr) {
  return this_ptr->layoutMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setSpacing(QListView * this_ptr, int space) {
  this_ptr->setSpacing(space);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListView_spacing(QListView const * this_ptr) {
  return this_ptr->spacing();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setBatchSize(QListView * this_ptr, int batchSize) {
  this_ptr->setBatchSize(batchSize);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListView_batchSize(QListView const * this_ptr) {
  return this_ptr->batchSize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setGridSize(QListView * this_ptr, QSize const * size) {
  this_ptr->setGridSize(*size);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QListView_gridSize(QListView const * this_ptr) {
  return new QSize(this_ptr->gridSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setViewMode(QListView * this_ptr, QListView::ViewMode mode) {
  this_ptr->setViewMode(mode);
}


RITUAL_EXPORT QListView::ViewMode ctr_qt_widgets_ffi_QListView_viewMode(QListView const * this_ptr) {
  return this_ptr->viewMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_clearPropertyFlags(QListView * this_ptr) {
  this_ptr->clearPropertyFlags();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListView_isRowHidden(QListView const * this_ptr, int row) {
  return this_ptr->isRowHidden(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setRowHidden(QListView * this_ptr, int row, bool hide) {
  this_ptr->setRowHidden(row, hide);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setModelColumn(QListView * this_ptr, int column) {
  this_ptr->setModelColumn(column);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListView_modelColumn(QListView const * this_ptr) {
  return this_ptr->modelColumn();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setUniformItemSizes(QListView * this_ptr, bool enable) {
  this_ptr->setUniformItemSizes(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListView_uniformItemSizes(QListView const * this_ptr) {
  return this_ptr->uniformItemSizes();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setWordWrap(QListView * this_ptr, bool on) {
  this_ptr->setWordWrap(on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListView_wordWrap(QListView const * this_ptr) {
  return this_ptr->wordWrap();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setSelectionRectVisible(QListView * this_ptr, bool show) {
  this_ptr->setSelectionRectVisible(show);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListView_isSelectionRectVisible(QListView const * this_ptr) {
  return this_ptr->isSelectionRectVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setItemAlignment(QListView * this_ptr, int alignment) {
  this_ptr->setItemAlignment(QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListView_itemAlignment(QListView const * this_ptr) {
  return int(this_ptr->itemAlignment());
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QListView_visualRect(QListView const * this_ptr, QModelIndex const * index) {
  return new QRect(this_ptr->visualRect(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_scrollTo(QListView * this_ptr, QModelIndex const * index, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollTo(*index, hint);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QListView_indexAt(QListView const * this_ptr, QPoint const * p) {
  return new QModelIndex(this_ptr->indexAt(*p));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_doItemsLayout(QListView * this_ptr) {
  this_ptr->doItemsLayout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_reset(QListView * this_ptr) {
  this_ptr->reset();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_setRootIndex(QListView * this_ptr, QModelIndex const * index) {
  this_ptr->setRootIndex(*index);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem(QListWidget * listview, int type) {
  return new QListWidgetItem(listview, type);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem1(QString const * text, QListWidget * listview, int type) {
  return new QListWidgetItem(*text, listview, type);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem2(QIcon const * icon, QString const * text, QListWidget * listview, int type) {
  return new QListWidgetItem(*icon, *text, listview, type);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem3(QListWidgetItem const * other) {
  return new QListWidgetItem(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_dQListWidgetItem(QListWidgetItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_clone(QListWidgetItem const * this_ptr) {
  return this_ptr->clone();
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_QListWidgetItem_listWidget(QListWidgetItem const * this_ptr) {
  return this_ptr->listWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setSelected(QListWidgetItem * this_ptr, bool select) {
  this_ptr->setSelected(select);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListWidgetItem_isSelected(QListWidgetItem const * this_ptr) {
  return this_ptr->isSelected();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setHidden(QListWidgetItem * this_ptr, bool hide) {
  this_ptr->setHidden(hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListWidgetItem_isHidden(QListWidgetItem const * this_ptr) {
  return this_ptr->isHidden();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListWidgetItem_flags(QListWidgetItem const * this_ptr) {
  return int(this_ptr->flags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setFlags(QListWidgetItem * this_ptr, int flags) {
  this_ptr->setFlags(QFlags< Qt::ItemFlag >(flags));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListWidgetItem_text(QListWidgetItem const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setText(QListWidgetItem * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QListWidgetItem_icon(QListWidgetItem const * this_ptr) {
  return new QIcon(this_ptr->icon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setIcon(QListWidgetItem * this_ptr, QIcon const * icon) {
  this_ptr->setIcon(*icon);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListWidgetItem_statusTip(QListWidgetItem const * this_ptr) {
  return new QString(this_ptr->statusTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setStatusTip(QListWidgetItem * this_ptr, QString const * statusTip) {
  this_ptr->setStatusTip(*statusTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListWidgetItem_toolTip(QListWidgetItem const * this_ptr) {
  return new QString(this_ptr->toolTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setToolTip(QListWidgetItem * this_ptr, QString const * toolTip) {
  this_ptr->setToolTip(*toolTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListWidgetItem_whatsThis(QListWidgetItem const * this_ptr) {
  return new QString(this_ptr->whatsThis());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setWhatsThis(QListWidgetItem * this_ptr, QString const * whatsThis) {
  this_ptr->setWhatsThis(*whatsThis);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QListWidgetItem_font(QListWidgetItem const * this_ptr) {
  return new QFont(this_ptr->font());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setFont(QListWidgetItem * this_ptr, QFont const * font) {
  this_ptr->setFont(*font);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListWidgetItem_textAlignment(QListWidgetItem const * this_ptr) {
  return this_ptr->textAlignment();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setTextAlignment(QListWidgetItem * this_ptr, int alignment) {
  this_ptr->setTextAlignment(alignment);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QListWidgetItem_backgroundColor(QListWidgetItem const * this_ptr) {
  return new QColor(this_ptr->backgroundColor());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setBackgroundColor(QListWidgetItem * this_ptr, QColor const * color) {
  this_ptr->setBackgroundColor(*color);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QListWidgetItem_background(QListWidgetItem const * this_ptr) {
  return new QBrush(this_ptr->background());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setBackground(QListWidgetItem * this_ptr, QBrush const * brush) {
  this_ptr->setBackground(*brush);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QListWidgetItem_textColor(QListWidgetItem const * this_ptr) {
  return new QColor(this_ptr->textColor());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setTextColor(QListWidgetItem * this_ptr, QColor const * color) {
  this_ptr->setTextColor(*color);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QListWidgetItem_foreground(QListWidgetItem const * this_ptr) {
  return new QBrush(this_ptr->foreground());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setForeground(QListWidgetItem * this_ptr, QBrush const * brush) {
  this_ptr->setForeground(*brush);
}


RITUAL_EXPORT Qt::CheckState ctr_qt_widgets_ffi_QListWidgetItem_checkState(QListWidgetItem const * this_ptr) {
  return this_ptr->checkState();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setCheckState(QListWidgetItem * this_ptr, Qt::CheckState state) {
  this_ptr->setCheckState(state);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QListWidgetItem_sizeHint(QListWidgetItem const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setSizeHint(QListWidgetItem * this_ptr, QSize const * size) {
  this_ptr->setSizeHint(*size);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QListWidgetItem_data(QListWidgetItem const * this_ptr, int role) {
  return new QVariant(this_ptr->data(role));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_setData(QListWidgetItem * this_ptr, int role, QVariant const * value) {
  this_ptr->setData(role, *value);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListWidgetItem_operator_(QListWidgetItem const * this_ptr, QListWidgetItem const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_read(QListWidgetItem * this_ptr, QDataStream * in) {
  this_ptr->read(*in);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidgetItem_write(QListWidgetItem const * this_ptr, QDataStream * out) {
  this_ptr->write(*out);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_operator_1(QListWidgetItem * this_ptr, QListWidgetItem const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListWidgetItem_type(QListWidgetItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__14(QDataStream * out, QListWidgetItem const * item) {
  return &operator<<(*out, *item);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__15(QDataStream * in, QListWidgetItem * item) {
  return &operator>>(*in, *item);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QListWidget_metaObject(QListWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QListWidget_qt_metacast(QListWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListWidget_qt_metacall(QListWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListWidget_tr(char const * s, char const * c, int n) {
  return new QString(QListWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QListWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QListWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_QListWidget_QListWidget(QWidget * parent) {
  return new QListWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_dQListWidget(QListWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setSelectionModel(QListWidget * this_ptr, QItemSelectionModel * selectionModel) {
  this_ptr->setSelectionModel(selectionModel);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidget_item(QListWidget const * this_ptr, int row) {
  return this_ptr->item(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListWidget_row(QListWidget const * this_ptr, QListWidgetItem const * item) {
  return this_ptr->row(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_insertItem(QListWidget * this_ptr, int row, QListWidgetItem * item) {
  this_ptr->insertItem(row, item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_insertItem1(QListWidget * this_ptr, int row, QString const * label) {
  this_ptr->insertItem(row, *label);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_insertItems(QListWidget * this_ptr, int row, QStringList const * labels) {
  this_ptr->insertItems(row, *labels);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_addItem(QListWidget * this_ptr, QString const * label) {
  this_ptr->addItem(*label);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_addItem1(QListWidget * this_ptr, QListWidgetItem * item) {
  this_ptr->addItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_addItems(QListWidget * this_ptr, QStringList const * labels) {
  this_ptr->addItems(*labels);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidget_takeItem(QListWidget * this_ptr, int row) {
  return this_ptr->takeItem(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListWidget_count(QListWidget const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidget_currentItem(QListWidget const * this_ptr) {
  return this_ptr->currentItem();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setCurrentItem(QListWidget * this_ptr, QListWidgetItem * item) {
  this_ptr->setCurrentItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setCurrentItem1(QListWidget * this_ptr, QListWidgetItem * item, int command) {
  this_ptr->setCurrentItem(item, QFlags< QItemSelectionModel::SelectionFlag >(command));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QListWidget_currentRow(QListWidget const * this_ptr) {
  return this_ptr->currentRow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setCurrentRow(QListWidget * this_ptr, int row) {
  this_ptr->setCurrentRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setCurrentRow1(QListWidget * this_ptr, int row, int command) {
  this_ptr->setCurrentRow(row, QFlags< QItemSelectionModel::SelectionFlag >(command));
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidget_itemAt(QListWidget const * this_ptr, QPoint const * p) {
  return this_ptr->itemAt(*p);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidget_itemAt1(QListWidget const * this_ptr, int x, int y) {
  return this_ptr->itemAt(x, y);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QListWidget_visualItemRect(QListWidget const * this_ptr, QListWidgetItem const * item) {
  return new QRect(this_ptr->visualItemRect(item));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_sortItems(QListWidget * this_ptr, Qt::SortOrder order) {
  this_ptr->sortItems(order);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setSortingEnabled(QListWidget * this_ptr, bool enable) {
  this_ptr->setSortingEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListWidget_isSortingEnabled(QListWidget const * this_ptr) {
  return this_ptr->isSortingEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_editItem(QListWidget * this_ptr, QListWidgetItem * item) {
  this_ptr->editItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_openPersistentEditor(QListWidget * this_ptr, QListWidgetItem * item) {
  this_ptr->openPersistentEditor(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_closePersistentEditor(QListWidget * this_ptr, QListWidgetItem * item) {
  this_ptr->closePersistentEditor(item);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListWidget_isPersistentEditorOpen(QListWidget const * this_ptr, QListWidgetItem * item) {
  return this_ptr->isPersistentEditorOpen(item);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QListWidget_itemWidget(QListWidget const * this_ptr, QListWidgetItem * item) {
  return this_ptr->itemWidget(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setItemWidget(QListWidget * this_ptr, QListWidgetItem * item, QWidget * widget) {
  this_ptr->setItemWidget(item, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_removeItemWidget(QListWidget * this_ptr, QListWidgetItem * item) {
  this_ptr->removeItemWidget(item);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListWidget_isItemSelected(QListWidget const * this_ptr, QListWidgetItem const * item) {
  return this_ptr->isItemSelected(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setItemSelected(QListWidget * this_ptr, QListWidgetItem const * item, bool select) {
  this_ptr->setItemSelected(item, select);
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QListWidget_selectedItems(QListWidget const * this_ptr) {
  return new QList< QListWidgetItem * >(this_ptr->selectedItems());
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QListWidget_findItems(QListWidget const * this_ptr, QString const * text, int flags) {
  return new QList< QListWidgetItem * >(this_ptr->findItems(*text, QFlags< Qt::MatchFlag >(flags)));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QListWidget_isItemHidden(QListWidget const * this_ptr, QListWidgetItem const * item) {
  return this_ptr->isItemHidden(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_setItemHidden(QListWidget * this_ptr, QListWidgetItem const * item, bool hide) {
  this_ptr->setItemHidden(item, hide);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_dropEvent(QListWidget * this_ptr, QDropEvent * event) {
  this_ptr->dropEvent(event);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_scrollToItem(QListWidget * this_ptr, QListWidgetItem const * item, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollToItem(item, hint);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_clear(QListWidget * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMainWindow_metaObject(QMainWindow const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QMainWindow_qt_metacast(QMainWindow * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMainWindow_qt_metacall(QMainWindow * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMainWindow_tr(char const * s, char const * c, int n) {
  return new QString(QMainWindow::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMainWindow_trUtf8(char const * s, char const * c, int n) {
  return new QString(QMainWindow::trUtf8(s, c, n));
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_QMainWindow_QMainWindow(QWidget * parent, int flags) {
  return new QMainWindow(parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_dQMainWindow(QMainWindow * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMainWindow_iconSize(QMainWindow const * this_ptr) {
  return new QSize(this_ptr->iconSize());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setIconSize(QMainWindow * this_ptr, QSize const * iconSize) {
  this_ptr->setIconSize(*iconSize);
}


RITUAL_EXPORT Qt::ToolButtonStyle ctr_qt_widgets_ffi_QMainWindow_toolButtonStyle(QMainWindow const * this_ptr) {
  return this_ptr->toolButtonStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setToolButtonStyle(QMainWindow * this_ptr, Qt::ToolButtonStyle toolButtonStyle) {
  this_ptr->setToolButtonStyle(toolButtonStyle);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_isAnimated(QMainWindow const * this_ptr) {
  return this_ptr->isAnimated();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_isDockNestingEnabled(QMainWindow const * this_ptr) {
  return this_ptr->isDockNestingEnabled();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_documentMode(QMainWindow const * this_ptr) {
  return this_ptr->documentMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setDocumentMode(QMainWindow * this_ptr, bool enabled) {
  this_ptr->setDocumentMode(enabled);
}


RITUAL_EXPORT QTabWidget::TabShape ctr_qt_widgets_ffi_QMainWindow_tabShape(QMainWindow const * this_ptr) {
  return this_ptr->tabShape();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setTabShape(QMainWindow * this_ptr, QTabWidget::TabShape tabShape) {
  this_ptr->setTabShape(tabShape);
}


RITUAL_EXPORT QTabWidget::TabPosition ctr_qt_widgets_ffi_QMainWindow_tabPosition(QMainWindow const * this_ptr, Qt::DockWidgetArea area) {
  return this_ptr->tabPosition(area);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setTabPosition(QMainWindow * this_ptr, int areas, QTabWidget::TabPosition tabPosition) {
  this_ptr->setTabPosition(QFlags< Qt::DockWidgetArea >(areas), tabPosition);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setDockOptions(QMainWindow * this_ptr, int options) {
  this_ptr->setDockOptions(QFlags< QMainWindow::DockOption >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMainWindow_dockOptions(QMainWindow const * this_ptr) {
  return int(this_ptr->dockOptions());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_isSeparator(QMainWindow const * this_ptr, QPoint const * pos) {
  return this_ptr->isSeparator(*pos);
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_QMainWindow_menuBar(QMainWindow const * this_ptr) {
  return this_ptr->menuBar();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setMenuBar(QMainWindow * this_ptr, QMenuBar * menubar) {
  this_ptr->setMenuBar(menubar);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMainWindow_menuWidget(QMainWindow const * this_ptr) {
  return this_ptr->menuWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setMenuWidget(QMainWindow * this_ptr, QWidget * menubar) {
  this_ptr->setMenuWidget(menubar);
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_QMainWindow_statusBar(QMainWindow const * this_ptr) {
  return this_ptr->statusBar();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setStatusBar(QMainWindow * this_ptr, QStatusBar * statusbar) {
  this_ptr->setStatusBar(statusbar);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMainWindow_centralWidget(QMainWindow const * this_ptr) {
  return this_ptr->centralWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setCentralWidget(QMainWindow * this_ptr, QWidget * widget) {
  this_ptr->setCentralWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMainWindow_takeCentralWidget(QMainWindow * this_ptr) {
  return this_ptr->takeCentralWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setCorner(QMainWindow * this_ptr, Qt::Corner corner, Qt::DockWidgetArea area) {
  this_ptr->setCorner(corner, area);
}


RITUAL_EXPORT Qt::DockWidgetArea ctr_qt_widgets_ffi_QMainWindow_corner(QMainWindow const * this_ptr, Qt::Corner corner) {
  return this_ptr->corner(corner);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_addToolBarBreak(QMainWindow * this_ptr, Qt::ToolBarArea area) {
  this_ptr->addToolBarBreak(area);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_insertToolBarBreak(QMainWindow * this_ptr, QToolBar * before) {
  this_ptr->insertToolBarBreak(before);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_addToolBar(QMainWindow * this_ptr, Qt::ToolBarArea area, QToolBar * toolbar) {
  this_ptr->addToolBar(area, toolbar);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_addToolBar1(QMainWindow * this_ptr, QToolBar * toolbar) {
  this_ptr->addToolBar(toolbar);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_QMainWindow_addToolBar2(QMainWindow * this_ptr, QString const * title) {
  return this_ptr->addToolBar(*title);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_insertToolBar(QMainWindow * this_ptr, QToolBar * before, QToolBar * toolbar) {
  this_ptr->insertToolBar(before, toolbar);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_removeToolBar(QMainWindow * this_ptr, QToolBar * toolbar) {
  this_ptr->removeToolBar(toolbar);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_removeToolBarBreak(QMainWindow * this_ptr, QToolBar * before) {
  this_ptr->removeToolBarBreak(before);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_unifiedTitleAndToolBarOnMac(QMainWindow const * this_ptr) {
  return this_ptr->unifiedTitleAndToolBarOnMac();
}


RITUAL_EXPORT Qt::ToolBarArea ctr_qt_widgets_ffi_QMainWindow_toolBarArea(QMainWindow const * this_ptr, QToolBar * toolbar) {
  return this_ptr->toolBarArea(toolbar);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_toolBarBreak(QMainWindow const * this_ptr, QToolBar * toolbar) {
  return this_ptr->toolBarBreak(toolbar);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_addDockWidget(QMainWindow * this_ptr, Qt::DockWidgetArea area, QDockWidget * dockwidget) {
  this_ptr->addDockWidget(area, dockwidget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_addDockWidget1(QMainWindow * this_ptr, Qt::DockWidgetArea area, QDockWidget * dockwidget, Qt::Orientation orientation) {
  this_ptr->addDockWidget(area, dockwidget, orientation);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_splitDockWidget(QMainWindow * this_ptr, QDockWidget * after, QDockWidget * dockwidget, Qt::Orientation orientation) {
  this_ptr->splitDockWidget(after, dockwidget, orientation);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_tabifyDockWidget(QMainWindow * this_ptr, QDockWidget * first, QDockWidget * second) {
  this_ptr->tabifyDockWidget(first, second);
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QMainWindow_tabifiedDockWidgets(QMainWindow const * this_ptr, QDockWidget * dockwidget) {
  return new QList< QDockWidget * >(this_ptr->tabifiedDockWidgets(dockwidget));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_removeDockWidget(QMainWindow * this_ptr, QDockWidget * dockwidget) {
  this_ptr->removeDockWidget(dockwidget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_restoreDockWidget(QMainWindow * this_ptr, QDockWidget * dockwidget) {
  return this_ptr->restoreDockWidget(dockwidget);
}


RITUAL_EXPORT Qt::DockWidgetArea ctr_qt_widgets_ffi_QMainWindow_dockWidgetArea(QMainWindow const * this_ptr, QDockWidget * dockwidget) {
  return this_ptr->dockWidgetArea(dockwidget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_resizeDocks(QMainWindow * this_ptr, QList< QDockWidget * > const * docks, QList< int > const * sizes, Qt::Orientation orientation) {
  this_ptr->resizeDocks(*docks, *sizes, orientation);
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QMainWindow_saveState(QMainWindow const * this_ptr, int version) {
  return new QByteArray(this_ptr->saveState(version));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_restoreState(QMainWindow * this_ptr, QByteArray const * state, int version) {
  return this_ptr->restoreState(*state, version);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMainWindow_createPopupMenu(QMainWindow * this_ptr) {
  return this_ptr->createPopupMenu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setAnimated(QMainWindow * this_ptr, bool enabled) {
  this_ptr->setAnimated(enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setDockNestingEnabled(QMainWindow * this_ptr, bool enabled) {
  this_ptr->setDockNestingEnabled(enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_setUnifiedTitleAndToolBarOnMac(QMainWindow * this_ptr, bool set) {
  this_ptr->setUnifiedTitleAndToolBarOnMac(set);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMdiArea_metaObject(QMdiArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QMdiArea_qt_metacast(QMdiArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMdiArea_qt_metacall(QMdiArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMdiArea_tr(char const * s, char const * c, int n) {
  return new QString(QMdiArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMdiArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(QMdiArea::trUtf8(s, c, n));
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_QMdiArea_QMdiArea(QWidget * parent) {
  return new QMdiArea(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_dQMdiArea(QMdiArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMdiArea_sizeHint(QMdiArea const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMdiArea_minimumSizeHint(QMdiArea const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QMdiArea_currentSubWindow(QMdiArea const * this_ptr) {
  return this_ptr->currentSubWindow();
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QMdiArea_activeSubWindow(QMdiArea const * this_ptr) {
  return this_ptr->activeSubWindow();
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QMdiArea_subWindowList(QMdiArea const * this_ptr, QMdiArea::WindowOrder order) {
  return new QList< QMdiSubWindow * >(this_ptr->subWindowList(order));
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QMdiArea_addSubWindow(QMdiArea * this_ptr, QWidget * widget, int flags) {
  return this_ptr->addSubWindow(widget, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_removeSubWindow(QMdiArea * this_ptr, QWidget * widget) {
  this_ptr->removeSubWindow(widget);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QMdiArea_background(QMdiArea const * this_ptr) {
  return new QBrush(this_ptr->background());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setBackground(QMdiArea * this_ptr, QBrush const * background) {
  this_ptr->setBackground(*background);
}


RITUAL_EXPORT QMdiArea::WindowOrder ctr_qt_widgets_ffi_QMdiArea_activationOrder(QMdiArea const * this_ptr) {
  return this_ptr->activationOrder();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setActivationOrder(QMdiArea * this_ptr, QMdiArea::WindowOrder order) {
  this_ptr->setActivationOrder(order);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setOption(QMdiArea * this_ptr, QMdiArea::AreaOption option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMdiArea_testOption(QMdiArea const * this_ptr, QMdiArea::AreaOption opton) {
  return this_ptr->testOption(opton);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setViewMode(QMdiArea * this_ptr, QMdiArea::ViewMode mode) {
  this_ptr->setViewMode(mode);
}


RITUAL_EXPORT QMdiArea::ViewMode ctr_qt_widgets_ffi_QMdiArea_viewMode(QMdiArea const * this_ptr) {
  return this_ptr->viewMode();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMdiArea_documentMode(QMdiArea const * this_ptr) {
  return this_ptr->documentMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setDocumentMode(QMdiArea * this_ptr, bool enabled) {
  this_ptr->setDocumentMode(enabled);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setTabsClosable(QMdiArea * this_ptr, bool closable) {
  this_ptr->setTabsClosable(closable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMdiArea_tabsClosable(QMdiArea const * this_ptr) {
  return this_ptr->tabsClosable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setTabsMovable(QMdiArea * this_ptr, bool movable) {
  this_ptr->setTabsMovable(movable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMdiArea_tabsMovable(QMdiArea const * this_ptr) {
  return this_ptr->tabsMovable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setTabShape(QMdiArea * this_ptr, QTabWidget::TabShape shape) {
  this_ptr->setTabShape(shape);
}


RITUAL_EXPORT QTabWidget::TabShape ctr_qt_widgets_ffi_QMdiArea_tabShape(QMdiArea const * this_ptr) {
  return this_ptr->tabShape();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setTabPosition(QMdiArea * this_ptr, QTabWidget::TabPosition position) {
  this_ptr->setTabPosition(position);
}


RITUAL_EXPORT QTabWidget::TabPosition ctr_qt_widgets_ffi_QMdiArea_tabPosition(QMdiArea const * this_ptr) {
  return this_ptr->tabPosition();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setActiveSubWindow(QMdiArea * this_ptr, QMdiSubWindow * window) {
  this_ptr->setActiveSubWindow(window);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_tileSubWindows(QMdiArea * this_ptr) {
  this_ptr->tileSubWindows();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_cascadeSubWindows(QMdiArea * this_ptr) {
  this_ptr->cascadeSubWindows();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_closeActiveSubWindow(QMdiArea * this_ptr) {
  this_ptr->closeActiveSubWindow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_closeAllSubWindows(QMdiArea * this_ptr) {
  this_ptr->closeAllSubWindows();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_activateNextSubWindow(QMdiArea * this_ptr) {
  this_ptr->activateNextSubWindow();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_activatePreviousSubWindow(QMdiArea * this_ptr) {
  this_ptr->activatePreviousSubWindow();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMdiSubWindow_metaObject(QMdiSubWindow const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QMdiSubWindow_qt_metacast(QMdiSubWindow * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMdiSubWindow_qt_metacall(QMdiSubWindow * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMdiSubWindow_tr(char const * s, char const * c, int n) {
  return new QString(QMdiSubWindow::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMdiSubWindow_trUtf8(char const * s, char const * c, int n) {
  return new QString(QMdiSubWindow::trUtf8(s, c, n));
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QMdiSubWindow_QMdiSubWindow(QWidget * parent, int flags) {
  return new QMdiSubWindow(parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_dQMdiSubWindow(QMdiSubWindow * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMdiSubWindow_sizeHint(QMdiSubWindow const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMdiSubWindow_minimumSizeHint(QMdiSubWindow const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_setWidget(QMdiSubWindow * this_ptr, QWidget * widget) {
  this_ptr->setWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMdiSubWindow_widget(QMdiSubWindow const * this_ptr) {
  return this_ptr->widget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMdiSubWindow_maximizedButtonsWidget(QMdiSubWindow const * this_ptr) {
  return this_ptr->maximizedButtonsWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMdiSubWindow_maximizedSystemMenuIconWidget(QMdiSubWindow const * this_ptr) {
  return this_ptr->maximizedSystemMenuIconWidget();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMdiSubWindow_isShaded(QMdiSubWindow const * this_ptr) {
  return this_ptr->isShaded();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_setOption(QMdiSubWindow * this_ptr, QMdiSubWindow::SubWindowOption option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMdiSubWindow_testOption(QMdiSubWindow const * this_ptr, QMdiSubWindow::SubWindowOption arg1) {
  return this_ptr->testOption(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_setKeyboardSingleStep(QMdiSubWindow * this_ptr, int step) {
  this_ptr->setKeyboardSingleStep(step);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMdiSubWindow_keyboardSingleStep(QMdiSubWindow const * this_ptr) {
  return this_ptr->keyboardSingleStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_setKeyboardPageStep(QMdiSubWindow * this_ptr, int step) {
  this_ptr->setKeyboardPageStep(step);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMdiSubWindow_keyboardPageStep(QMdiSubWindow const * this_ptr) {
  return this_ptr->keyboardPageStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_setSystemMenu(QMdiSubWindow * this_ptr, QMenu * systemMenu) {
  this_ptr->setSystemMenu(systemMenu);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMdiSubWindow_systemMenu(QMdiSubWindow const * this_ptr) {
  return this_ptr->systemMenu();
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_QMdiSubWindow_mdiArea(QMdiSubWindow const * this_ptr) {
  return this_ptr->mdiArea();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_showSystemMenu(QMdiSubWindow * this_ptr) {
  this_ptr->showSystemMenu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_showShaded(QMdiSubWindow * this_ptr) {
  this_ptr->showShaded();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMenu_metaObject(QMenu const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QMenu_qt_metacast(QMenu * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMenu_qt_metacall(QMenu * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMenu_tr(char const * s, char const * c, int n) {
  return new QString(QMenu::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMenu_trUtf8(char const * s, char const * c, int n) {
  return new QString(QMenu::trUtf8(s, c, n));
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenu_QMenu(QWidget * parent) {
  return new QMenu(parent);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenu_QMenu1(QString const * title, QWidget * parent) {
  return new QMenu(*title, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_dQMenu(QMenu * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addAction(QMenu * this_ptr, QString const * text) {
  return this_ptr->addAction(*text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addAction1(QMenu * this_ptr, QIcon const * icon, QString const * text) {
  return this_ptr->addAction(*icon, *text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addAction2(QMenu * this_ptr, QString const * text, QObject const * receiver, char const * member, QKeySequence const * shortcut) {
  return this_ptr->addAction(*text, receiver, member, *shortcut);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addAction3(QMenu * this_ptr, QIcon const * icon, QString const * text, QObject const * receiver, char const * member, QKeySequence const * shortcut) {
  return this_ptr->addAction(*icon, *text, receiver, member, *shortcut);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addMenu(QMenu * this_ptr, QMenu * menu) {
  return this_ptr->addMenu(menu);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenu_addMenu1(QMenu * this_ptr, QString const * title) {
  return this_ptr->addMenu(*title);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenu_addMenu2(QMenu * this_ptr, QIcon const * icon, QString const * title) {
  return this_ptr->addMenu(*icon, *title);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addSeparator(QMenu * this_ptr) {
  return this_ptr->addSeparator();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addSection(QMenu * this_ptr, QString const * text) {
  return this_ptr->addSection(*text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addSection1(QMenu * this_ptr, QIcon const * icon, QString const * text) {
  return this_ptr->addSection(*icon, *text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_insertMenu(QMenu * this_ptr, QAction * before, QMenu * menu) {
  return this_ptr->insertMenu(before, menu);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_insertSeparator(QMenu * this_ptr, QAction * before) {
  return this_ptr->insertSeparator(before);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_insertSection(QMenu * this_ptr, QAction * before, QString const * text) {
  return this_ptr->insertSection(before, *text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_insertSection1(QMenu * this_ptr, QAction * before, QIcon const * icon, QString const * text) {
  return this_ptr->insertSection(before, *icon, *text);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMenu_isEmpty(QMenu const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_clear(QMenu * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setTearOffEnabled(QMenu * this_ptr, bool arg1) {
  this_ptr->setTearOffEnabled(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMenu_isTearOffEnabled(QMenu const * this_ptr) {
  return this_ptr->isTearOffEnabled();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMenu_isTearOffMenuVisible(QMenu const * this_ptr) {
  return this_ptr->isTearOffMenuVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_showTearOffMenu(QMenu * this_ptr) {
  this_ptr->showTearOffMenu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_showTearOffMenu1(QMenu * this_ptr, QPoint const * pos) {
  this_ptr->showTearOffMenu(*pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_hideTearOffMenu(QMenu * this_ptr) {
  this_ptr->hideTearOffMenu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setDefaultAction(QMenu * this_ptr, QAction * arg1) {
  this_ptr->setDefaultAction(arg1);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_defaultAction(QMenu const * this_ptr) {
  return this_ptr->defaultAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setActiveAction(QMenu * this_ptr, QAction * act) {
  this_ptr->setActiveAction(act);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_activeAction(QMenu const * this_ptr) {
  return this_ptr->activeAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_popup(QMenu * this_ptr, QPoint const * pos, QAction * at) {
  this_ptr->popup(*pos, at);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_exec(QMenu * this_ptr) {
  return this_ptr->exec();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_exec1(QMenu * this_ptr, QPoint const * pos, QAction * at) {
  return this_ptr->exec(*pos, at);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_exec2(QList< QAction * > const * actions, QPoint const * pos, QAction * at, QWidget * parent) {
  return QMenu::exec(*actions, *pos, at, parent);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMenu_sizeHint(QMenu const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QMenu_actionGeometry(QMenu const * this_ptr, QAction * arg1) {
  return new QRect(this_ptr->actionGeometry(arg1));
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_actionAt(QMenu const * this_ptr, QPoint const * arg1) {
  return this_ptr->actionAt(*arg1);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_menuAction(QMenu const * this_ptr) {
  return this_ptr->menuAction();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMenu_title(QMenu const * this_ptr) {
  return new QString(this_ptr->title());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setTitle(QMenu * this_ptr, QString const * title) {
  this_ptr->setTitle(*title);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QMenu_icon(QMenu const * this_ptr) {
  return new QIcon(this_ptr->icon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setIcon(QMenu * this_ptr, QIcon const * icon) {
  this_ptr->setIcon(*icon);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setNoReplayFor(QMenu * this_ptr, QWidget * widget) {
  this_ptr->setNoReplayFor(widget);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMenu_separatorsCollapsible(QMenu const * this_ptr) {
  return this_ptr->separatorsCollapsible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setSeparatorsCollapsible(QMenu * this_ptr, bool collapse) {
  this_ptr->setSeparatorsCollapsible(collapse);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMenu_toolTipsVisible(QMenu const * this_ptr) {
  return this_ptr->toolTipsVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_setToolTipsVisible(QMenu * this_ptr, bool visible) {
  this_ptr->setToolTipsVisible(visible);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMenuBar_metaObject(QMenuBar const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QMenuBar_qt_metacast(QMenuBar * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMenuBar_qt_metacall(QMenuBar * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMenuBar_tr(char const * s, char const * c, int n) {
  return new QString(QMenuBar::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMenuBar_trUtf8(char const * s, char const * c, int n) {
  return new QString(QMenuBar::trUtf8(s, c, n));
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_QMenuBar_QMenuBar(QWidget * parent) {
  return new QMenuBar(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_dQMenuBar(QMenuBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_addAction(QMenuBar * this_ptr, QString const * text) {
  return this_ptr->addAction(*text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_addAction1(QMenuBar * this_ptr, QString const * text, QObject const * receiver, char const * member) {
  return this_ptr->addAction(*text, receiver, member);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_addMenu(QMenuBar * this_ptr, QMenu * menu) {
  return this_ptr->addMenu(menu);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenuBar_addMenu1(QMenuBar * this_ptr, QString const * title) {
  return this_ptr->addMenu(*title);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenuBar_addMenu2(QMenuBar * this_ptr, QIcon const * icon, QString const * title) {
  return this_ptr->addMenu(*icon, *title);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_addSeparator(QMenuBar * this_ptr) {
  return this_ptr->addSeparator();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_insertSeparator(QMenuBar * this_ptr, QAction * before) {
  return this_ptr->insertSeparator(before);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_insertMenu(QMenuBar * this_ptr, QAction * before, QMenu * menu) {
  return this_ptr->insertMenu(before, menu);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_clear(QMenuBar * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_activeAction(QMenuBar const * this_ptr) {
  return this_ptr->activeAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_setActiveAction(QMenuBar * this_ptr, QAction * action) {
  this_ptr->setActiveAction(action);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_setDefaultUp(QMenuBar * this_ptr, bool arg1) {
  this_ptr->setDefaultUp(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMenuBar_isDefaultUp(QMenuBar const * this_ptr) {
  return this_ptr->isDefaultUp();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMenuBar_sizeHint(QMenuBar const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QMenuBar_minimumSizeHint(QMenuBar const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMenuBar_heightForWidth(QMenuBar const * this_ptr, int arg1) {
  return this_ptr->heightForWidth(arg1);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QMenuBar_actionGeometry(QMenuBar const * this_ptr, QAction * arg1) {
  return new QRect(this_ptr->actionGeometry(arg1));
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenuBar_actionAt(QMenuBar const * this_ptr, QPoint const * arg1) {
  return this_ptr->actionAt(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_setCornerWidget(QMenuBar * this_ptr, QWidget * w, Qt::Corner corner) {
  this_ptr->setCornerWidget(w, corner);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMenuBar_cornerWidget(QMenuBar const * this_ptr, Qt::Corner corner) {
  return this_ptr->cornerWidget(corner);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMenuBar_isNativeMenuBar(QMenuBar const * this_ptr) {
  return this_ptr->isNativeMenuBar();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_setNativeMenuBar(QMenuBar * this_ptr, bool nativeMenuBar) {
  this_ptr->setNativeMenuBar(nativeMenuBar);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_setVisible(QMenuBar * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMessageBox_metaObject(QMessageBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QMessageBox_qt_metacast(QMessageBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_qt_metacall(QMessageBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMessageBox_tr(char const * s, char const * c, int n) {
  return new QString(QMessageBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMessageBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QMessageBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox(QWidget * parent) {
  return new QMessageBox(parent);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox1(QMessageBox::Icon icon, QString const * title, QString const * text, int buttons, QWidget * parent, int flags) {
  return new QMessageBox(icon, *title, *text, QFlags< QMessageBox::StandardButton >(buttons), parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_dQMessageBox(QMessageBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_addButton(QMessageBox * this_ptr, QAbstractButton * button, QMessageBox::ButtonRole role) {
  this_ptr->addButton(button, role);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QMessageBox_addButton1(QMessageBox * this_ptr, QString const * text, QMessageBox::ButtonRole role) {
  return this_ptr->addButton(*text, role);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QMessageBox_addButton2(QMessageBox * this_ptr, QMessageBox::StandardButton button) {
  return this_ptr->addButton(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_removeButton(QMessageBox * this_ptr, QAbstractButton * button) {
  this_ptr->removeButton(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_open(QMessageBox * this_ptr, QObject * receiver, char const * member) {
  this_ptr->open(receiver, member);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QMessageBox_buttons(QMessageBox const * this_ptr) {
  return new QList< QAbstractButton * >(this_ptr->buttons());
}


RITUAL_EXPORT QMessageBox::ButtonRole ctr_qt_widgets_ffi_QMessageBox_buttonRole(QMessageBox const * this_ptr, QAbstractButton * button) {
  return this_ptr->buttonRole(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setStandardButtons(QMessageBox * this_ptr, int buttons) {
  this_ptr->setStandardButtons(QFlags< QMessageBox::StandardButton >(buttons));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_standardButtons(QMessageBox const * this_ptr) {
  return int(this_ptr->standardButtons());
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_standardButton(QMessageBox const * this_ptr, QAbstractButton * button) {
  return this_ptr->standardButton(button);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QMessageBox_button(QMessageBox const * this_ptr, QMessageBox::StandardButton which) {
  return this_ptr->button(which);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QMessageBox_defaultButton(QMessageBox const * this_ptr) {
  return this_ptr->defaultButton();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setDefaultButton(QMessageBox * this_ptr, QPushButton * button) {
  this_ptr->setDefaultButton(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setDefaultButton1(QMessageBox * this_ptr, QMessageBox::StandardButton button) {
  this_ptr->setDefaultButton(button);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QMessageBox_escapeButton(QMessageBox const * this_ptr) {
  return this_ptr->escapeButton();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setEscapeButton(QMessageBox * this_ptr, QAbstractButton * button) {
  this_ptr->setEscapeButton(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setEscapeButton1(QMessageBox * this_ptr, QMessageBox::StandardButton button) {
  this_ptr->setEscapeButton(button);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QMessageBox_clickedButton(QMessageBox const * this_ptr) {
  return this_ptr->clickedButton();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMessageBox_text(QMessageBox const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setText(QMessageBox * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT QMessageBox::Icon ctr_qt_widgets_ffi_QMessageBox_icon(QMessageBox const * this_ptr) {
  return this_ptr->icon();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setIcon(QMessageBox * this_ptr, QMessageBox::Icon arg1) {
  this_ptr->setIcon(arg1);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QMessageBox_iconPixmap(QMessageBox const * this_ptr) {
  return new QPixmap(this_ptr->iconPixmap());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setIconPixmap(QMessageBox * this_ptr, QPixmap const * pixmap) {
  this_ptr->setIconPixmap(*pixmap);
}


RITUAL_EXPORT Qt::TextFormat ctr_qt_widgets_ffi_QMessageBox_textFormat(QMessageBox const * this_ptr) {
  return this_ptr->textFormat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setTextFormat(QMessageBox * this_ptr, Qt::TextFormat format) {
  this_ptr->setTextFormat(format);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setTextInteractionFlags(QMessageBox * this_ptr, int flags) {
  this_ptr->setTextInteractionFlags(QFlags< Qt::TextInteractionFlag >(flags));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_textInteractionFlags(QMessageBox const * this_ptr) {
  return int(this_ptr->textInteractionFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setCheckBox(QMessageBox * this_ptr, QCheckBox * cb) {
  this_ptr->setCheckBox(cb);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_QMessageBox_checkBox(QMessageBox const * this_ptr) {
  return this_ptr->checkBox();
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_information(QWidget * parent, QString const * title, QString const * text, int buttons, QMessageBox::StandardButton defaultButton) {
  return QMessageBox::information(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons), defaultButton);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_question(QWidget * parent, QString const * title, QString const * text, int buttons, QMessageBox::StandardButton defaultButton) {
  return QMessageBox::question(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons), defaultButton);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_warning(QWidget * parent, QString const * title, QString const * text, int buttons, QMessageBox::StandardButton defaultButton) {
  return QMessageBox::warning(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons), defaultButton);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_critical(QWidget * parent, QString const * title, QString const * text, int buttons, QMessageBox::StandardButton defaultButton) {
  return QMessageBox::critical(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons), defaultButton);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_about(QWidget * parent, QString const * title, QString const * text) {
  QMessageBox::about(parent, *title, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_aboutQt(QWidget * parent, QString const * title) {
  QMessageBox::aboutQt(parent, *title);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox2(QString const * title, QString const * text, QMessageBox::Icon icon, int button0, int button1, int button2, QWidget * parent, int f) {
  return new QMessageBox(*title, *text, icon, button0, button1, button2, parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information1(QWidget * parent, QString const * title, QString const * text, int button0, int button1, int button2) {
  return QMessageBox::information(parent, *title, *text, button0, button1, button2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information2(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  return QMessageBox::information(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber, escapeButtonNumber);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_information3(QWidget * parent, QString const * title, QString const * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  return QMessageBox::information(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question1(QWidget * parent, QString const * title, QString const * text, int button0, int button1, int button2) {
  return QMessageBox::question(parent, *title, *text, button0, button1, button2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question2(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  return QMessageBox::question(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber, escapeButtonNumber);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question3(QWidget * parent, QString const * title, QString const * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  return QMessageBox::question(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning1(QWidget * parent, QString const * title, QString const * text, int button0, int button1, int button2) {
  return QMessageBox::warning(parent, *title, *text, button0, button1, button2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning2(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  return QMessageBox::warning(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber, escapeButtonNumber);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning3(QWidget * parent, QString const * title, QString const * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  return QMessageBox::warning(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical1(QWidget * parent, QString const * title, QString const * text, int button0, int button1, int button2) {
  return QMessageBox::critical(parent, *title, *text, button0, button1, button2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical2(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  return QMessageBox::critical(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber, escapeButtonNumber);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical3(QWidget * parent, QString const * title, QString const * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  return QMessageBox::critical(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMessageBox_buttonText(QMessageBox const * this_ptr, int button) {
  return new QString(this_ptr->buttonText(button));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setButtonText(QMessageBox * this_ptr, int button, QString const * text) {
  this_ptr->setButtonText(button, *text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMessageBox_informativeText(QMessageBox const * this_ptr) {
  return new QString(this_ptr->informativeText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setInformativeText(QMessageBox * this_ptr, QString const * text) {
  this_ptr->setInformativeText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMessageBox_detailedText(QMessageBox const * this_ptr) {
  return new QString(this_ptr->detailedText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setDetailedText(QMessageBox * this_ptr, QString const * text) {
  this_ptr->setDetailedText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setWindowTitle(QMessageBox * this_ptr, QString const * title) {
  this_ptr->setWindowTitle(*title);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_setWindowModality(QMessageBox * this_ptr, Qt::WindowModality windowModality) {
  this_ptr->setWindowModality(windowModality);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QMessageBox_standardIcon(QMessageBox::Icon icon) {
  return new QPixmap(QMessageBox::standardIcon(icon));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QMouseEventTransition_metaObject(QMouseEventTransition const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QMouseEventTransition_qt_metacast(QMouseEventTransition * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMouseEventTransition_qt_metacall(QMouseEventTransition * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMouseEventTransition_tr(char const * s, char const * c, int n) {
  return new QString(QMouseEventTransition::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QMouseEventTransition_trUtf8(char const * s, char const * c, int n) {
  return new QString(QMouseEventTransition::trUtf8(s, c, n));
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_QMouseEventTransition_QMouseEventTransition(QState * sourceState) {
  return new QMouseEventTransition(sourceState);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_QMouseEventTransition_QMouseEventTransition1(QObject * object, QEvent::Type type, Qt::MouseButton button, QState * sourceState) {
  return new QMouseEventTransition(object, type, button, sourceState);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMouseEventTransition_dQMouseEventTransition(QMouseEventTransition * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT Qt::MouseButton ctr_qt_widgets_ffi_QMouseEventTransition_button(QMouseEventTransition const * this_ptr) {
  return this_ptr->button();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMouseEventTransition_setButton(QMouseEventTransition * this_ptr, Qt::MouseButton button) {
  this_ptr->setButton(button);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMouseEventTransition_modifierMask(QMouseEventTransition const * this_ptr) {
  return int(this_ptr->modifierMask());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMouseEventTransition_setModifierMask(QMouseEventTransition * this_ptr, int modifiers) {
  this_ptr->setModifierMask(QFlags< Qt::KeyboardModifier >(modifiers));
}


RITUAL_EXPORT QPainterPath * ctr_qt_widgets_ffi_QMouseEventTransition_hitTestPath(QMouseEventTransition const * this_ptr) {
  return new QPainterPath(this_ptr->hitTestPath());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMouseEventTransition_setHitTestPath(QMouseEventTransition * this_ptr, QPainterPath const * path) {
  this_ptr->setHitTestPath(*path);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QOpenGLWidget_metaObject(QOpenGLWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QOpenGLWidget_qt_metacast(QOpenGLWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QOpenGLWidget_qt_metacall(QOpenGLWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QOpenGLWidget_tr(char const * s, char const * c, int n) {
  return new QString(QOpenGLWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QOpenGLWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QOpenGLWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_QOpenGLWidget_QOpenGLWidget(QWidget * parent, int f) {
  return new QOpenGLWidget(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QOpenGLWidget_dQOpenGLWidget(QOpenGLWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QOpenGLWidget_setUpdateBehavior(QOpenGLWidget * this_ptr, QOpenGLWidget::UpdateBehavior updateBehavior) {
  this_ptr->setUpdateBehavior(updateBehavior);
}


RITUAL_EXPORT QOpenGLWidget::UpdateBehavior ctr_qt_widgets_ffi_QOpenGLWidget_updateBehavior(QOpenGLWidget const * this_ptr) {
  return this_ptr->updateBehavior();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QOpenGLWidget_setFormat(QOpenGLWidget * this_ptr, QSurfaceFormat const * format) {
  this_ptr->setFormat(*format);
}


RITUAL_EXPORT QSurfaceFormat * ctr_qt_widgets_ffi_QOpenGLWidget_format(QOpenGLWidget const * this_ptr) {
  return new QSurfaceFormat(this_ptr->format());
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_QOpenGLWidget_textureFormat(QOpenGLWidget const * this_ptr) {
  return this_ptr->textureFormat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QOpenGLWidget_setTextureFormat(QOpenGLWidget * this_ptr, unsigned int texFormat) {
  this_ptr->setTextureFormat(texFormat);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QOpenGLWidget_isValid(QOpenGLWidget const * this_ptr) {
  return this_ptr->isValid();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QOpenGLWidget_makeCurrent(QOpenGLWidget * this_ptr) {
  this_ptr->makeCurrent();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QOpenGLWidget_doneCurrent(QOpenGLWidget * this_ptr) {
  this_ptr->doneCurrent();
}


RITUAL_EXPORT QOpenGLContext * ctr_qt_widgets_ffi_QOpenGLWidget_context(QOpenGLWidget const * this_ptr) {
  return this_ptr->context();
}


RITUAL_EXPORT GLuint ctr_qt_widgets_ffi_QOpenGLWidget_defaultFramebufferObject(QOpenGLWidget const * this_ptr) {
  return this_ptr->defaultFramebufferObject();
}


RITUAL_EXPORT QImage * ctr_qt_widgets_ffi_QOpenGLWidget_grabFramebuffer(QOpenGLWidget * this_ptr) {
  return new QImage(this_ptr->grabFramebuffer());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTextEdit_metaObject(QTextEdit const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTextEdit_qt_metacast(QTextEdit * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_qt_metacall(QTextEdit * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_tr(char const * s, char const * c, int n) {
  return new QString(QTextEdit::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTextEdit::trUtf8(s, c, n));
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_QTextEdit_QTextEdit(QWidget * parent) {
  return new QTextEdit(parent);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_QTextEdit_QTextEdit1(QString const * text, QWidget * parent) {
  return new QTextEdit(*text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_dQTextEdit(QTextEdit * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setDocument(QTextEdit * this_ptr, QTextDocument * document) {
  this_ptr->setDocument(document);
}


RITUAL_EXPORT QTextDocument * ctr_qt_widgets_ffi_QTextEdit_document(QTextEdit const * this_ptr) {
  return this_ptr->document();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setPlaceholderText(QTextEdit * this_ptr, QString const * placeholderText) {
  this_ptr->setPlaceholderText(*placeholderText);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_placeholderText(QTextEdit const * this_ptr) {
  return new QString(this_ptr->placeholderText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setTextCursor(QTextEdit * this_ptr, QTextCursor const * cursor) {
  this_ptr->setTextCursor(*cursor);
}


RITUAL_EXPORT QTextCursor * ctr_qt_widgets_ffi_QTextEdit_textCursor(QTextEdit const * this_ptr) {
  return new QTextCursor(this_ptr->textCursor());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_isReadOnly(QTextEdit const * this_ptr) {
  return this_ptr->isReadOnly();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setReadOnly(QTextEdit * this_ptr, bool ro) {
  this_ptr->setReadOnly(ro);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setTextInteractionFlags(QTextEdit * this_ptr, int flags) {
  this_ptr->setTextInteractionFlags(QFlags< Qt::TextInteractionFlag >(flags));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_textInteractionFlags(QTextEdit const * this_ptr) {
  return int(this_ptr->textInteractionFlags());
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QTextEdit_fontPointSize(QTextEdit const * this_ptr) {
  return this_ptr->fontPointSize();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_fontFamily(QTextEdit const * this_ptr) {
  return new QString(this_ptr->fontFamily());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_fontWeight(QTextEdit const * this_ptr) {
  return this_ptr->fontWeight();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_fontUnderline(QTextEdit const * this_ptr) {
  return this_ptr->fontUnderline();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_fontItalic(QTextEdit const * this_ptr) {
  return this_ptr->fontItalic();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QTextEdit_textColor(QTextEdit const * this_ptr) {
  return new QColor(this_ptr->textColor());
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QTextEdit_textBackgroundColor(QTextEdit const * this_ptr) {
  return new QColor(this_ptr->textBackgroundColor());
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QTextEdit_currentFont(QTextEdit const * this_ptr) {
  return new QFont(this_ptr->currentFont());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_alignment(QTextEdit const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_mergeCurrentCharFormat(QTextEdit * this_ptr, QTextCharFormat const * modifier) {
  this_ptr->mergeCurrentCharFormat(*modifier);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setCurrentCharFormat(QTextEdit * this_ptr, QTextCharFormat const * format) {
  this_ptr->setCurrentCharFormat(*format);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QTextEdit_currentCharFormat(QTextEdit const * this_ptr) {
  return new QTextCharFormat(this_ptr->currentCharFormat());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_autoFormatting(QTextEdit const * this_ptr) {
  return int(this_ptr->autoFormatting());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setAutoFormatting(QTextEdit * this_ptr, int features) {
  this_ptr->setAutoFormatting(QFlags< QTextEdit::AutoFormattingFlag >(features));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_tabChangesFocus(QTextEdit const * this_ptr) {
  return this_ptr->tabChangesFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setTabChangesFocus(QTextEdit * this_ptr, bool b) {
  this_ptr->setTabChangesFocus(b);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setDocumentTitle(QTextEdit * this_ptr, QString const * title) {
  this_ptr->setDocumentTitle(*title);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_documentTitle(QTextEdit const * this_ptr) {
  return new QString(this_ptr->documentTitle());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_isUndoRedoEnabled(QTextEdit const * this_ptr) {
  return this_ptr->isUndoRedoEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setUndoRedoEnabled(QTextEdit * this_ptr, bool enable) {
  this_ptr->setUndoRedoEnabled(enable);
}


RITUAL_EXPORT QTextEdit::LineWrapMode ctr_qt_widgets_ffi_QTextEdit_lineWrapMode(QTextEdit const * this_ptr) {
  return this_ptr->lineWrapMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setLineWrapMode(QTextEdit * this_ptr, QTextEdit::LineWrapMode mode) {
  this_ptr->setLineWrapMode(mode);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_lineWrapColumnOrWidth(QTextEdit const * this_ptr) {
  return this_ptr->lineWrapColumnOrWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setLineWrapColumnOrWidth(QTextEdit * this_ptr, int w) {
  this_ptr->setLineWrapColumnOrWidth(w);
}


RITUAL_EXPORT QTextOption::WrapMode ctr_qt_widgets_ffi_QTextEdit_wordWrapMode(QTextEdit const * this_ptr) {
  return this_ptr->wordWrapMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setWordWrapMode(QTextEdit * this_ptr, QTextOption::WrapMode policy) {
  this_ptr->setWordWrapMode(policy);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_find(QTextEdit * this_ptr, QString const * exp, int options) {
  return this_ptr->find(*exp, QFlags< QTextDocument::FindFlag >(options));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_find1(QTextEdit * this_ptr, QRegExp const * exp, int options) {
  return this_ptr->find(*exp, QFlags< QTextDocument::FindFlag >(options));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_find2(QTextEdit * this_ptr, QRegularExpression const * exp, int options) {
  return this_ptr->find(*exp, QFlags< QTextDocument::FindFlag >(options));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_toPlainText(QTextEdit const * this_ptr) {
  return new QString(this_ptr->toPlainText());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_toHtml(QTextEdit const * this_ptr) {
  return new QString(this_ptr->toHtml());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_toMarkdown(QTextEdit const * this_ptr, int features) {
  return new QString(this_ptr->toMarkdown(QFlags< QTextDocument::MarkdownFeature >(features)));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_ensureCursorVisible(QTextEdit * this_ptr) {
  this_ptr->ensureCursorVisible();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QTextEdit_loadResource(QTextEdit * this_ptr, int type, QUrl const * name) {
  return new QVariant(this_ptr->loadResource(type, *name));
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QTextEdit_createStandardContextMenu(QTextEdit * this_ptr) {
  return this_ptr->createStandardContextMenu();
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QTextEdit_createStandardContextMenu1(QTextEdit * this_ptr, QPoint const * position) {
  return this_ptr->createStandardContextMenu(*position);
}


RITUAL_EXPORT QTextCursor * ctr_qt_widgets_ffi_QTextEdit_cursorForPosition(QTextEdit const * this_ptr, QPoint const * pos) {
  return new QTextCursor(this_ptr->cursorForPosition(*pos));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QTextEdit_cursorRect(QTextEdit const * this_ptr, QTextCursor const * cursor) {
  return new QRect(this_ptr->cursorRect(*cursor));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QTextEdit_cursorRect1(QTextEdit const * this_ptr) {
  return new QRect(this_ptr->cursorRect());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_anchorAt(QTextEdit const * this_ptr, QPoint const * pos) {
  return new QString(this_ptr->anchorAt(*pos));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_overwriteMode(QTextEdit const * this_ptr) {
  return this_ptr->overwriteMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setOverwriteMode(QTextEdit * this_ptr, bool overwrite) {
  this_ptr->setOverwriteMode(overwrite);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_tabStopWidth(QTextEdit const * this_ptr) {
  return this_ptr->tabStopWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setTabStopWidth(QTextEdit * this_ptr, int width) {
  this_ptr->setTabStopWidth(width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QTextEdit_tabStopDistance(QTextEdit const * this_ptr) {
  return this_ptr->tabStopDistance();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setTabStopDistance(QTextEdit * this_ptr, double distance) {
  this_ptr->setTabStopDistance(distance);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextEdit_cursorWidth(QTextEdit const * this_ptr) {
  return this_ptr->cursorWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setCursorWidth(QTextEdit * this_ptr, int width) {
  this_ptr->setCursorWidth(width);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_acceptRichText(QTextEdit const * this_ptr) {
  return this_ptr->acceptRichText();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setAcceptRichText(QTextEdit * this_ptr, bool accept) {
  this_ptr->setAcceptRichText(accept);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setExtraSelections(QTextEdit * this_ptr, QList< QTextEdit::ExtraSelection > const * selections) {
  this_ptr->setExtraSelections(*selections);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QTextEdit_extraSelections(QTextEdit const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >(this_ptr->extraSelections());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_moveCursor(QTextEdit * this_ptr, QTextCursor::MoveOperation operation, QTextCursor::MoveMode mode) {
  this_ptr->moveCursor(operation, mode);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_canPaste(QTextEdit const * this_ptr) {
  return this_ptr->canPaste();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_print(QTextEdit const * this_ptr, QPagedPaintDevice * printer) {
  this_ptr->print(printer);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QTextEdit_inputMethodQuery(QTextEdit const * this_ptr, Qt::InputMethodQuery property) {
  return new QVariant(this_ptr->inputMethodQuery(property));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QTextEdit_inputMethodQuery1(QTextEdit const * this_ptr, Qt::InputMethodQuery query, QVariant const * argument) {
  return new QVariant(this_ptr->inputMethodQuery(query, *argument));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setFontPointSize(QTextEdit * this_ptr, double s) {
  this_ptr->setFontPointSize(s);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setFontFamily(QTextEdit * this_ptr, QString const * fontFamily) {
  this_ptr->setFontFamily(*fontFamily);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setFontWeight(QTextEdit * this_ptr, int w) {
  this_ptr->setFontWeight(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setFontUnderline(QTextEdit * this_ptr, bool b) {
  this_ptr->setFontUnderline(b);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setFontItalic(QTextEdit * this_ptr, bool b) {
  this_ptr->setFontItalic(b);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setTextColor(QTextEdit * this_ptr, QColor const * c) {
  this_ptr->setTextColor(*c);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setTextBackgroundColor(QTextEdit * this_ptr, QColor const * c) {
  this_ptr->setTextBackgroundColor(*c);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setCurrentFont(QTextEdit * this_ptr, QFont const * f) {
  this_ptr->setCurrentFont(*f);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setAlignment(QTextEdit * this_ptr, int a) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(a));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setPlainText(QTextEdit * this_ptr, QString const * text) {
  this_ptr->setPlainText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setHtml(QTextEdit * this_ptr, QString const * text) {
  this_ptr->setHtml(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setMarkdown(QTextEdit * this_ptr, QString const * markdown) {
  this_ptr->setMarkdown(*markdown);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_setText(QTextEdit * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_cut(QTextEdit * this_ptr) {
  this_ptr->cut();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_copy(QTextEdit * this_ptr) {
  this_ptr->copy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_paste(QTextEdit * this_ptr) {
  this_ptr->paste();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_undo(QTextEdit * this_ptr) {
  this_ptr->undo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_redo(QTextEdit * this_ptr) {
  this_ptr->redo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_clear(QTextEdit * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_selectAll(QTextEdit * this_ptr) {
  this_ptr->selectAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_insertPlainText(QTextEdit * this_ptr, QString const * text) {
  this_ptr->insertPlainText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_insertHtml(QTextEdit * this_ptr, QString const * text) {
  this_ptr->insertHtml(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_append(QTextEdit * this_ptr, QString const * text) {
  this_ptr->append(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_scrollToAnchor(QTextEdit * this_ptr, QString const * name) {
  this_ptr->scrollToAnchor(*name);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_zoomIn(QTextEdit * this_ptr, int range) {
  this_ptr->zoomIn(range);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_zoomOut(QTextEdit * this_ptr, int range) {
  this_ptr->zoomOut(range);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPlainTextEdit_metaObject(QPlainTextEdit const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QPlainTextEdit_qt_metacast(QPlainTextEdit * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextEdit_qt_metacall(QPlainTextEdit * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextEdit_tr(char const * s, char const * c, int n) {
  return new QString(QPlainTextEdit::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextEdit_trUtf8(char const * s, char const * c, int n) {
  return new QString(QPlainTextEdit::trUtf8(s, c, n));
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_QPlainTextEdit_QPlainTextEdit(QWidget * parent) {
  return new QPlainTextEdit(parent);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_QPlainTextEdit_QPlainTextEdit1(QString const * text, QWidget * parent) {
  return new QPlainTextEdit(*text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_dQPlainTextEdit(QPlainTextEdit * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setDocument(QPlainTextEdit * this_ptr, QTextDocument * document) {
  this_ptr->setDocument(document);
}


RITUAL_EXPORT QTextDocument * ctr_qt_widgets_ffi_QPlainTextEdit_document(QPlainTextEdit const * this_ptr) {
  return this_ptr->document();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setPlaceholderText(QPlainTextEdit * this_ptr, QString const * placeholderText) {
  this_ptr->setPlaceholderText(*placeholderText);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextEdit_placeholderText(QPlainTextEdit const * this_ptr) {
  return new QString(this_ptr->placeholderText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setTextCursor(QPlainTextEdit * this_ptr, QTextCursor const * cursor) {
  this_ptr->setTextCursor(*cursor);
}


RITUAL_EXPORT QTextCursor * ctr_qt_widgets_ffi_QPlainTextEdit_textCursor(QPlainTextEdit const * this_ptr) {
  return new QTextCursor(this_ptr->textCursor());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_isReadOnly(QPlainTextEdit const * this_ptr) {
  return this_ptr->isReadOnly();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setReadOnly(QPlainTextEdit * this_ptr, bool ro) {
  this_ptr->setReadOnly(ro);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setTextInteractionFlags(QPlainTextEdit * this_ptr, int flags) {
  this_ptr->setTextInteractionFlags(QFlags< Qt::TextInteractionFlag >(flags));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextEdit_textInteractionFlags(QPlainTextEdit const * this_ptr) {
  return int(this_ptr->textInteractionFlags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_mergeCurrentCharFormat(QPlainTextEdit * this_ptr, QTextCharFormat const * modifier) {
  this_ptr->mergeCurrentCharFormat(*modifier);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setCurrentCharFormat(QPlainTextEdit * this_ptr, QTextCharFormat const * format) {
  this_ptr->setCurrentCharFormat(*format);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QPlainTextEdit_currentCharFormat(QPlainTextEdit const * this_ptr) {
  return new QTextCharFormat(this_ptr->currentCharFormat());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_tabChangesFocus(QPlainTextEdit const * this_ptr) {
  return this_ptr->tabChangesFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setTabChangesFocus(QPlainTextEdit * this_ptr, bool b) {
  this_ptr->setTabChangesFocus(b);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setDocumentTitle(QPlainTextEdit * this_ptr, QString const * title) {
  this_ptr->setDocumentTitle(*title);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextEdit_documentTitle(QPlainTextEdit const * this_ptr) {
  return new QString(this_ptr->documentTitle());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_isUndoRedoEnabled(QPlainTextEdit const * this_ptr) {
  return this_ptr->isUndoRedoEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setUndoRedoEnabled(QPlainTextEdit * this_ptr, bool enable) {
  this_ptr->setUndoRedoEnabled(enable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setMaximumBlockCount(QPlainTextEdit * this_ptr, int maximum) {
  this_ptr->setMaximumBlockCount(maximum);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextEdit_maximumBlockCount(QPlainTextEdit const * this_ptr) {
  return this_ptr->maximumBlockCount();
}


RITUAL_EXPORT QPlainTextEdit::LineWrapMode ctr_qt_widgets_ffi_QPlainTextEdit_lineWrapMode(QPlainTextEdit const * this_ptr) {
  return this_ptr->lineWrapMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setLineWrapMode(QPlainTextEdit * this_ptr, QPlainTextEdit::LineWrapMode mode) {
  this_ptr->setLineWrapMode(mode);
}


RITUAL_EXPORT QTextOption::WrapMode ctr_qt_widgets_ffi_QPlainTextEdit_wordWrapMode(QPlainTextEdit const * this_ptr) {
  return this_ptr->wordWrapMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setWordWrapMode(QPlainTextEdit * this_ptr, QTextOption::WrapMode policy) {
  this_ptr->setWordWrapMode(policy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setBackgroundVisible(QPlainTextEdit * this_ptr, bool visible) {
  this_ptr->setBackgroundVisible(visible);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_backgroundVisible(QPlainTextEdit const * this_ptr) {
  return this_ptr->backgroundVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setCenterOnScroll(QPlainTextEdit * this_ptr, bool enabled) {
  this_ptr->setCenterOnScroll(enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_centerOnScroll(QPlainTextEdit const * this_ptr) {
  return this_ptr->centerOnScroll();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_find(QPlainTextEdit * this_ptr, QString const * exp, int options) {
  return this_ptr->find(*exp, QFlags< QTextDocument::FindFlag >(options));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_find1(QPlainTextEdit * this_ptr, QRegExp const * exp, int options) {
  return this_ptr->find(*exp, QFlags< QTextDocument::FindFlag >(options));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_find2(QPlainTextEdit * this_ptr, QRegularExpression const * exp, int options) {
  return this_ptr->find(*exp, QFlags< QTextDocument::FindFlag >(options));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextEdit_toPlainText(QPlainTextEdit const * this_ptr) {
  return new QString(this_ptr->toPlainText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_ensureCursorVisible(QPlainTextEdit * this_ptr) {
  this_ptr->ensureCursorVisible();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QPlainTextEdit_loadResource(QPlainTextEdit * this_ptr, int type, QUrl const * name) {
  return new QVariant(this_ptr->loadResource(type, *name));
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QPlainTextEdit_createStandardContextMenu(QPlainTextEdit * this_ptr) {
  return this_ptr->createStandardContextMenu();
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QPlainTextEdit_createStandardContextMenu1(QPlainTextEdit * this_ptr, QPoint const * position) {
  return this_ptr->createStandardContextMenu(*position);
}


RITUAL_EXPORT QTextCursor * ctr_qt_widgets_ffi_QPlainTextEdit_cursorForPosition(QPlainTextEdit const * this_ptr, QPoint const * pos) {
  return new QTextCursor(this_ptr->cursorForPosition(*pos));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QPlainTextEdit_cursorRect(QPlainTextEdit const * this_ptr, QTextCursor const * cursor) {
  return new QRect(this_ptr->cursorRect(*cursor));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QPlainTextEdit_cursorRect1(QPlainTextEdit const * this_ptr) {
  return new QRect(this_ptr->cursorRect());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextEdit_anchorAt(QPlainTextEdit const * this_ptr, QPoint const * pos) {
  return new QString(this_ptr->anchorAt(*pos));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_overwriteMode(QPlainTextEdit const * this_ptr) {
  return this_ptr->overwriteMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setOverwriteMode(QPlainTextEdit * this_ptr, bool overwrite) {
  this_ptr->setOverwriteMode(overwrite);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextEdit_tabStopWidth(QPlainTextEdit const * this_ptr) {
  return this_ptr->tabStopWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setTabStopWidth(QPlainTextEdit * this_ptr, int width) {
  this_ptr->setTabStopWidth(width);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QPlainTextEdit_tabStopDistance(QPlainTextEdit const * this_ptr) {
  return this_ptr->tabStopDistance();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setTabStopDistance(QPlainTextEdit * this_ptr, double distance) {
  this_ptr->setTabStopDistance(distance);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextEdit_cursorWidth(QPlainTextEdit const * this_ptr) {
  return this_ptr->cursorWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setCursorWidth(QPlainTextEdit * this_ptr, int width) {
  this_ptr->setCursorWidth(width);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setExtraSelections(QPlainTextEdit * this_ptr, QList< QTextEdit::ExtraSelection > const * selections) {
  this_ptr->setExtraSelections(*selections);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QPlainTextEdit_extraSelections(QPlainTextEdit const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >(this_ptr->extraSelections());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_moveCursor(QPlainTextEdit * this_ptr, QTextCursor::MoveOperation operation, QTextCursor::MoveMode mode) {
  this_ptr->moveCursor(operation, mode);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_canPaste(QPlainTextEdit const * this_ptr) {
  return this_ptr->canPaste();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_print(QPlainTextEdit const * this_ptr, QPagedPaintDevice * printer) {
  this_ptr->print(printer);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextEdit_blockCount(QPlainTextEdit const * this_ptr) {
  return this_ptr->blockCount();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QPlainTextEdit_inputMethodQuery(QPlainTextEdit const * this_ptr, Qt::InputMethodQuery property) {
  return new QVariant(this_ptr->inputMethodQuery(property));
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QPlainTextEdit_inputMethodQuery1(QPlainTextEdit const * this_ptr, Qt::InputMethodQuery query, QVariant const * argument) {
  return new QVariant(this_ptr->inputMethodQuery(query, *argument));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_setPlainText(QPlainTextEdit * this_ptr, QString const * text) {
  this_ptr->setPlainText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_cut(QPlainTextEdit * this_ptr) {
  this_ptr->cut();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_copy(QPlainTextEdit * this_ptr) {
  this_ptr->copy();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_paste(QPlainTextEdit * this_ptr) {
  this_ptr->paste();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_undo(QPlainTextEdit * this_ptr) {
  this_ptr->undo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_redo(QPlainTextEdit * this_ptr) {
  this_ptr->redo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_clear(QPlainTextEdit * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_selectAll(QPlainTextEdit * this_ptr) {
  this_ptr->selectAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_insertPlainText(QPlainTextEdit * this_ptr, QString const * text) {
  this_ptr->insertPlainText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_appendPlainText(QPlainTextEdit * this_ptr, QString const * text) {
  this_ptr->appendPlainText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_appendHtml(QPlainTextEdit * this_ptr, QString const * html) {
  this_ptr->appendHtml(*html);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_centerCursor(QPlainTextEdit * this_ptr) {
  this_ptr->centerCursor();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_zoomIn(QPlainTextEdit * this_ptr, int range) {
  this_ptr->zoomIn(range);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_zoomOut(QPlainTextEdit * this_ptr, int range) {
  this_ptr->zoomOut(range);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_metaObject(QPlainTextDocumentLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_qt_metacast(QPlainTextDocumentLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextDocumentLayout_qt_metacall(QPlainTextDocumentLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_tr(char const * s, char const * c, int n) {
  return new QString(QPlainTextDocumentLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QPlainTextDocumentLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT QPlainTextDocumentLayout * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_QPlainTextDocumentLayout(QTextDocument * document) {
  return new QPlainTextDocumentLayout(document);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextDocumentLayout_dQPlainTextDocumentLayout(QPlainTextDocumentLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextDocumentLayout_draw(QPlainTextDocumentLayout * this_ptr, QPainter * arg1, QAbstractTextDocumentLayout::PaintContext const * arg2) {
  this_ptr->draw(arg1, *arg2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextDocumentLayout_hitTest(QPlainTextDocumentLayout const * this_ptr, QPointF const * arg1, Qt::HitTestAccuracy arg2) {
  return this_ptr->hitTest(*arg1, arg2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextDocumentLayout_pageCount(QPlainTextDocumentLayout const * this_ptr) {
  return this_ptr->pageCount();
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_documentSize(QPlainTextDocumentLayout const * this_ptr) {
  return new QSizeF(this_ptr->documentSize());
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_frameBoundingRect(QPlainTextDocumentLayout const * this_ptr, QTextFrame * arg1) {
  return new QRectF(this_ptr->frameBoundingRect(arg1));
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QPlainTextDocumentLayout_blockBoundingRect(QPlainTextDocumentLayout const * this_ptr, QTextBlock const * block) {
  return new QRectF(this_ptr->blockBoundingRect(*block));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextDocumentLayout_ensureBlockLayout(QPlainTextDocumentLayout const * this_ptr, QTextBlock const * block) {
  this_ptr->ensureBlockLayout(*block);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextDocumentLayout_setCursorWidth(QPlainTextDocumentLayout * this_ptr, int width) {
  this_ptr->setCursorWidth(width);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QPlainTextDocumentLayout_cursorWidth(QPlainTextDocumentLayout const * this_ptr) {
  return this_ptr->cursorWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextDocumentLayout_requestUpdate(QPlainTextDocumentLayout * this_ptr) {
  this_ptr->requestUpdate();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QProgressBar_metaObject(QProgressBar const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QProgressBar_qt_metacast(QProgressBar * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressBar_qt_metacall(QProgressBar * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProgressBar_tr(char const * s, char const * c, int n) {
  return new QString(QProgressBar::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProgressBar_trUtf8(char const * s, char const * c, int n) {
  return new QString(QProgressBar::trUtf8(s, c, n));
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_QProgressBar_QProgressBar(QWidget * parent) {
  return new QProgressBar(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_dQProgressBar(QProgressBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressBar_minimum(QProgressBar const * this_ptr) {
  return this_ptr->minimum();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressBar_maximum(QProgressBar const * this_ptr) {
  return this_ptr->maximum();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressBar_value(QProgressBar const * this_ptr) {
  return this_ptr->value();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProgressBar_text(QProgressBar const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setTextVisible(QProgressBar * this_ptr, bool visible) {
  this_ptr->setTextVisible(visible);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QProgressBar_isTextVisible(QProgressBar const * this_ptr) {
  return this_ptr->isTextVisible();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressBar_alignment(QProgressBar const * this_ptr) {
  return int(this_ptr->alignment());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setAlignment(QProgressBar * this_ptr, int alignment) {
  this_ptr->setAlignment(QFlags< Qt::AlignmentFlag >(alignment));
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QProgressBar_sizeHint(QProgressBar const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QProgressBar_minimumSizeHint(QProgressBar const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QProgressBar_orientation(QProgressBar const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setInvertedAppearance(QProgressBar * this_ptr, bool invert) {
  this_ptr->setInvertedAppearance(invert);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QProgressBar_invertedAppearance(QProgressBar const * this_ptr) {
  return this_ptr->invertedAppearance();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setTextDirection(QProgressBar * this_ptr, QProgressBar::Direction textDirection) {
  this_ptr->setTextDirection(textDirection);
}


RITUAL_EXPORT QProgressBar::Direction ctr_qt_widgets_ffi_QProgressBar_textDirection(QProgressBar const * this_ptr) {
  return this_ptr->textDirection();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setFormat(QProgressBar * this_ptr, QString const * format) {
  this_ptr->setFormat(*format);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_resetFormat(QProgressBar * this_ptr) {
  this_ptr->resetFormat();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProgressBar_format(QProgressBar const * this_ptr) {
  return new QString(this_ptr->format());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_reset(QProgressBar * this_ptr) {
  this_ptr->reset();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setRange(QProgressBar * this_ptr, int minimum, int maximum) {
  this_ptr->setRange(minimum, maximum);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setMinimum(QProgressBar * this_ptr, int minimum) {
  this_ptr->setMinimum(minimum);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setMaximum(QProgressBar * this_ptr, int maximum) {
  this_ptr->setMaximum(maximum);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setValue(QProgressBar * this_ptr, int value) {
  this_ptr->setValue(value);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressBar_setOrientation(QProgressBar * this_ptr, Qt::Orientation arg1) {
  this_ptr->setOrientation(arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QProgressDialog_metaObject(QProgressDialog const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QProgressDialog_qt_metacast(QProgressDialog * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressDialog_qt_metacall(QProgressDialog * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProgressDialog_tr(char const * s, char const * c, int n) {
  return new QString(QProgressDialog::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProgressDialog_trUtf8(char const * s, char const * c, int n) {
  return new QString(QProgressDialog::trUtf8(s, c, n));
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_QProgressDialog_QProgressDialog(QWidget * parent, int flags) {
  return new QProgressDialog(parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_QProgressDialog_QProgressDialog1(QString const * labelText, QString const * cancelButtonText, int minimum, int maximum, QWidget * parent, int flags) {
  return new QProgressDialog(*labelText, *cancelButtonText, minimum, maximum, parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_dQProgressDialog(QProgressDialog * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setLabel(QProgressDialog * this_ptr, QLabel * label) {
  this_ptr->setLabel(label);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setCancelButton(QProgressDialog * this_ptr, QPushButton * button) {
  this_ptr->setCancelButton(button);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setBar(QProgressDialog * this_ptr, QProgressBar * bar) {
  this_ptr->setBar(bar);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QProgressDialog_wasCanceled(QProgressDialog const * this_ptr) {
  return this_ptr->wasCanceled();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressDialog_minimum(QProgressDialog const * this_ptr) {
  return this_ptr->minimum();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressDialog_maximum(QProgressDialog const * this_ptr) {
  return this_ptr->maximum();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressDialog_value(QProgressDialog const * this_ptr) {
  return this_ptr->value();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QProgressDialog_sizeHint(QProgressDialog const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProgressDialog_labelText(QProgressDialog const * this_ptr) {
  return new QString(this_ptr->labelText());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProgressDialog_minimumDuration(QProgressDialog const * this_ptr) {
  return this_ptr->minimumDuration();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setAutoReset(QProgressDialog * this_ptr, bool reset) {
  this_ptr->setAutoReset(reset);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QProgressDialog_autoReset(QProgressDialog const * this_ptr) {
  return this_ptr->autoReset();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setAutoClose(QProgressDialog * this_ptr, bool close) {
  this_ptr->setAutoClose(close);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QProgressDialog_autoClose(QProgressDialog const * this_ptr) {
  return this_ptr->autoClose();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_open(QProgressDialog * this_ptr, QObject * receiver, char const * member) {
  this_ptr->open(receiver, member);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_cancel(QProgressDialog * this_ptr) {
  this_ptr->cancel();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_reset(QProgressDialog * this_ptr) {
  this_ptr->reset();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setMaximum(QProgressDialog * this_ptr, int maximum) {
  this_ptr->setMaximum(maximum);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setMinimum(QProgressDialog * this_ptr, int minimum) {
  this_ptr->setMinimum(minimum);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setRange(QProgressDialog * this_ptr, int minimum, int maximum) {
  this_ptr->setRange(minimum, maximum);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setValue(QProgressDialog * this_ptr, int progress) {
  this_ptr->setValue(progress);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setLabelText(QProgressDialog * this_ptr, QString const * text) {
  this_ptr->setLabelText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setCancelButtonText(QProgressDialog * this_ptr, QString const * text) {
  this_ptr->setCancelButtonText(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProgressDialog_setMinimumDuration(QProgressDialog * this_ptr, int ms) {
  this_ptr->setMinimumDuration(ms);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QProxyStyle_metaObject(QProxyStyle const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QProxyStyle_qt_metacast(QProxyStyle * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_qt_metacall(QProxyStyle * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProxyStyle_tr(char const * s, char const * c, int n) {
  return new QString(QProxyStyle::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QProxyStyle_trUtf8(char const * s, char const * c, int n) {
  return new QString(QProxyStyle::trUtf8(s, c, n));
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_QProxyStyle_QProxyStyle(QStyle * style) {
  return new QProxyStyle(style);
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_QProxyStyle_QProxyStyle1(QString const * key) {
  return new QProxyStyle(*key);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_dQProxyStyle(QProxyStyle * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QProxyStyle_baseStyle(QProxyStyle const * this_ptr) {
  return this_ptr->baseStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_setBaseStyle(QProxyStyle * this_ptr, QStyle * style) {
  this_ptr->setBaseStyle(style);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawPrimitive(QProxyStyle const * this_ptr, QStyle::PrimitiveElement element, QStyleOption const * option, QPainter * painter, QWidget const * widget) {
  this_ptr->drawPrimitive(element, option, painter, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawControl(QProxyStyle const * this_ptr, QStyle::ControlElement element, QStyleOption const * option, QPainter * painter, QWidget const * widget) {
  this_ptr->drawControl(element, option, painter, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawComplexControl(QProxyStyle const * this_ptr, QStyle::ComplexControl control, QStyleOptionComplex const * option, QPainter * painter, QWidget const * widget) {
  this_ptr->drawComplexControl(control, option, painter, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawItemText(QProxyStyle const * this_ptr, QPainter * painter, QRect const * rect, int flags, QPalette const * pal, bool enabled, QString const * text, QPalette::ColorRole textRole) {
  this_ptr->drawItemText(painter, *rect, flags, *pal, enabled, *text, textRole);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawItemPixmap(QProxyStyle const * this_ptr, QPainter * painter, QRect const * rect, int alignment, QPixmap const * pixmap) {
  this_ptr->drawItemPixmap(painter, *rect, alignment, *pixmap);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QProxyStyle_sizeFromContents(QProxyStyle const * this_ptr, QStyle::ContentsType type, QStyleOption const * option, QSize const * size, QWidget const * widget) {
  return new QSize(this_ptr->sizeFromContents(type, option, *size, widget));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QProxyStyle_subElementRect(QProxyStyle const * this_ptr, QStyle::SubElement element, QStyleOption const * option, QWidget const * widget) {
  return new QRect(this_ptr->subElementRect(element, option, widget));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QProxyStyle_subControlRect(QProxyStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QStyle::SubControl sc, QWidget const * widget) {
  return new QRect(this_ptr->subControlRect(cc, opt, sc, widget));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QProxyStyle_itemTextRect(QProxyStyle const * this_ptr, QFontMetrics const * fm, QRect const * r, int flags, bool enabled, QString const * text) {
  return new QRect(this_ptr->itemTextRect(*fm, *r, flags, enabled, *text));
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QProxyStyle_itemPixmapRect(QProxyStyle const * this_ptr, QRect const * r, int flags, QPixmap const * pixmap) {
  return new QRect(this_ptr->itemPixmapRect(*r, flags, *pixmap));
}


RITUAL_EXPORT QStyle::SubControl ctr_qt_widgets_ffi_QProxyStyle_hitTestComplexControl(QProxyStyle const * this_ptr, QStyle::ComplexControl control, QStyleOptionComplex const * option, QPoint const * pos, QWidget const * widget) {
  return this_ptr->hitTestComplexControl(control, option, *pos, widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_styleHint(QProxyStyle const * this_ptr, QStyle::StyleHint hint, QStyleOption const * option, QWidget const * widget, QStyleHintReturn * returnData) {
  return this_ptr->styleHint(hint, option, widget, returnData);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_pixelMetric(QProxyStyle const * this_ptr, QStyle::PixelMetric metric, QStyleOption const * option, QWidget const * widget) {
  return this_ptr->pixelMetric(metric, option, widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_layoutSpacing(QProxyStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, QStyleOption const * option, QWidget const * widget) {
  return this_ptr->layoutSpacing(control1, control2, orientation, option, widget);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QProxyStyle_standardIcon(QProxyStyle const * this_ptr, QStyle::StandardPixmap standardIcon, QStyleOption const * option, QWidget const * widget) {
  return new QIcon(this_ptr->standardIcon(standardIcon, option, widget));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QProxyStyle_standardPixmap(QProxyStyle const * this_ptr, QStyle::StandardPixmap standardPixmap, QStyleOption const * opt, QWidget const * widget) {
  return new QPixmap(this_ptr->standardPixmap(standardPixmap, opt, widget));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QProxyStyle_generatedIconPixmap(QProxyStyle const * this_ptr, QIcon::Mode iconMode, QPixmap const * pixmap, QStyleOption const * opt) {
  return new QPixmap(this_ptr->generatedIconPixmap(iconMode, *pixmap, opt));
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QProxyStyle_standardPalette(QProxyStyle const * this_ptr) {
  return new QPalette(this_ptr->standardPalette());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_polish(QProxyStyle * this_ptr, QWidget * widget) {
  this_ptr->polish(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_polish1(QProxyStyle * this_ptr, QPalette * pal) {
  this_ptr->polish(*pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_polish2(QProxyStyle * this_ptr, QApplication * app) {
  this_ptr->polish(app);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_unpolish(QProxyStyle * this_ptr, QWidget * widget) {
  this_ptr->unpolish(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_unpolish1(QProxyStyle * this_ptr, QApplication * app) {
  this_ptr->unpolish(app);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QRadioButton_metaObject(QRadioButton const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QRadioButton_qt_metacast(QRadioButton * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QRadioButton_qt_metacall(QRadioButton * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QRadioButton_tr(char const * s, char const * c, int n) {
  return new QString(QRadioButton::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QRadioButton_trUtf8(char const * s, char const * c, int n) {
  return new QString(QRadioButton::trUtf8(s, c, n));
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_QRadioButton_QRadioButton(QWidget * parent) {
  return new QRadioButton(parent);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_QRadioButton_QRadioButton1(QString const * text, QWidget * parent) {
  return new QRadioButton(*text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QRadioButton_dQRadioButton(QRadioButton * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QRadioButton_sizeHint(QRadioButton const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QRadioButton_minimumSizeHint(QRadioButton const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QScrollBar_metaObject(QScrollBar const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QScrollBar_qt_metacast(QScrollBar * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QScrollBar_qt_metacall(QScrollBar * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QScrollBar_tr(char const * s, char const * c, int n) {
  return new QString(QScrollBar::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QScrollBar_trUtf8(char const * s, char const * c, int n) {
  return new QString(QScrollBar::trUtf8(s, c, n));
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_QScrollBar_QScrollBar(QWidget * parent) {
  return new QScrollBar(parent);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_QScrollBar_QScrollBar1(Qt::Orientation arg1, QWidget * parent) {
  return new QScrollBar(arg1, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollBar_dQScrollBar(QScrollBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QScrollBar_sizeHint(QScrollBar const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QScrollBar_event(QScrollBar * this_ptr, QEvent * event) {
  return this_ptr->event(event);
}


RITUAL_EXPORT QScrollerProperties * ctr_qt_widgets_ffi_QScrollerProperties_QScrollerProperties() {
  return new QScrollerProperties();
}


RITUAL_EXPORT QScrollerProperties * ctr_qt_widgets_ffi_QScrollerProperties_QScrollerProperties1(QScrollerProperties const * sp) {
  return new QScrollerProperties(*sp);
}


RITUAL_EXPORT QScrollerProperties * ctr_qt_widgets_ffi_QScrollerProperties_operator_(QScrollerProperties * this_ptr, QScrollerProperties const * sp) {
  return &this_ptr->operator=(*sp);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollerProperties_dQScrollerProperties(QScrollerProperties * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QScrollerProperties_operator__(QScrollerProperties const * this_ptr, QScrollerProperties const * sp) {
  return this_ptr->operator==(*sp);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollerProperties_setDefaultScrollerProperties(QScrollerProperties const * sp) {
  QScrollerProperties::setDefaultScrollerProperties(*sp);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollerProperties_unsetDefaultScrollerProperties() {
  QScrollerProperties::unsetDefaultScrollerProperties();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QScrollerProperties_scrollMetric(QScrollerProperties const * this_ptr, QScrollerProperties::ScrollMetric metric) {
  return new QVariant(this_ptr->scrollMetric(metric));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollerProperties_setScrollMetric(QScrollerProperties * this_ptr, QScrollerProperties::ScrollMetric metric, QVariant const * value) {
  this_ptr->setScrollMetric(metric, *value);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QScroller_metaObject(QScroller const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QScroller_qt_metacast(QScroller * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QScroller_qt_metacall(QScroller * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QScroller_tr(char const * s, char const * c, int n) {
  return new QString(QScroller::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QScroller_trUtf8(char const * s, char const * c, int n) {
  return new QString(QScroller::trUtf8(s, c, n));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QScroller_hasScroller(QObject * target) {
  return QScroller::hasScroller(target);
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_QScroller_scroller(QObject * target) {
  return QScroller::scroller(target);
}


RITUAL_EXPORT QScroller const * ctr_qt_widgets_ffi_QScroller_scroller1(QObject const * target) {
  return QScroller::scroller(target);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QScroller_grabGesture(QObject * target, QScroller::ScrollerGestureType gestureType) {
  return QScroller::grabGesture(target, gestureType);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QScroller_grabbedGesture(QObject * target) {
  return QScroller::grabbedGesture(target);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_ungrabGesture(QObject * target) {
  QScroller::ungrabGesture(target);
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QScroller_activeScrollers() {
  return new QList< QScroller * >(QScroller::activeScrollers());
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_QScroller_target(QScroller const * this_ptr) {
  return this_ptr->target();
}


RITUAL_EXPORT QScroller::State ctr_qt_widgets_ffi_QScroller_state(QScroller const * this_ptr) {
  return this_ptr->state();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QScroller_handleInput(QScroller * this_ptr, QScroller::Input input, QPointF const * position, qint64 timestamp) {
  return this_ptr->handleInput(input, *position, timestamp);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_stop(QScroller * this_ptr) {
  this_ptr->stop();
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QScroller_velocity(QScroller const * this_ptr) {
  return new QPointF(this_ptr->velocity());
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QScroller_finalPosition(QScroller const * this_ptr) {
  return new QPointF(this_ptr->finalPosition());
}


RITUAL_EXPORT QPointF * ctr_qt_widgets_ffi_QScroller_pixelPerMeter(QScroller const * this_ptr) {
  return new QPointF(this_ptr->pixelPerMeter());
}


RITUAL_EXPORT QScrollerProperties * ctr_qt_widgets_ffi_QScroller_scrollerProperties(QScroller const * this_ptr) {
  return new QScrollerProperties(this_ptr->scrollerProperties());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_setSnapPositionsX(QScroller * this_ptr, QList< double > const * positions) {
  this_ptr->setSnapPositionsX(*positions);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_setSnapPositionsX1(QScroller * this_ptr, double first, double interval) {
  this_ptr->setSnapPositionsX(first, interval);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_setSnapPositionsY(QScroller * this_ptr, QList< double > const * positions) {
  this_ptr->setSnapPositionsY(*positions);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_setSnapPositionsY1(QScroller * this_ptr, double first, double interval) {
  this_ptr->setSnapPositionsY(first, interval);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_setScrollerProperties(QScroller * this_ptr, QScrollerProperties const * prop) {
  this_ptr->setScrollerProperties(*prop);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_scrollTo(QScroller * this_ptr, QPointF const * pos) {
  this_ptr->scrollTo(*pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_scrollTo1(QScroller * this_ptr, QPointF const * pos, int scrollTime) {
  this_ptr->scrollTo(*pos, scrollTime);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_ensureVisible(QScroller * this_ptr, QRectF const * rect, double xmargin, double ymargin) {
  this_ptr->ensureVisible(*rect, xmargin, ymargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_ensureVisible1(QScroller * this_ptr, QRectF const * rect, double xmargin, double ymargin, int scrollTime) {
  this_ptr->ensureVisible(*rect, xmargin, ymargin, scrollTime);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScroller_resendPrepareEvent(QScroller * this_ptr) {
  this_ptr->resendPrepareEvent();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QShortcut_metaObject(QShortcut const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QShortcut_qt_metacast(QShortcut * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QShortcut_qt_metacall(QShortcut * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QShortcut_tr(char const * s, char const * c, int n) {
  return new QString(QShortcut::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QShortcut_trUtf8(char const * s, char const * c, int n) {
  return new QString(QShortcut::trUtf8(s, c, n));
}


RITUAL_EXPORT QShortcut * ctr_qt_widgets_ffi_QShortcut_QShortcut(QWidget * parent) {
  return new QShortcut(parent);
}


RITUAL_EXPORT QShortcut * ctr_qt_widgets_ffi_QShortcut_QShortcut1(QKeySequence const * key, QWidget * parent, char const * member, char const * ambiguousMember, Qt::ShortcutContext shortcutContext) {
  return new QShortcut(*key, parent, member, ambiguousMember, shortcutContext);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QShortcut_dQShortcut(QShortcut * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QShortcut_setKey(QShortcut * this_ptr, QKeySequence const * key) {
  this_ptr->setKey(*key);
}


RITUAL_EXPORT QKeySequence * ctr_qt_widgets_ffi_QShortcut_key(QShortcut const * this_ptr) {
  return new QKeySequence(this_ptr->key());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QShortcut_setEnabled(QShortcut * this_ptr, bool enable) {
  this_ptr->setEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QShortcut_isEnabled(QShortcut const * this_ptr) {
  return this_ptr->isEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QShortcut_setContext(QShortcut * this_ptr, Qt::ShortcutContext context) {
  this_ptr->setContext(context);
}


RITUAL_EXPORT Qt::ShortcutContext ctr_qt_widgets_ffi_QShortcut_context(QShortcut const * this_ptr) {
  return this_ptr->context();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QShortcut_setWhatsThis(QShortcut * this_ptr, QString const * text) {
  this_ptr->setWhatsThis(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QShortcut_whatsThis(QShortcut const * this_ptr) {
  return new QString(this_ptr->whatsThis());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QShortcut_setAutoRepeat(QShortcut * this_ptr, bool on) {
  this_ptr->setAutoRepeat(on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QShortcut_autoRepeat(QShortcut const * this_ptr) {
  return this_ptr->autoRepeat();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QShortcut_id(QShortcut const * this_ptr) {
  return this_ptr->id();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QShortcut_parentWidget(QShortcut const * this_ptr) {
  return this_ptr->parentWidget();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSizeGrip_metaObject(QSizeGrip const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSizeGrip_qt_metacast(QSizeGrip * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSizeGrip_qt_metacall(QSizeGrip * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSizeGrip_tr(char const * s, char const * c, int n) {
  return new QString(QSizeGrip::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSizeGrip_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSizeGrip::trUtf8(s, c, n));
}


RITUAL_EXPORT QSizeGrip * ctr_qt_widgets_ffi_QSizeGrip_QSizeGrip(QWidget * parent) {
  return new QSizeGrip(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizeGrip_dQSizeGrip(QSizeGrip * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSizeGrip_sizeHint(QSizeGrip const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizeGrip_setVisible(QSizeGrip * this_ptr, bool arg1) {
  this_ptr->setVisible(arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSpinBox_metaObject(QSpinBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSpinBox_qt_metacast(QSpinBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSpinBox_qt_metacall(QSpinBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSpinBox_tr(char const * s, char const * c, int n) {
  return new QString(QSpinBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSpinBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSpinBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_QSpinBox_QSpinBox(QWidget * parent) {
  return new QSpinBox(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_dQSpinBox(QSpinBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSpinBox_value(QSpinBox const * this_ptr) {
  return this_ptr->value();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSpinBox_prefix(QSpinBox const * this_ptr) {
  return new QString(this_ptr->prefix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setPrefix(QSpinBox * this_ptr, QString const * prefix) {
  this_ptr->setPrefix(*prefix);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSpinBox_suffix(QSpinBox const * this_ptr) {
  return new QString(this_ptr->suffix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setSuffix(QSpinBox * this_ptr, QString const * suffix) {
  this_ptr->setSuffix(*suffix);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSpinBox_cleanText(QSpinBox const * this_ptr) {
  return new QString(this_ptr->cleanText());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSpinBox_singleStep(QSpinBox const * this_ptr) {
  return this_ptr->singleStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setSingleStep(QSpinBox * this_ptr, int val) {
  this_ptr->setSingleStep(val);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSpinBox_minimum(QSpinBox const * this_ptr) {
  return this_ptr->minimum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setMinimum(QSpinBox * this_ptr, int min) {
  this_ptr->setMinimum(min);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSpinBox_maximum(QSpinBox const * this_ptr) {
  return this_ptr->maximum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setMaximum(QSpinBox * this_ptr, int max) {
  this_ptr->setMaximum(max);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setRange(QSpinBox * this_ptr, int min, int max) {
  this_ptr->setRange(min, max);
}


RITUAL_EXPORT QAbstractSpinBox::StepType ctr_qt_widgets_ffi_QSpinBox_stepType(QSpinBox const * this_ptr) {
  return this_ptr->stepType();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setStepType(QSpinBox * this_ptr, QAbstractSpinBox::StepType stepType) {
  this_ptr->setStepType(stepType);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSpinBox_displayIntegerBase(QSpinBox const * this_ptr) {
  return this_ptr->displayIntegerBase();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setDisplayIntegerBase(QSpinBox * this_ptr, int base) {
  this_ptr->setDisplayIntegerBase(base);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpinBox_setValue(QSpinBox * this_ptr, int val) {
  this_ptr->setValue(val);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QDoubleSpinBox_metaObject(QDoubleSpinBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QDoubleSpinBox_qt_metacast(QDoubleSpinBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDoubleSpinBox_qt_metacall(QDoubleSpinBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDoubleSpinBox_tr(char const * s, char const * c, int n) {
  return new QString(QDoubleSpinBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDoubleSpinBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QDoubleSpinBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_QDoubleSpinBox_QDoubleSpinBox(QWidget * parent) {
  return new QDoubleSpinBox(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_dQDoubleSpinBox(QDoubleSpinBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QDoubleSpinBox_value(QDoubleSpinBox const * this_ptr) {
  return this_ptr->value();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDoubleSpinBox_prefix(QDoubleSpinBox const * this_ptr) {
  return new QString(this_ptr->prefix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setPrefix(QDoubleSpinBox * this_ptr, QString const * prefix) {
  this_ptr->setPrefix(*prefix);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDoubleSpinBox_suffix(QDoubleSpinBox const * this_ptr) {
  return new QString(this_ptr->suffix());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setSuffix(QDoubleSpinBox * this_ptr, QString const * suffix) {
  this_ptr->setSuffix(*suffix);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDoubleSpinBox_cleanText(QDoubleSpinBox const * this_ptr) {
  return new QString(this_ptr->cleanText());
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QDoubleSpinBox_singleStep(QDoubleSpinBox const * this_ptr) {
  return this_ptr->singleStep();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setSingleStep(QDoubleSpinBox * this_ptr, double val) {
  this_ptr->setSingleStep(val);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QDoubleSpinBox_minimum(QDoubleSpinBox const * this_ptr) {
  return this_ptr->minimum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setMinimum(QDoubleSpinBox * this_ptr, double min) {
  this_ptr->setMinimum(min);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QDoubleSpinBox_maximum(QDoubleSpinBox const * this_ptr) {
  return this_ptr->maximum();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setMaximum(QDoubleSpinBox * this_ptr, double max) {
  this_ptr->setMaximum(max);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setRange(QDoubleSpinBox * this_ptr, double min, double max) {
  this_ptr->setRange(min, max);
}


RITUAL_EXPORT QAbstractSpinBox::StepType ctr_qt_widgets_ffi_QDoubleSpinBox_stepType(QDoubleSpinBox const * this_ptr) {
  return this_ptr->stepType();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setStepType(QDoubleSpinBox * this_ptr, QAbstractSpinBox::StepType stepType) {
  this_ptr->setStepType(stepType);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDoubleSpinBox_decimals(QDoubleSpinBox const * this_ptr) {
  return this_ptr->decimals();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setDecimals(QDoubleSpinBox * this_ptr, int prec) {
  this_ptr->setDecimals(prec);
}


RITUAL_EXPORT QValidator::State ctr_qt_widgets_ffi_QDoubleSpinBox_validate(QDoubleSpinBox const * this_ptr, QString * input, int * pos) {
  return this_ptr->validate(*input, *pos);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QDoubleSpinBox_valueFromText(QDoubleSpinBox const * this_ptr, QString const * text) {
  return this_ptr->valueFromText(*text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QDoubleSpinBox_textFromValue(QDoubleSpinBox const * this_ptr, double val) {
  return new QString(this_ptr->textFromValue(val));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_fixup(QDoubleSpinBox const * this_ptr, QString * str) {
  this_ptr->fixup(*str);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDoubleSpinBox_setValue(QDoubleSpinBox * this_ptr, double val) {
  this_ptr->setValue(val);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSplashScreen_metaObject(QSplashScreen const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSplashScreen_qt_metacast(QSplashScreen * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSplashScreen_qt_metacall(QSplashScreen * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSplashScreen_tr(char const * s, char const * c, int n) {
  return new QString(QSplashScreen::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSplashScreen_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSplashScreen::trUtf8(s, c, n));
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen(QPixmap const * pixmap, int f) {
  return new QSplashScreen(*pixmap, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen1(QScreen * screen, QPixmap const * pixmap, int f) {
  return new QSplashScreen(screen, *pixmap, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen2(QWidget * parent, QPixmap const * pixmap, int f) {
  return new QSplashScreen(parent, *pixmap, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_dQSplashScreen(QSplashScreen * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_setPixmap(QSplashScreen * this_ptr, QPixmap const * pixmap) {
  this_ptr->setPixmap(*pixmap);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QSplashScreen_pixmap(QSplashScreen const * this_ptr) {
  return new QPixmap(this_ptr->pixmap());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_finish(QSplashScreen * this_ptr, QWidget * w) {
  this_ptr->finish(w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_repaint(QSplashScreen * this_ptr) {
  this_ptr->repaint();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSplashScreen_message(QSplashScreen const * this_ptr) {
  return new QString(this_ptr->message());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_showMessage(QSplashScreen * this_ptr, QString const * message, int alignment, QColor const * color) {
  this_ptr->showMessage(*message, alignment, *color);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_clearMessage(QSplashScreen * this_ptr) {
  this_ptr->clearMessage();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSplitter_metaObject(QSplitter const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSplitter_qt_metacast(QSplitter * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSplitter_qt_metacall(QSplitter * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSplitter_tr(char const * s, char const * c, int n) {
  return new QString(QSplitter::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSplitter_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSplitter::trUtf8(s, c, n));
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_QSplitter_QSplitter(QWidget * parent) {
  return new QSplitter(parent);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_QSplitter_QSplitter1(Qt::Orientation arg1, QWidget * parent) {
  return new QSplitter(arg1, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_dQSplitter(QSplitter * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_addWidget(QSplitter * this_ptr, QWidget * widget) {
  this_ptr->addWidget(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_insertWidget(QSplitter * this_ptr, int index, QWidget * widget) {
  this_ptr->insertWidget(index, widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QSplitter_replaceWidget(QSplitter * this_ptr, int index, QWidget * widget) {
  return this_ptr->replaceWidget(index, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setOrientation(QSplitter * this_ptr, Qt::Orientation arg1) {
  this_ptr->setOrientation(arg1);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QSplitter_orientation(QSplitter const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setChildrenCollapsible(QSplitter * this_ptr, bool arg1) {
  this_ptr->setChildrenCollapsible(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSplitter_childrenCollapsible(QSplitter const * this_ptr) {
  return this_ptr->childrenCollapsible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setCollapsible(QSplitter * this_ptr, int index, bool arg2) {
  this_ptr->setCollapsible(index, arg2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSplitter_isCollapsible(QSplitter const * this_ptr, int index) {
  return this_ptr->isCollapsible(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setOpaqueResize(QSplitter * this_ptr, bool opaque) {
  this_ptr->setOpaqueResize(opaque);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSplitter_opaqueResize(QSplitter const * this_ptr) {
  return this_ptr->opaqueResize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_refresh(QSplitter * this_ptr) {
  this_ptr->refresh();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSplitter_sizeHint(QSplitter const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSplitter_minimumSizeHint(QSplitter const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QSplitter_sizes(QSplitter const * this_ptr) {
  return new QList< int >(this_ptr->sizes());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setSizes(QSplitter * this_ptr, QList< int > const * list) {
  this_ptr->setSizes(*list);
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QSplitter_saveState(QSplitter const * this_ptr) {
  return new QByteArray(this_ptr->saveState());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSplitter_restoreState(QSplitter * this_ptr, QByteArray const * state) {
  return this_ptr->restoreState(*state);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSplitter_handleWidth(QSplitter const * this_ptr) {
  return this_ptr->handleWidth();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setHandleWidth(QSplitter * this_ptr, int arg1) {
  this_ptr->setHandleWidth(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSplitter_indexOf(QSplitter const * this_ptr, QWidget * w) {
  return this_ptr->indexOf(w);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QSplitter_widget(QSplitter const * this_ptr, int index) {
  return this_ptr->widget(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSplitter_count(QSplitter const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_getRange(QSplitter const * this_ptr, int index, int * arg2, int * arg3) {
  this_ptr->getRange(index, arg2, arg3);
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_QSplitter_handle(QSplitter const * this_ptr, int index) {
  return this_ptr->handle(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setStretchFactor(QSplitter * this_ptr, int index, int stretch) {
  this_ptr->setStretchFactor(index, stretch);
}


RITUAL_EXPORT QTextStream * ctr_qt_widgets_ffi_operator__16(QTextStream * arg1, QSplitter const * arg2) {
  return &operator<<(*arg1, *arg2);
}


RITUAL_EXPORT QTextStream * ctr_qt_widgets_ffi_operator__17(QTextStream * arg1, QSplitter * arg2) {
  return &operator>>(*arg1, *arg2);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSplitterHandle_metaObject(QSplitterHandle const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSplitterHandle_qt_metacast(QSplitterHandle * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSplitterHandle_qt_metacall(QSplitterHandle * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSplitterHandle_tr(char const * s, char const * c, int n) {
  return new QString(QSplitterHandle::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSplitterHandle_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSplitterHandle::trUtf8(s, c, n));
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_QSplitterHandle_QSplitterHandle(Qt::Orientation o, QSplitter * parent) {
  return new QSplitterHandle(o, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitterHandle_dQSplitterHandle(QSplitterHandle * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitterHandle_setOrientation(QSplitterHandle * this_ptr, Qt::Orientation o) {
  this_ptr->setOrientation(o);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QSplitterHandle_orientation(QSplitterHandle const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSplitterHandle_opaqueResize(QSplitterHandle const * this_ptr) {
  return this_ptr->opaqueResize();
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_QSplitterHandle_splitter(QSplitterHandle const * this_ptr) {
  return this_ptr->splitter();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QSplitterHandle_sizeHint(QSplitterHandle const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStackedLayout_metaObject(QStackedLayout const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QStackedLayout_qt_metacast(QStackedLayout * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedLayout_qt_metacall(QStackedLayout * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStackedLayout_tr(char const * s, char const * c, int n) {
  return new QString(QStackedLayout::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStackedLayout_trUtf8(char const * s, char const * c, int n) {
  return new QString(QStackedLayout::trUtf8(s, c, n));
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_QStackedLayout_QStackedLayout() {
  return new QStackedLayout();
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_QStackedLayout_QStackedLayout1(QWidget * parent) {
  return new QStackedLayout(parent);
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_QStackedLayout_QStackedLayout2(QLayout * parentLayout) {
  return new QStackedLayout(parentLayout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedLayout_dQStackedLayout(QStackedLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedLayout_addWidget(QStackedLayout * this_ptr, QWidget * w) {
  return this_ptr->addWidget(w);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedLayout_insertWidget(QStackedLayout * this_ptr, int index, QWidget * w) {
  return this_ptr->insertWidget(index, w);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QStackedLayout_currentWidget(QStackedLayout const * this_ptr) {
  return this_ptr->currentWidget();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedLayout_currentIndex(QStackedLayout const * this_ptr) {
  return this_ptr->currentIndex();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QStackedLayout_widget(QStackedLayout const * this_ptr, int arg1) {
  return this_ptr->widget(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedLayout_count(QStackedLayout const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QStackedLayout::StackingMode ctr_qt_widgets_ffi_QStackedLayout_stackingMode(QStackedLayout const * this_ptr) {
  return this_ptr->stackingMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedLayout_setStackingMode(QStackedLayout * this_ptr, QStackedLayout::StackingMode stackingMode) {
  this_ptr->setStackingMode(stackingMode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedLayout_addItem(QStackedLayout * this_ptr, QLayoutItem * item) {
  this_ptr->addItem(item);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStackedLayout_sizeHint(QStackedLayout const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStackedLayout_minimumSize(QStackedLayout const * this_ptr) {
  return new QSize(this_ptr->minimumSize());
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QStackedLayout_itemAt(QStackedLayout const * this_ptr, int arg1) {
  return this_ptr->itemAt(arg1);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QStackedLayout_takeAt(QStackedLayout * this_ptr, int arg1) {
  return this_ptr->takeAt(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedLayout_setGeometry(QStackedLayout * this_ptr, QRect const * rect) {
  this_ptr->setGeometry(*rect);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStackedLayout_hasHeightForWidth(QStackedLayout const * this_ptr) {
  return this_ptr->hasHeightForWidth();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedLayout_heightForWidth(QStackedLayout const * this_ptr, int width) {
  return this_ptr->heightForWidth(width);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedLayout_setCurrentIndex(QStackedLayout * this_ptr, int index) {
  this_ptr->setCurrentIndex(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedLayout_setCurrentWidget(QStackedLayout * this_ptr, QWidget * w) {
  this_ptr->setCurrentWidget(w);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStackedWidget_metaObject(QStackedWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QStackedWidget_qt_metacast(QStackedWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedWidget_qt_metacall(QStackedWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStackedWidget_tr(char const * s, char const * c, int n) {
  return new QString(QStackedWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStackedWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QStackedWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_QStackedWidget_QStackedWidget(QWidget * parent) {
  return new QStackedWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedWidget_dQStackedWidget(QStackedWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedWidget_addWidget(QStackedWidget * this_ptr, QWidget * w) {
  return this_ptr->addWidget(w);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedWidget_insertWidget(QStackedWidget * this_ptr, int index, QWidget * w) {
  return this_ptr->insertWidget(index, w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedWidget_removeWidget(QStackedWidget * this_ptr, QWidget * w) {
  this_ptr->removeWidget(w);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QStackedWidget_currentWidget(QStackedWidget const * this_ptr) {
  return this_ptr->currentWidget();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedWidget_currentIndex(QStackedWidget const * this_ptr) {
  return this_ptr->currentIndex();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedWidget_indexOf(QStackedWidget const * this_ptr, QWidget * arg1) {
  return this_ptr->indexOf(arg1);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QStackedWidget_widget(QStackedWidget const * this_ptr, int arg1) {
  return this_ptr->widget(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStackedWidget_count(QStackedWidget const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedWidget_setCurrentIndex(QStackedWidget * this_ptr, int index) {
  this_ptr->setCurrentIndex(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStackedWidget_setCurrentWidget(QStackedWidget * this_ptr, QWidget * w) {
  this_ptr->setCurrentWidget(w);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStatusBar_metaObject(QStatusBar const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QStatusBar_qt_metacast(QStatusBar * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStatusBar_qt_metacall(QStatusBar * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStatusBar_tr(char const * s, char const * c, int n) {
  return new QString(QStatusBar::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStatusBar_trUtf8(char const * s, char const * c, int n) {
  return new QString(QStatusBar::trUtf8(s, c, n));
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_QStatusBar_QStatusBar(QWidget * parent) {
  return new QStatusBar(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_dQStatusBar(QStatusBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_addWidget(QStatusBar * this_ptr, QWidget * widget, int stretch) {
  this_ptr->addWidget(widget, stretch);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStatusBar_insertWidget(QStatusBar * this_ptr, int index, QWidget * widget, int stretch) {
  return this_ptr->insertWidget(index, widget, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_addPermanentWidget(QStatusBar * this_ptr, QWidget * widget, int stretch) {
  this_ptr->addPermanentWidget(widget, stretch);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStatusBar_insertPermanentWidget(QStatusBar * this_ptr, int index, QWidget * widget, int stretch) {
  return this_ptr->insertPermanentWidget(index, widget, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_removeWidget(QStatusBar * this_ptr, QWidget * widget) {
  this_ptr->removeWidget(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_setSizeGripEnabled(QStatusBar * this_ptr, bool arg1) {
  this_ptr->setSizeGripEnabled(arg1);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStatusBar_isSizeGripEnabled(QStatusBar const * this_ptr) {
  return this_ptr->isSizeGripEnabled();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStatusBar_currentMessage(QStatusBar const * this_ptr) {
  return new QString(this_ptr->currentMessage());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_showMessage(QStatusBar * this_ptr, QString const * text, int timeout) {
  this_ptr->showMessage(*text, timeout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_clearMessage(QStatusBar * this_ptr) {
  this_ptr->clearMessage();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStyledItemDelegate_metaObject(QStyledItemDelegate const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QStyledItemDelegate_qt_metacast(QStyledItemDelegate * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyledItemDelegate_qt_metacall(QStyledItemDelegate * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyledItemDelegate_tr(char const * s, char const * c, int n) {
  return new QString(QStyledItemDelegate::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyledItemDelegate_trUtf8(char const * s, char const * c, int n) {
  return new QString(QStyledItemDelegate::trUtf8(s, c, n));
}


RITUAL_EXPORT QStyledItemDelegate * ctr_qt_widgets_ffi_QStyledItemDelegate_QStyledItemDelegate(QObject * parent) {
  return new QStyledItemDelegate(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyledItemDelegate_dQStyledItemDelegate(QStyledItemDelegate * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyledItemDelegate_paint(QStyledItemDelegate const * this_ptr, QPainter * painter, QStyleOptionViewItem const * option, QModelIndex const * index) {
  this_ptr->paint(painter, *option, *index);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyledItemDelegate_sizeHint(QStyledItemDelegate const * this_ptr, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return new QSize(this_ptr->sizeHint(*option, *index));
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QStyledItemDelegate_createEditor(QStyledItemDelegate const * this_ptr, QWidget * parent, QStyleOptionViewItem const * option, QModelIndex const * index) {
  return this_ptr->createEditor(parent, *option, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyledItemDelegate_setEditorData(QStyledItemDelegate const * this_ptr, QWidget * editor, QModelIndex const * index) {
  this_ptr->setEditorData(editor, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyledItemDelegate_setModelData(QStyledItemDelegate const * this_ptr, QWidget * editor, QAbstractItemModel * model, QModelIndex const * index) {
  this_ptr->setModelData(editor, model, *index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyledItemDelegate_updateEditorGeometry(QStyledItemDelegate const * this_ptr, QWidget * editor, QStyleOptionViewItem const * option, QModelIndex const * index) {
  this_ptr->updateEditorGeometry(editor, *option, *index);
}


RITUAL_EXPORT QItemEditorFactory * ctr_qt_widgets_ffi_QStyledItemDelegate_itemEditorFactory(QStyledItemDelegate const * this_ptr) {
  return this_ptr->itemEditorFactory();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyledItemDelegate_setItemEditorFactory(QStyledItemDelegate * this_ptr, QItemEditorFactory * factory) {
  this_ptr->setItemEditorFactory(factory);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStyledItemDelegate_displayText(QStyledItemDelegate const * this_ptr, QVariant const * value, QLocale const * locale) {
  return new QString(this_ptr->displayText(*value, *locale));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QStyleFactory_keys() {
  return new QStringList(QStyleFactory::keys());
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QStyleFactory_create(QString const * arg1) {
  return QStyleFactory::create(*arg1);
}


RITUAL_EXPORT QStylePainter * ctr_qt_widgets_ffi_QStylePainter_QStylePainter() {
  return new QStylePainter();
}


RITUAL_EXPORT QStylePainter * ctr_qt_widgets_ffi_QStylePainter_QStylePainter1(QWidget * w) {
  return new QStylePainter(w);
}


RITUAL_EXPORT QStylePainter * ctr_qt_widgets_ffi_QStylePainter_QStylePainter2(QPaintDevice * pd, QWidget * w) {
  return new QStylePainter(pd, w);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStylePainter_begin(QStylePainter * this_ptr, QWidget * w) {
  return this_ptr->begin(w);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QStylePainter_begin1(QStylePainter * this_ptr, QPaintDevice * pd, QWidget * w) {
  return this_ptr->begin(pd, w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePainter_drawPrimitive(QStylePainter * this_ptr, QStyle::PrimitiveElement pe, QStyleOption const * opt) {
  this_ptr->drawPrimitive(pe, *opt);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePainter_drawControl(QStylePainter * this_ptr, QStyle::ControlElement ce, QStyleOption const * opt) {
  this_ptr->drawControl(ce, *opt);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePainter_drawComplexControl(QStylePainter * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt) {
  this_ptr->drawComplexControl(cc, *opt);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePainter_drawItemText(QStylePainter * this_ptr, QRect const * r, int flags, QPalette const * pal, bool enabled, QString const * text, QPalette::ColorRole textRole) {
  this_ptr->drawItemText(*r, flags, *pal, enabled, *text, textRole);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePainter_drawItemPixmap(QStylePainter * this_ptr, QRect const * r, int flags, QPixmap const * pixmap) {
  this_ptr->drawItemPixmap(*r, flags, *pixmap);
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QStylePainter_style(QStylePainter const * this_ptr) {
  return this_ptr->style();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QStylePlugin_metaObject(QStylePlugin const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QStylePlugin_qt_metacast(QStylePlugin * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStylePlugin_qt_metacall(QStylePlugin * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStylePlugin_tr(char const * s, char const * c, int n) {
  return new QString(QStylePlugin::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QStylePlugin_trUtf8(char const * s, char const * c, int n) {
  return new QString(QStylePlugin::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePlugin_dQStylePlugin(QStylePlugin * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_QStylePlugin_create(QStylePlugin * this_ptr, QString const * key) {
  return this_ptr->create(*key);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QSystemTrayIcon_metaObject(QSystemTrayIcon const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QSystemTrayIcon_qt_metacast(QSystemTrayIcon * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QSystemTrayIcon_qt_metacall(QSystemTrayIcon * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSystemTrayIcon_tr(char const * s, char const * c, int n) {
  return new QString(QSystemTrayIcon::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSystemTrayIcon_trUtf8(char const * s, char const * c, int n) {
  return new QString(QSystemTrayIcon::trUtf8(s, c, n));
}


RITUAL_EXPORT QSystemTrayIcon * ctr_qt_widgets_ffi_QSystemTrayIcon_QSystemTrayIcon(QObject * parent) {
  return new QSystemTrayIcon(parent);
}


RITUAL_EXPORT QSystemTrayIcon * ctr_qt_widgets_ffi_QSystemTrayIcon_QSystemTrayIcon1(QIcon const * icon, QObject * parent) {
  return new QSystemTrayIcon(*icon, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_dQSystemTrayIcon(QSystemTrayIcon * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_setContextMenu(QSystemTrayIcon * this_ptr, QMenu * menu) {
  this_ptr->setContextMenu(menu);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QSystemTrayIcon_contextMenu(QSystemTrayIcon const * this_ptr) {
  return this_ptr->contextMenu();
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QSystemTrayIcon_icon(QSystemTrayIcon const * this_ptr) {
  return new QIcon(this_ptr->icon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_setIcon(QSystemTrayIcon * this_ptr, QIcon const * icon) {
  this_ptr->setIcon(*icon);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QSystemTrayIcon_toolTip(QSystemTrayIcon const * this_ptr) {
  return new QString(this_ptr->toolTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_setToolTip(QSystemTrayIcon * this_ptr, QString const * tip) {
  this_ptr->setToolTip(*tip);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSystemTrayIcon_isSystemTrayAvailable() {
  return QSystemTrayIcon::isSystemTrayAvailable();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSystemTrayIcon_supportsMessages() {
  return QSystemTrayIcon::supportsMessages();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QSystemTrayIcon_geometry(QSystemTrayIcon const * this_ptr) {
  return new QRect(this_ptr->geometry());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QSystemTrayIcon_isVisible(QSystemTrayIcon const * this_ptr) {
  return this_ptr->isVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_setVisible(QSystemTrayIcon * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_show(QSystemTrayIcon * this_ptr) {
  this_ptr->show();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_hide(QSystemTrayIcon * this_ptr) {
  this_ptr->hide();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_showMessage(QSystemTrayIcon * this_ptr, QString const * title, QString const * msg, QIcon const * icon, int msecs) {
  this_ptr->showMessage(*title, *msg, *icon, msecs);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_showMessage1(QSystemTrayIcon * this_ptr, QString const * title, QString const * msg, QSystemTrayIcon::MessageIcon icon, int msecs) {
  this_ptr->showMessage(*title, *msg, icon, msecs);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTableView_metaObject(QTableView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTableView_qt_metacast(QTableView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_qt_metacall(QTableView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableView_tr(char const * s, char const * c, int n) {
  return new QString(QTableView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTableView::trUtf8(s, c, n));
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_QTableView_QTableView(QWidget * parent) {
  return new QTableView(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_dQTableView(QTableView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setModel(QTableView * this_ptr, QAbstractItemModel * model) {
  this_ptr->setModel(model);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setRootIndex(QTableView * this_ptr, QModelIndex const * index) {
  this_ptr->setRootIndex(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setSelectionModel(QTableView * this_ptr, QItemSelectionModel * selectionModel) {
  this_ptr->setSelectionModel(selectionModel);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_doItemsLayout(QTableView * this_ptr) {
  this_ptr->doItemsLayout();
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_QTableView_horizontalHeader(QTableView const * this_ptr) {
  return this_ptr->horizontalHeader();
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_QTableView_verticalHeader(QTableView const * this_ptr) {
  return this_ptr->verticalHeader();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setHorizontalHeader(QTableView * this_ptr, QHeaderView * header) {
  this_ptr->setHorizontalHeader(header);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setVerticalHeader(QTableView * this_ptr, QHeaderView * header) {
  this_ptr->setVerticalHeader(header);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_rowViewportPosition(QTableView const * this_ptr, int row) {
  return this_ptr->rowViewportPosition(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_rowAt(QTableView const * this_ptr, int y) {
  return this_ptr->rowAt(y);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setRowHeight(QTableView * this_ptr, int row, int height) {
  this_ptr->setRowHeight(row, height);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_rowHeight(QTableView const * this_ptr, int row) {
  return this_ptr->rowHeight(row);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_columnViewportPosition(QTableView const * this_ptr, int column) {
  return this_ptr->columnViewportPosition(column);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_columnAt(QTableView const * this_ptr, int x) {
  return this_ptr->columnAt(x);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setColumnWidth(QTableView * this_ptr, int column, int width) {
  this_ptr->setColumnWidth(column, width);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_columnWidth(QTableView const * this_ptr, int column) {
  return this_ptr->columnWidth(column);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableView_isRowHidden(QTableView const * this_ptr, int row) {
  return this_ptr->isRowHidden(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setRowHidden(QTableView * this_ptr, int row, bool hide) {
  this_ptr->setRowHidden(row, hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableView_isColumnHidden(QTableView const * this_ptr, int column) {
  return this_ptr->isColumnHidden(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setColumnHidden(QTableView * this_ptr, int column, bool hide) {
  this_ptr->setColumnHidden(column, hide);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setSortingEnabled(QTableView * this_ptr, bool enable) {
  this_ptr->setSortingEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableView_isSortingEnabled(QTableView const * this_ptr) {
  return this_ptr->isSortingEnabled();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableView_showGrid(QTableView const * this_ptr) {
  return this_ptr->showGrid();
}


RITUAL_EXPORT Qt::PenStyle ctr_qt_widgets_ffi_QTableView_gridStyle(QTableView const * this_ptr) {
  return this_ptr->gridStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setGridStyle(QTableView * this_ptr, Qt::PenStyle style) {
  this_ptr->setGridStyle(style);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setWordWrap(QTableView * this_ptr, bool on) {
  this_ptr->setWordWrap(on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableView_wordWrap(QTableView const * this_ptr) {
  return this_ptr->wordWrap();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setCornerButtonEnabled(QTableView * this_ptr, bool enable) {
  this_ptr->setCornerButtonEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableView_isCornerButtonEnabled(QTableView const * this_ptr) {
  return this_ptr->isCornerButtonEnabled();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QTableView_visualRect(QTableView const * this_ptr, QModelIndex const * index) {
  return new QRect(this_ptr->visualRect(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_scrollTo(QTableView * this_ptr, QModelIndex const * index, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollTo(*index, hint);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QTableView_indexAt(QTableView const * this_ptr, QPoint const * p) {
  return new QModelIndex(this_ptr->indexAt(*p));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setSpan(QTableView * this_ptr, int row, int column, int rowSpan, int columnSpan) {
  this_ptr->setSpan(row, column, rowSpan, columnSpan);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_rowSpan(QTableView const * this_ptr, int row, int column) {
  return this_ptr->rowSpan(row, column);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableView_columnSpan(QTableView const * this_ptr, int row, int column) {
  return this_ptr->columnSpan(row, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_clearSpans(QTableView * this_ptr) {
  this_ptr->clearSpans();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_selectRow(QTableView * this_ptr, int row) {
  this_ptr->selectRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_selectColumn(QTableView * this_ptr, int column) {
  this_ptr->selectColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_hideRow(QTableView * this_ptr, int row) {
  this_ptr->hideRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_hideColumn(QTableView * this_ptr, int column) {
  this_ptr->hideColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_showRow(QTableView * this_ptr, int row) {
  this_ptr->showRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_showColumn(QTableView * this_ptr, int column) {
  this_ptr->showColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_resizeRowToContents(QTableView * this_ptr, int row) {
  this_ptr->resizeRowToContents(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_resizeRowsToContents(QTableView * this_ptr) {
  this_ptr->resizeRowsToContents();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_resizeColumnToContents(QTableView * this_ptr, int column) {
  this_ptr->resizeColumnToContents(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_resizeColumnsToContents(QTableView * this_ptr) {
  this_ptr->resizeColumnsToContents();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_sortByColumn(QTableView * this_ptr, int column) {
  this_ptr->sortByColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_sortByColumn1(QTableView * this_ptr, int column, Qt::SortOrder order) {
  this_ptr->sortByColumn(column, order);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_setShowGrid(QTableView * this_ptr, bool show) {
  this_ptr->setShowGrid(show);
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QTableWidgetSelectionRange_QTableWidgetSelectionRange() {
  return new QTableWidgetSelectionRange();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QTableWidgetSelectionRange_QTableWidgetSelectionRange1(int top, int left, int bottom, int right) {
  return new QTableWidgetSelectionRange(top, left, bottom, right);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetSelectionRange_dQTableWidgetSelectionRange(QTableWidgetSelectionRange * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QTableWidgetSelectionRange_QTableWidgetSelectionRange2(QTableWidgetSelectionRange const * other) {
  return new QTableWidgetSelectionRange(*other);
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QTableWidgetSelectionRange_operator_(QTableWidgetSelectionRange * this_ptr, QTableWidgetSelectionRange const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetSelectionRange_topRow(QTableWidgetSelectionRange const * this_ptr) {
  return this_ptr->topRow();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetSelectionRange_bottomRow(QTableWidgetSelectionRange const * this_ptr) {
  return this_ptr->bottomRow();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetSelectionRange_leftColumn(QTableWidgetSelectionRange const * this_ptr) {
  return this_ptr->leftColumn();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetSelectionRange_rightColumn(QTableWidgetSelectionRange const * this_ptr) {
  return this_ptr->rightColumn();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetSelectionRange_rowCount(QTableWidgetSelectionRange const * this_ptr) {
  return this_ptr->rowCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetSelectionRange_columnCount(QTableWidgetSelectionRange const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_QTableWidgetItem(int type) {
  return new QTableWidgetItem(type);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_QTableWidgetItem1(QString const * text, int type) {
  return new QTableWidgetItem(*text, type);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_QTableWidgetItem2(QIcon const * icon, QString const * text, int type) {
  return new QTableWidgetItem(*icon, *text, type);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_QTableWidgetItem3(QTableWidgetItem const * other) {
  return new QTableWidgetItem(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_dQTableWidgetItem(QTableWidgetItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_clone(QTableWidgetItem const * this_ptr) {
  return this_ptr->clone();
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_QTableWidgetItem_tableWidget(QTableWidgetItem const * this_ptr) {
  return this_ptr->tableWidget();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetItem_row(QTableWidgetItem const * this_ptr) {
  return this_ptr->row();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetItem_column(QTableWidgetItem const * this_ptr) {
  return this_ptr->column();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setSelected(QTableWidgetItem * this_ptr, bool select) {
  this_ptr->setSelected(select);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableWidgetItem_isSelected(QTableWidgetItem const * this_ptr) {
  return this_ptr->isSelected();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetItem_flags(QTableWidgetItem const * this_ptr) {
  return int(this_ptr->flags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setFlags(QTableWidgetItem * this_ptr, int flags) {
  this_ptr->setFlags(QFlags< Qt::ItemFlag >(flags));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableWidgetItem_text(QTableWidgetItem const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setText(QTableWidgetItem * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QTableWidgetItem_icon(QTableWidgetItem const * this_ptr) {
  return new QIcon(this_ptr->icon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setIcon(QTableWidgetItem * this_ptr, QIcon const * icon) {
  this_ptr->setIcon(*icon);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableWidgetItem_statusTip(QTableWidgetItem const * this_ptr) {
  return new QString(this_ptr->statusTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setStatusTip(QTableWidgetItem * this_ptr, QString const * statusTip) {
  this_ptr->setStatusTip(*statusTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableWidgetItem_toolTip(QTableWidgetItem const * this_ptr) {
  return new QString(this_ptr->toolTip());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setToolTip(QTableWidgetItem * this_ptr, QString const * toolTip) {
  this_ptr->setToolTip(*toolTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableWidgetItem_whatsThis(QTableWidgetItem const * this_ptr) {
  return new QString(this_ptr->whatsThis());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setWhatsThis(QTableWidgetItem * this_ptr, QString const * whatsThis) {
  this_ptr->setWhatsThis(*whatsThis);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QTableWidgetItem_font(QTableWidgetItem const * this_ptr) {
  return new QFont(this_ptr->font());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setFont(QTableWidgetItem * this_ptr, QFont const * font) {
  this_ptr->setFont(*font);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetItem_textAlignment(QTableWidgetItem const * this_ptr) {
  return this_ptr->textAlignment();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setTextAlignment(QTableWidgetItem * this_ptr, int alignment) {
  this_ptr->setTextAlignment(alignment);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QTableWidgetItem_backgroundColor(QTableWidgetItem const * this_ptr) {
  return new QColor(this_ptr->backgroundColor());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setBackgroundColor(QTableWidgetItem * this_ptr, QColor const * color) {
  this_ptr->setBackgroundColor(*color);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QTableWidgetItem_background(QTableWidgetItem const * this_ptr) {
  return new QBrush(this_ptr->background());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setBackground(QTableWidgetItem * this_ptr, QBrush const * brush) {
  this_ptr->setBackground(*brush);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QTableWidgetItem_textColor(QTableWidgetItem const * this_ptr) {
  return new QColor(this_ptr->textColor());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setTextColor(QTableWidgetItem * this_ptr, QColor const * color) {
  this_ptr->setTextColor(*color);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QTableWidgetItem_foreground(QTableWidgetItem const * this_ptr) {
  return new QBrush(this_ptr->foreground());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setForeground(QTableWidgetItem * this_ptr, QBrush const * brush) {
  this_ptr->setForeground(*brush);
}


RITUAL_EXPORT Qt::CheckState ctr_qt_widgets_ffi_QTableWidgetItem_checkState(QTableWidgetItem const * this_ptr) {
  return this_ptr->checkState();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setCheckState(QTableWidgetItem * this_ptr, Qt::CheckState state) {
  this_ptr->setCheckState(state);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTableWidgetItem_sizeHint(QTableWidgetItem const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setSizeHint(QTableWidgetItem * this_ptr, QSize const * size) {
  this_ptr->setSizeHint(*size);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QTableWidgetItem_data(QTableWidgetItem const * this_ptr, int role) {
  return new QVariant(this_ptr->data(role));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_setData(QTableWidgetItem * this_ptr, int role, QVariant const * value) {
  this_ptr->setData(role, *value);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableWidgetItem_operator_(QTableWidgetItem const * this_ptr, QTableWidgetItem const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_read(QTableWidgetItem * this_ptr, QDataStream * in) {
  this_ptr->read(*in);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidgetItem_write(QTableWidgetItem const * this_ptr, QDataStream * out) {
  this_ptr->write(*out);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_operator_1(QTableWidgetItem * this_ptr, QTableWidgetItem const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidgetItem_type(QTableWidgetItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__18(QDataStream * in, QTableWidgetItem * item) {
  return &operator>>(*in, *item);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__19(QDataStream * out, QTableWidgetItem const * item) {
  return &operator<<(*out, *item);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTableWidget_metaObject(QTableWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTableWidget_qt_metacast(QTableWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_qt_metacall(QTableWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableWidget_tr(char const * s, char const * c, int n) {
  return new QString(QTableWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTableWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTableWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_QTableWidget_QTableWidget(QWidget * parent) {
  return new QTableWidget(parent);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_QTableWidget_QTableWidget1(int rows, int columns, QWidget * parent) {
  return new QTableWidget(rows, columns, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_dQTableWidget(QTableWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setRowCount(QTableWidget * this_ptr, int rows) {
  this_ptr->setRowCount(rows);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_rowCount(QTableWidget const * this_ptr) {
  return this_ptr->rowCount();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setColumnCount(QTableWidget * this_ptr, int columns) {
  this_ptr->setColumnCount(columns);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_columnCount(QTableWidget const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_row(QTableWidget const * this_ptr, QTableWidgetItem const * item) {
  return this_ptr->row(item);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_column(QTableWidget const * this_ptr, QTableWidgetItem const * item) {
  return this_ptr->column(item);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_item(QTableWidget const * this_ptr, int row, int column) {
  return this_ptr->item(row, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setItem(QTableWidget * this_ptr, int row, int column, QTableWidgetItem * item) {
  this_ptr->setItem(row, column, item);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_takeItem(QTableWidget * this_ptr, int row, int column) {
  return this_ptr->takeItem(row, column);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_verticalHeaderItem(QTableWidget const * this_ptr, int row) {
  return this_ptr->verticalHeaderItem(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setVerticalHeaderItem(QTableWidget * this_ptr, int row, QTableWidgetItem * item) {
  this_ptr->setVerticalHeaderItem(row, item);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_takeVerticalHeaderItem(QTableWidget * this_ptr, int row) {
  return this_ptr->takeVerticalHeaderItem(row);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_horizontalHeaderItem(QTableWidget const * this_ptr, int column) {
  return this_ptr->horizontalHeaderItem(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setHorizontalHeaderItem(QTableWidget * this_ptr, int column, QTableWidgetItem * item) {
  this_ptr->setHorizontalHeaderItem(column, item);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_takeHorizontalHeaderItem(QTableWidget * this_ptr, int column) {
  return this_ptr->takeHorizontalHeaderItem(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setVerticalHeaderLabels(QTableWidget * this_ptr, QStringList const * labels) {
  this_ptr->setVerticalHeaderLabels(*labels);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setHorizontalHeaderLabels(QTableWidget * this_ptr, QStringList const * labels) {
  this_ptr->setHorizontalHeaderLabels(*labels);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_currentRow(QTableWidget const * this_ptr) {
  return this_ptr->currentRow();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_currentColumn(QTableWidget const * this_ptr) {
  return this_ptr->currentColumn();
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_currentItem(QTableWidget const * this_ptr) {
  return this_ptr->currentItem();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setCurrentItem(QTableWidget * this_ptr, QTableWidgetItem * item) {
  this_ptr->setCurrentItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setCurrentItem1(QTableWidget * this_ptr, QTableWidgetItem * item, int command) {
  this_ptr->setCurrentItem(item, QFlags< QItemSelectionModel::SelectionFlag >(command));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setCurrentCell(QTableWidget * this_ptr, int row, int column) {
  this_ptr->setCurrentCell(row, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setCurrentCell1(QTableWidget * this_ptr, int row, int column, int command) {
  this_ptr->setCurrentCell(row, column, QFlags< QItemSelectionModel::SelectionFlag >(command));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_sortItems(QTableWidget * this_ptr, int column, Qt::SortOrder order) {
  this_ptr->sortItems(column, order);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setSortingEnabled(QTableWidget * this_ptr, bool enable) {
  this_ptr->setSortingEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableWidget_isSortingEnabled(QTableWidget const * this_ptr) {
  return this_ptr->isSortingEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_editItem(QTableWidget * this_ptr, QTableWidgetItem * item) {
  this_ptr->editItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_openPersistentEditor(QTableWidget * this_ptr, QTableWidgetItem * item) {
  this_ptr->openPersistentEditor(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_closePersistentEditor(QTableWidget * this_ptr, QTableWidgetItem * item) {
  this_ptr->closePersistentEditor(item);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableWidget_isPersistentEditorOpen(QTableWidget const * this_ptr, QTableWidgetItem * item) {
  return this_ptr->isPersistentEditorOpen(item);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QTableWidget_cellWidget(QTableWidget const * this_ptr, int row, int column) {
  return this_ptr->cellWidget(row, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setCellWidget(QTableWidget * this_ptr, int row, int column, QWidget * widget) {
  this_ptr->setCellWidget(row, column, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_removeCellWidget(QTableWidget * this_ptr, int row, int column) {
  this_ptr->removeCellWidget(row, column);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTableWidget_isItemSelected(QTableWidget const * this_ptr, QTableWidgetItem const * item) {
  return this_ptr->isItemSelected(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setItemSelected(QTableWidget * this_ptr, QTableWidgetItem const * item, bool select) {
  this_ptr->setItemSelected(item, select);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setRangeSelected(QTableWidget * this_ptr, QTableWidgetSelectionRange const * range, bool select) {
  this_ptr->setRangeSelected(*range, select);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QTableWidget_selectedRanges(QTableWidget const * this_ptr) {
  return new QList< QTableWidgetSelectionRange >(this_ptr->selectedRanges());
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QTableWidget_selectedItems(QTableWidget const * this_ptr) {
  return new QList< QTableWidgetItem * >(this_ptr->selectedItems());
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QTableWidget_findItems(QTableWidget const * this_ptr, QString const * text, int flags) {
  return new QList< QTableWidgetItem * >(this_ptr->findItems(*text, QFlags< Qt::MatchFlag >(flags)));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_visualRow(QTableWidget const * this_ptr, int logicalRow) {
  return this_ptr->visualRow(logicalRow);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTableWidget_visualColumn(QTableWidget const * this_ptr, int logicalColumn) {
  return this_ptr->visualColumn(logicalColumn);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_itemAt(QTableWidget const * this_ptr, QPoint const * p) {
  return this_ptr->itemAt(*p);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidget_itemAt1(QTableWidget const * this_ptr, int x, int y) {
  return this_ptr->itemAt(x, y);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QTableWidget_visualItemRect(QTableWidget const * this_ptr, QTableWidgetItem const * item) {
  return new QRect(this_ptr->visualItemRect(item));
}


RITUAL_EXPORT QTableWidgetItem const * ctr_qt_widgets_ffi_QTableWidget_itemPrototype(QTableWidget const * this_ptr) {
  return this_ptr->itemPrototype();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_setItemPrototype(QTableWidget * this_ptr, QTableWidgetItem const * item) {
  this_ptr->setItemPrototype(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_scrollToItem(QTableWidget * this_ptr, QTableWidgetItem const * item, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollToItem(item, hint);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_insertRow(QTableWidget * this_ptr, int row) {
  this_ptr->insertRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_insertColumn(QTableWidget * this_ptr, int column) {
  this_ptr->insertColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_removeRow(QTableWidget * this_ptr, int row) {
  this_ptr->removeRow(row);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_removeColumn(QTableWidget * this_ptr, int column) {
  this_ptr->removeColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_clear(QTableWidget * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_clearContents(QTableWidget * this_ptr) {
  this_ptr->clearContents();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTextBrowser_metaObject(QTextBrowser const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTextBrowser_qt_metacast(QTextBrowser * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextBrowser_qt_metacall(QTextBrowser * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextBrowser_tr(char const * s, char const * c, int n) {
  return new QString(QTextBrowser::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextBrowser_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTextBrowser::trUtf8(s, c, n));
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_QTextBrowser_QTextBrowser(QWidget * parent) {
  return new QTextBrowser(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_dQTextBrowser(QTextBrowser * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QTextBrowser_source(QTextBrowser const * this_ptr) {
  return new QUrl(this_ptr->source());
}


RITUAL_EXPORT QTextDocument::ResourceType ctr_qt_widgets_ffi_QTextBrowser_sourceType(QTextBrowser const * this_ptr) {
  return this_ptr->sourceType();
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QTextBrowser_searchPaths(QTextBrowser const * this_ptr) {
  return new QStringList(this_ptr->searchPaths());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_setSearchPaths(QTextBrowser * this_ptr, QStringList const * paths) {
  this_ptr->setSearchPaths(*paths);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QTextBrowser_loadResource(QTextBrowser * this_ptr, int type, QUrl const * name) {
  return new QVariant(this_ptr->loadResource(type, *name));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextBrowser_isBackwardAvailable(QTextBrowser const * this_ptr) {
  return this_ptr->isBackwardAvailable();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextBrowser_isForwardAvailable(QTextBrowser const * this_ptr) {
  return this_ptr->isForwardAvailable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_clearHistory(QTextBrowser * this_ptr) {
  this_ptr->clearHistory();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextBrowser_historyTitle(QTextBrowser const * this_ptr, int arg1) {
  return new QString(this_ptr->historyTitle(arg1));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QTextBrowser_historyUrl(QTextBrowser const * this_ptr, int arg1) {
  return new QUrl(this_ptr->historyUrl(arg1));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextBrowser_backwardHistoryCount(QTextBrowser const * this_ptr) {
  return this_ptr->backwardHistoryCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTextBrowser_forwardHistoryCount(QTextBrowser const * this_ptr) {
  return this_ptr->forwardHistoryCount();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextBrowser_openExternalLinks(QTextBrowser const * this_ptr) {
  return this_ptr->openExternalLinks();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_setOpenExternalLinks(QTextBrowser * this_ptr, bool open) {
  this_ptr->setOpenExternalLinks(open);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextBrowser_openLinks(QTextBrowser const * this_ptr) {
  return this_ptr->openLinks();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_setOpenLinks(QTextBrowser * this_ptr, bool open) {
  this_ptr->setOpenLinks(open);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_setSource(QTextBrowser * this_ptr, QUrl const * name) {
  this_ptr->setSource(*name);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_setSource1(QTextBrowser * this_ptr, QUrl const * name, QTextDocument::ResourceType type) {
  this_ptr->setSource(*name, type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_backward(QTextBrowser * this_ptr) {
  this_ptr->backward();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_forward(QTextBrowser * this_ptr) {
  this_ptr->forward();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_home(QTextBrowser * this_ptr) {
  this_ptr->home();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextBrowser_reload(QTextBrowser * this_ptr) {
  this_ptr->reload();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QToolBar_metaObject(QToolBar const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QToolBar_qt_metacast(QToolBar * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBar_qt_metacall(QToolBar * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolBar_tr(char const * s, char const * c, int n) {
  return new QString(QToolBar::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolBar_trUtf8(char const * s, char const * c, int n) {
  return new QString(QToolBar::trUtf8(s, c, n));
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_QToolBar_QToolBar(QString const * title, QWidget * parent) {
  return new QToolBar(*title, parent);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_QToolBar_QToolBar1(QWidget * parent) {
  return new QToolBar(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_dQToolBar(QToolBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_setMovable(QToolBar * this_ptr, bool movable) {
  this_ptr->setMovable(movable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QToolBar_isMovable(QToolBar const * this_ptr) {
  return this_ptr->isMovable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_setAllowedAreas(QToolBar * this_ptr, int areas) {
  this_ptr->setAllowedAreas(QFlags< Qt::ToolBarArea >(areas));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBar_allowedAreas(QToolBar const * this_ptr) {
  return int(this_ptr->allowedAreas());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QToolBar_isAreaAllowed(QToolBar const * this_ptr, Qt::ToolBarArea area) {
  return this_ptr->isAreaAllowed(area);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_setOrientation(QToolBar * this_ptr, Qt::Orientation orientation) {
  this_ptr->setOrientation(orientation);
}


RITUAL_EXPORT Qt::Orientation ctr_qt_widgets_ffi_QToolBar_orientation(QToolBar const * this_ptr) {
  return this_ptr->orientation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_clear(QToolBar * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_addAction(QToolBar * this_ptr, QString const * text) {
  return this_ptr->addAction(*text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_addAction1(QToolBar * this_ptr, QIcon const * icon, QString const * text) {
  return this_ptr->addAction(*icon, *text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_addAction2(QToolBar * this_ptr, QString const * text, QObject const * receiver, char const * member) {
  return this_ptr->addAction(*text, receiver, member);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_addAction3(QToolBar * this_ptr, QIcon const * icon, QString const * text, QObject const * receiver, char const * member) {
  return this_ptr->addAction(*icon, *text, receiver, member);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_addSeparator(QToolBar * this_ptr) {
  return this_ptr->addSeparator();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_insertSeparator(QToolBar * this_ptr, QAction * before) {
  return this_ptr->insertSeparator(before);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_addWidget(QToolBar * this_ptr, QWidget * widget) {
  return this_ptr->addWidget(widget);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_insertWidget(QToolBar * this_ptr, QAction * before, QWidget * widget) {
  return this_ptr->insertWidget(before, widget);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QToolBar_actionGeometry(QToolBar const * this_ptr, QAction * action) {
  return new QRect(this_ptr->actionGeometry(action));
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_actionAt(QToolBar const * this_ptr, QPoint const * p) {
  return this_ptr->actionAt(*p);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_actionAt1(QToolBar const * this_ptr, int x, int y) {
  return this_ptr->actionAt(x, y);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolBar_toggleViewAction(QToolBar const * this_ptr) {
  return this_ptr->toggleViewAction();
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QToolBar_iconSize(QToolBar const * this_ptr) {
  return new QSize(this_ptr->iconSize());
}


RITUAL_EXPORT Qt::ToolButtonStyle ctr_qt_widgets_ffi_QToolBar_toolButtonStyle(QToolBar const * this_ptr) {
  return this_ptr->toolButtonStyle();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QToolBar_widgetForAction(QToolBar const * this_ptr, QAction * action) {
  return this_ptr->widgetForAction(action);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QToolBar_isFloatable(QToolBar const * this_ptr) {
  return this_ptr->isFloatable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_setFloatable(QToolBar * this_ptr, bool floatable) {
  this_ptr->setFloatable(floatable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QToolBar_isFloating(QToolBar const * this_ptr) {
  return this_ptr->isFloating();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_setIconSize(QToolBar * this_ptr, QSize const * iconSize) {
  this_ptr->setIconSize(*iconSize);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBar_setToolButtonStyle(QToolBar * this_ptr, Qt::ToolButtonStyle toolButtonStyle) {
  this_ptr->setToolButtonStyle(toolButtonStyle);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QToolBox_metaObject(QToolBox const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QToolBox_qt_metacast(QToolBox * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_qt_metacall(QToolBox * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolBox_tr(char const * s, char const * c, int n) {
  return new QString(QToolBox::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolBox_trUtf8(char const * s, char const * c, int n) {
  return new QString(QToolBox::trUtf8(s, c, n));
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_QToolBox_QToolBox(QWidget * parent, int f) {
  return new QToolBox(parent, QFlags< Qt::WindowType >(f));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_dQToolBox(QToolBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_addItem(QToolBox * this_ptr, QWidget * widget, QString const * text) {
  return this_ptr->addItem(widget, *text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_addItem1(QToolBox * this_ptr, QWidget * widget, QIcon const * icon, QString const * text) {
  return this_ptr->addItem(widget, *icon, *text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_insertItem(QToolBox * this_ptr, int index, QWidget * widget, QString const * text) {
  return this_ptr->insertItem(index, widget, *text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_insertItem1(QToolBox * this_ptr, int index, QWidget * widget, QIcon const * icon, QString const * text) {
  return this_ptr->insertItem(index, widget, *icon, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_removeItem(QToolBox * this_ptr, int index) {
  this_ptr->removeItem(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_setItemEnabled(QToolBox * this_ptr, int index, bool enabled) {
  this_ptr->setItemEnabled(index, enabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QToolBox_isItemEnabled(QToolBox const * this_ptr, int index) {
  return this_ptr->isItemEnabled(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_setItemText(QToolBox * this_ptr, int index, QString const * text) {
  this_ptr->setItemText(index, *text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolBox_itemText(QToolBox const * this_ptr, int index) {
  return new QString(this_ptr->itemText(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_setItemIcon(QToolBox * this_ptr, int index, QIcon const * icon) {
  this_ptr->setItemIcon(index, *icon);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QToolBox_itemIcon(QToolBox const * this_ptr, int index) {
  return new QIcon(this_ptr->itemIcon(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_setItemToolTip(QToolBox * this_ptr, int index, QString const * toolTip) {
  this_ptr->setItemToolTip(index, *toolTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolBox_itemToolTip(QToolBox const * this_ptr, int index) {
  return new QString(this_ptr->itemToolTip(index));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_currentIndex(QToolBox const * this_ptr) {
  return this_ptr->currentIndex();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QToolBox_currentWidget(QToolBox const * this_ptr) {
  return this_ptr->currentWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QToolBox_widget(QToolBox const * this_ptr, int index) {
  return this_ptr->widget(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_indexOf(QToolBox const * this_ptr, QWidget * widget) {
  return this_ptr->indexOf(widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolBox_count(QToolBox const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_setCurrentIndex(QToolBox * this_ptr, int index) {
  this_ptr->setCurrentIndex(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolBox_setCurrentWidget(QToolBox * this_ptr, QWidget * widget) {
  this_ptr->setCurrentWidget(widget);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QToolButton_metaObject(QToolButton const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QToolButton_qt_metacast(QToolButton * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QToolButton_qt_metacall(QToolButton * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolButton_tr(char const * s, char const * c, int n) {
  return new QString(QToolButton::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolButton_trUtf8(char const * s, char const * c, int n) {
  return new QString(QToolButton::trUtf8(s, c, n));
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_QToolButton_QToolButton(QWidget * parent) {
  return new QToolButton(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_dQToolButton(QToolButton * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QToolButton_sizeHint(QToolButton const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QToolButton_minimumSizeHint(QToolButton const * this_ptr) {
  return new QSize(this_ptr->minimumSizeHint());
}


RITUAL_EXPORT Qt::ToolButtonStyle ctr_qt_widgets_ffi_QToolButton_toolButtonStyle(QToolButton const * this_ptr) {
  return this_ptr->toolButtonStyle();
}


RITUAL_EXPORT Qt::ArrowType ctr_qt_widgets_ffi_QToolButton_arrowType(QToolButton const * this_ptr) {
  return this_ptr->arrowType();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_setArrowType(QToolButton * this_ptr, Qt::ArrowType type) {
  this_ptr->setArrowType(type);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_setMenu(QToolButton * this_ptr, QMenu * menu) {
  this_ptr->setMenu(menu);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QToolButton_menu(QToolButton const * this_ptr) {
  return this_ptr->menu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_setPopupMode(QToolButton * this_ptr, QToolButton::ToolButtonPopupMode mode) {
  this_ptr->setPopupMode(mode);
}


RITUAL_EXPORT QToolButton::ToolButtonPopupMode ctr_qt_widgets_ffi_QToolButton_popupMode(QToolButton const * this_ptr) {
  return this_ptr->popupMode();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QToolButton_defaultAction(QToolButton const * this_ptr) {
  return this_ptr->defaultAction();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_setAutoRaise(QToolButton * this_ptr, bool enable) {
  this_ptr->setAutoRaise(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QToolButton_autoRaise(QToolButton const * this_ptr) {
  return this_ptr->autoRaise();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_showMenu(QToolButton * this_ptr) {
  this_ptr->showMenu();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_setToolButtonStyle(QToolButton * this_ptr, Qt::ToolButtonStyle style) {
  this_ptr->setToolButtonStyle(style);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolButton_setDefaultAction(QToolButton * this_ptr, QAction * arg1) {
  this_ptr->setDefaultAction(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_showText(QPoint const * pos, QString const * text, QWidget * w) {
  QToolTip::showText(*pos, *text, w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_showText1(QPoint const * pos, QString const * text, QWidget * w, QRect const * rect) {
  QToolTip::showText(*pos, *text, w, *rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_showText2(QPoint const * pos, QString const * text, QWidget * w, QRect const * rect, int msecShowTime) {
  QToolTip::showText(*pos, *text, w, *rect, msecShowTime);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_hideText() {
  QToolTip::hideText();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QToolTip_isVisible() {
  return QToolTip::isVisible();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QToolTip_text() {
  return new QString(QToolTip::text());
}


RITUAL_EXPORT QPalette * ctr_qt_widgets_ffi_QToolTip_palette() {
  return new QPalette(QToolTip::palette());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_setPalette(QPalette const * arg1) {
  QToolTip::setPalette(*arg1);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QToolTip_font() {
  return new QFont(QToolTip::font());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_setFont(QFont const * arg1) {
  QToolTip::setFont(*arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTreeView_metaObject(QTreeView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTreeView_qt_metacast(QTreeView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeView_qt_metacall(QTreeView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeView_tr(char const * s, char const * c, int n) {
  return new QString(QTreeView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTreeView::trUtf8(s, c, n));
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_QTreeView_QTreeView(QWidget * parent) {
  return new QTreeView(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_dQTreeView(QTreeView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setModel(QTreeView * this_ptr, QAbstractItemModel * model) {
  this_ptr->setModel(model);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setRootIndex(QTreeView * this_ptr, QModelIndex const * index) {
  this_ptr->setRootIndex(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setSelectionModel(QTreeView * this_ptr, QItemSelectionModel * selectionModel) {
  this_ptr->setSelectionModel(selectionModel);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_QTreeView_header(QTreeView const * this_ptr) {
  return this_ptr->header();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setHeader(QTreeView * this_ptr, QHeaderView * header) {
  this_ptr->setHeader(header);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeView_autoExpandDelay(QTreeView const * this_ptr) {
  return this_ptr->autoExpandDelay();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setAutoExpandDelay(QTreeView * this_ptr, int delay) {
  this_ptr->setAutoExpandDelay(delay);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeView_indentation(QTreeView const * this_ptr) {
  return this_ptr->indentation();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setIndentation(QTreeView * this_ptr, int i) {
  this_ptr->setIndentation(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_resetIndentation(QTreeView * this_ptr) {
  this_ptr->resetIndentation();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_rootIsDecorated(QTreeView const * this_ptr) {
  return this_ptr->rootIsDecorated();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setRootIsDecorated(QTreeView * this_ptr, bool show) {
  this_ptr->setRootIsDecorated(show);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_uniformRowHeights(QTreeView const * this_ptr) {
  return this_ptr->uniformRowHeights();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setUniformRowHeights(QTreeView * this_ptr, bool uniform) {
  this_ptr->setUniformRowHeights(uniform);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_itemsExpandable(QTreeView const * this_ptr) {
  return this_ptr->itemsExpandable();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setItemsExpandable(QTreeView * this_ptr, bool enable) {
  this_ptr->setItemsExpandable(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_expandsOnDoubleClick(QTreeView const * this_ptr) {
  return this_ptr->expandsOnDoubleClick();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setExpandsOnDoubleClick(QTreeView * this_ptr, bool enable) {
  this_ptr->setExpandsOnDoubleClick(enable);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeView_columnViewportPosition(QTreeView const * this_ptr, int column) {
  return this_ptr->columnViewportPosition(column);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeView_columnWidth(QTreeView const * this_ptr, int column) {
  return this_ptr->columnWidth(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setColumnWidth(QTreeView * this_ptr, int column, int width) {
  this_ptr->setColumnWidth(column, width);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeView_columnAt(QTreeView const * this_ptr, int x) {
  return this_ptr->columnAt(x);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_isColumnHidden(QTreeView const * this_ptr, int column) {
  return this_ptr->isColumnHidden(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setColumnHidden(QTreeView * this_ptr, int column, bool hide) {
  this_ptr->setColumnHidden(column, hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_isHeaderHidden(QTreeView const * this_ptr) {
  return this_ptr->isHeaderHidden();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setHeaderHidden(QTreeView * this_ptr, bool hide) {
  this_ptr->setHeaderHidden(hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_isRowHidden(QTreeView const * this_ptr, int row, QModelIndex const * parent) {
  return this_ptr->isRowHidden(row, *parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setRowHidden(QTreeView * this_ptr, int row, QModelIndex const * parent, bool hide) {
  this_ptr->setRowHidden(row, *parent, hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_isFirstColumnSpanned(QTreeView const * this_ptr, int row, QModelIndex const * parent) {
  return this_ptr->isFirstColumnSpanned(row, *parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setFirstColumnSpanned(QTreeView * this_ptr, int row, QModelIndex const * parent, bool span) {
  this_ptr->setFirstColumnSpanned(row, *parent, span);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_isExpanded(QTreeView const * this_ptr, QModelIndex const * index) {
  return this_ptr->isExpanded(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setExpanded(QTreeView * this_ptr, QModelIndex const * index, bool expand) {
  this_ptr->setExpanded(*index, expand);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setSortingEnabled(QTreeView * this_ptr, bool enable) {
  this_ptr->setSortingEnabled(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_isSortingEnabled(QTreeView const * this_ptr) {
  return this_ptr->isSortingEnabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setAnimated(QTreeView * this_ptr, bool enable) {
  this_ptr->setAnimated(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_isAnimated(QTreeView const * this_ptr) {
  return this_ptr->isAnimated();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setAllColumnsShowFocus(QTreeView * this_ptr, bool enable) {
  this_ptr->setAllColumnsShowFocus(enable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_allColumnsShowFocus(QTreeView const * this_ptr) {
  return this_ptr->allColumnsShowFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setWordWrap(QTreeView * this_ptr, bool on) {
  this_ptr->setWordWrap(on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeView_wordWrap(QTreeView const * this_ptr) {
  return this_ptr->wordWrap();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_setTreePosition(QTreeView * this_ptr, int logicalIndex) {
  this_ptr->setTreePosition(logicalIndex);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeView_treePosition(QTreeView const * this_ptr) {
  return this_ptr->treePosition();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_keyboardSearch(QTreeView * this_ptr, QString const * search) {
  this_ptr->keyboardSearch(*search);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QTreeView_visualRect(QTreeView const * this_ptr, QModelIndex const * index) {
  return new QRect(this_ptr->visualRect(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_scrollTo(QTreeView * this_ptr, QModelIndex const * index, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollTo(*index, hint);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QTreeView_indexAt(QTreeView const * this_ptr, QPoint const * p) {
  return new QModelIndex(this_ptr->indexAt(*p));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QTreeView_indexAbove(QTreeView const * this_ptr, QModelIndex const * index) {
  return new QModelIndex(this_ptr->indexAbove(*index));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QTreeView_indexBelow(QTreeView const * this_ptr, QModelIndex const * index) {
  return new QModelIndex(this_ptr->indexBelow(*index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_doItemsLayout(QTreeView * this_ptr) {
  this_ptr->doItemsLayout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_reset(QTreeView * this_ptr) {
  this_ptr->reset();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_dataChanged(QTreeView * this_ptr, QModelIndex const * topLeft, QModelIndex const * bottomRight, QVector< int > const * roles) {
  this_ptr->dataChanged(*topLeft, *bottomRight, *roles);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_selectAll(QTreeView * this_ptr) {
  this_ptr->selectAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_hideColumn(QTreeView * this_ptr, int column) {
  this_ptr->hideColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_showColumn(QTreeView * this_ptr, int column) {
  this_ptr->showColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_expand(QTreeView * this_ptr, QModelIndex const * index) {
  this_ptr->expand(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_collapse(QTreeView * this_ptr, QModelIndex const * index) {
  this_ptr->collapse(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_resizeColumnToContents(QTreeView * this_ptr, int column) {
  this_ptr->resizeColumnToContents(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_sortByColumn(QTreeView * this_ptr, int column) {
  this_ptr->sortByColumn(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_sortByColumn1(QTreeView * this_ptr, int column, Qt::SortOrder order) {
  this_ptr->sortByColumn(column, order);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_expandAll(QTreeView * this_ptr) {
  this_ptr->expandAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_expandRecursively(QTreeView * this_ptr, QModelIndex const * index, int depth) {
  this_ptr->expandRecursively(*index, depth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_collapseAll(QTreeView * this_ptr) {
  this_ptr->collapseAll();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_expandToDepth(QTreeView * this_ptr, int depth) {
  this_ptr->expandToDepth(depth);
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_QTreeWidgetItemIterator(QTreeWidgetItemIterator const * it) {
  return new QTreeWidgetItemIterator(*it);
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_QTreeWidgetItemIterator1(QTreeWidget * widget, int flags) {
  return new QTreeWidgetItemIterator(widget, QFlags< QTreeWidgetItemIterator::IteratorFlag >(flags));
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_QTreeWidgetItemIterator2(QTreeWidgetItem * item, int flags) {
  return new QTreeWidgetItemIterator(item, QFlags< QTreeWidgetItemIterator::IteratorFlag >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItemIterator_dQTreeWidgetItemIterator(QTreeWidgetItemIterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator_(QTreeWidgetItemIterator * this_ptr, QTreeWidgetItemIterator const * it) {
  return &this_ptr->operator=(*it);
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator__(QTreeWidgetItemIterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator__1(QTreeWidgetItemIterator * this_ptr, int arg1) {
  return new QTreeWidgetItemIterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator__2(QTreeWidgetItemIterator * this_ptr, int n) {
  return &this_ptr->operator+=(n);
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator__3(QTreeWidgetItemIterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator__4(QTreeWidgetItemIterator * this_ptr, int arg1) {
  return new QTreeWidgetItemIterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator__5(QTreeWidgetItemIterator * this_ptr, int n) {
  return &this_ptr->operator-=(n);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_operator_1(QTreeWidgetItemIterator const * this_ptr) {
  return this_ptr->operator*();
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem(int type) {
  return new QTreeWidgetItem(type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem1(QStringList const * strings, int type) {
  return new QTreeWidgetItem(*strings, type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem2(QTreeWidget * treeview, int type) {
  return new QTreeWidgetItem(treeview, type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem3(QTreeWidget * treeview, QStringList const * strings, int type) {
  return new QTreeWidgetItem(treeview, *strings, type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem4(QTreeWidget * treeview, QTreeWidgetItem * after, int type) {
  return new QTreeWidgetItem(treeview, after, type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem5(QTreeWidgetItem * parent, int type) {
  return new QTreeWidgetItem(parent, type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem6(QTreeWidgetItem * parent, QStringList const * strings, int type) {
  return new QTreeWidgetItem(parent, *strings, type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem7(QTreeWidgetItem * parent, QTreeWidgetItem * after, int type) {
  return new QTreeWidgetItem(parent, after, type);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem8(QTreeWidgetItem const * other) {
  return new QTreeWidgetItem(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_dQTreeWidgetItem(QTreeWidgetItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_clone(QTreeWidgetItem const * this_ptr) {
  return this_ptr->clone();
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_QTreeWidgetItem_treeWidget(QTreeWidgetItem const * this_ptr) {
  return this_ptr->treeWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setSelected(QTreeWidgetItem * this_ptr, bool select) {
  this_ptr->setSelected(select);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidgetItem_isSelected(QTreeWidgetItem const * this_ptr) {
  return this_ptr->isSelected();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setHidden(QTreeWidgetItem * this_ptr, bool hide) {
  this_ptr->setHidden(hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidgetItem_isHidden(QTreeWidgetItem const * this_ptr) {
  return this_ptr->isHidden();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setExpanded(QTreeWidgetItem * this_ptr, bool expand) {
  this_ptr->setExpanded(expand);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidgetItem_isExpanded(QTreeWidgetItem const * this_ptr) {
  return this_ptr->isExpanded();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setFirstColumnSpanned(QTreeWidgetItem * this_ptr, bool span) {
  this_ptr->setFirstColumnSpanned(span);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidgetItem_isFirstColumnSpanned(QTreeWidgetItem const * this_ptr) {
  return this_ptr->isFirstColumnSpanned();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setDisabled(QTreeWidgetItem * this_ptr, bool disabled) {
  this_ptr->setDisabled(disabled);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidgetItem_isDisabled(QTreeWidgetItem const * this_ptr) {
  return this_ptr->isDisabled();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setChildIndicatorPolicy(QTreeWidgetItem * this_ptr, QTreeWidgetItem::ChildIndicatorPolicy policy) {
  this_ptr->setChildIndicatorPolicy(policy);
}


RITUAL_EXPORT QTreeWidgetItem::ChildIndicatorPolicy ctr_qt_widgets_ffi_QTreeWidgetItem_childIndicatorPolicy(QTreeWidgetItem const * this_ptr) {
  return this_ptr->childIndicatorPolicy();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidgetItem_flags(QTreeWidgetItem const * this_ptr) {
  return int(this_ptr->flags());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setFlags(QTreeWidgetItem * this_ptr, int flags) {
  this_ptr->setFlags(QFlags< Qt::ItemFlag >(flags));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeWidgetItem_text(QTreeWidgetItem const * this_ptr, int column) {
  return new QString(this_ptr->text(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setText(QTreeWidgetItem * this_ptr, int column, QString const * text) {
  this_ptr->setText(column, *text);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QTreeWidgetItem_icon(QTreeWidgetItem const * this_ptr, int column) {
  return new QIcon(this_ptr->icon(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setIcon(QTreeWidgetItem * this_ptr, int column, QIcon const * icon) {
  this_ptr->setIcon(column, *icon);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeWidgetItem_statusTip(QTreeWidgetItem const * this_ptr, int column) {
  return new QString(this_ptr->statusTip(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setStatusTip(QTreeWidgetItem * this_ptr, int column, QString const * statusTip) {
  this_ptr->setStatusTip(column, *statusTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeWidgetItem_toolTip(QTreeWidgetItem const * this_ptr, int column) {
  return new QString(this_ptr->toolTip(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setToolTip(QTreeWidgetItem * this_ptr, int column, QString const * toolTip) {
  this_ptr->setToolTip(column, *toolTip);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeWidgetItem_whatsThis(QTreeWidgetItem const * this_ptr, int column) {
  return new QString(this_ptr->whatsThis(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setWhatsThis(QTreeWidgetItem * this_ptr, int column, QString const * whatsThis) {
  this_ptr->setWhatsThis(column, *whatsThis);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QTreeWidgetItem_font(QTreeWidgetItem const * this_ptr, int column) {
  return new QFont(this_ptr->font(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setFont(QTreeWidgetItem * this_ptr, int column, QFont const * font) {
  this_ptr->setFont(column, *font);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidgetItem_textAlignment(QTreeWidgetItem const * this_ptr, int column) {
  return this_ptr->textAlignment(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setTextAlignment(QTreeWidgetItem * this_ptr, int column, int alignment) {
  this_ptr->setTextAlignment(column, alignment);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QTreeWidgetItem_backgroundColor(QTreeWidgetItem const * this_ptr, int column) {
  return new QColor(this_ptr->backgroundColor(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setBackgroundColor(QTreeWidgetItem * this_ptr, int column, QColor const * color) {
  this_ptr->setBackgroundColor(column, *color);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QTreeWidgetItem_background(QTreeWidgetItem const * this_ptr, int column) {
  return new QBrush(this_ptr->background(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setBackground(QTreeWidgetItem * this_ptr, int column, QBrush const * brush) {
  this_ptr->setBackground(column, *brush);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QTreeWidgetItem_textColor(QTreeWidgetItem const * this_ptr, int column) {
  return new QColor(this_ptr->textColor(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setTextColor(QTreeWidgetItem * this_ptr, int column, QColor const * color) {
  this_ptr->setTextColor(column, *color);
}


RITUAL_EXPORT QBrush * ctr_qt_widgets_ffi_QTreeWidgetItem_foreground(QTreeWidgetItem const * this_ptr, int column) {
  return new QBrush(this_ptr->foreground(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setForeground(QTreeWidgetItem * this_ptr, int column, QBrush const * brush) {
  this_ptr->setForeground(column, *brush);
}


RITUAL_EXPORT Qt::CheckState ctr_qt_widgets_ffi_QTreeWidgetItem_checkState(QTreeWidgetItem const * this_ptr, int column) {
  return this_ptr->checkState(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setCheckState(QTreeWidgetItem * this_ptr, int column, Qt::CheckState state) {
  this_ptr->setCheckState(column, state);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QTreeWidgetItem_sizeHint(QTreeWidgetItem const * this_ptr, int column) {
  return new QSize(this_ptr->sizeHint(column));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setSizeHint(QTreeWidgetItem * this_ptr, int column, QSize const * size) {
  this_ptr->setSizeHint(column, *size);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QTreeWidgetItem_data(QTreeWidgetItem const * this_ptr, int column, int role) {
  return new QVariant(this_ptr->data(column, role));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_setData(QTreeWidgetItem * this_ptr, int column, int role, QVariant const * value) {
  this_ptr->setData(column, role, *value);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidgetItem_operator_(QTreeWidgetItem const * this_ptr, QTreeWidgetItem const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_read(QTreeWidgetItem * this_ptr, QDataStream * in) {
  this_ptr->read(*in);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_write(QTreeWidgetItem const * this_ptr, QDataStream * out) {
  this_ptr->write(*out);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_operator_1(QTreeWidgetItem * this_ptr, QTreeWidgetItem const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_parent(QTreeWidgetItem const * this_ptr) {
  return this_ptr->parent();
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_child(QTreeWidgetItem const * this_ptr, int index) {
  return this_ptr->child(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidgetItem_childCount(QTreeWidgetItem const * this_ptr) {
  return this_ptr->childCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidgetItem_columnCount(QTreeWidgetItem const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidgetItem_indexOfChild(QTreeWidgetItem const * this_ptr, QTreeWidgetItem * child) {
  return this_ptr->indexOfChild(child);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_addChild(QTreeWidgetItem * this_ptr, QTreeWidgetItem * child) {
  this_ptr->addChild(child);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_insertChild(QTreeWidgetItem * this_ptr, int index, QTreeWidgetItem * child) {
  this_ptr->insertChild(index, child);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_removeChild(QTreeWidgetItem * this_ptr, QTreeWidgetItem * child) {
  this_ptr->removeChild(child);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_takeChild(QTreeWidgetItem * this_ptr, int index) {
  return this_ptr->takeChild(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_addChildren(QTreeWidgetItem * this_ptr, QList< QTreeWidgetItem * > const * children) {
  this_ptr->addChildren(*children);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_insertChildren(QTreeWidgetItem * this_ptr, int index, QList< QTreeWidgetItem * > const * children) {
  this_ptr->insertChildren(index, *children);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QTreeWidgetItem_takeChildren(QTreeWidgetItem * this_ptr) {
  return new QList< QTreeWidgetItem * >(this_ptr->takeChildren());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidgetItem_type(QTreeWidgetItem const * this_ptr) {
  return this_ptr->type();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidgetItem_sortChildren(QTreeWidgetItem * this_ptr, int column, Qt::SortOrder order) {
  this_ptr->sortChildren(column, order);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__20(QDataStream * out, QTreeWidgetItem const * item) {
  return &operator<<(*out, *item);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__21(QDataStream * in, QTreeWidgetItem * item) {
  return &operator>>(*in, *item);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QTreeWidget_metaObject(QTreeWidget const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QTreeWidget_qt_metacast(QTreeWidget * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidget_qt_metacall(QTreeWidget * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeWidget_tr(char const * s, char const * c, int n) {
  return new QString(QTreeWidget::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTreeWidget_trUtf8(char const * s, char const * c, int n) {
  return new QString(QTreeWidget::trUtf8(s, c, n));
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_QTreeWidget_QTreeWidget(QWidget * parent) {
  return new QTreeWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_dQTreeWidget(QTreeWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidget_columnCount(QTreeWidget const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setColumnCount(QTreeWidget * this_ptr, int columns) {
  this_ptr->setColumnCount(columns);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_invisibleRootItem(QTreeWidget const * this_ptr) {
  return this_ptr->invisibleRootItem();
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_topLevelItem(QTreeWidget const * this_ptr, int index) {
  return this_ptr->topLevelItem(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidget_topLevelItemCount(QTreeWidget const * this_ptr) {
  return this_ptr->topLevelItemCount();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_insertTopLevelItem(QTreeWidget * this_ptr, int index, QTreeWidgetItem * item) {
  this_ptr->insertTopLevelItem(index, item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_addTopLevelItem(QTreeWidget * this_ptr, QTreeWidgetItem * item) {
  this_ptr->addTopLevelItem(item);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_takeTopLevelItem(QTreeWidget * this_ptr, int index) {
  return this_ptr->takeTopLevelItem(index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidget_indexOfTopLevelItem(QTreeWidget const * this_ptr, QTreeWidgetItem * item) {
  return this_ptr->indexOfTopLevelItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_insertTopLevelItems(QTreeWidget * this_ptr, int index, QList< QTreeWidgetItem * > const * items) {
  this_ptr->insertTopLevelItems(index, *items);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_addTopLevelItems(QTreeWidget * this_ptr, QList< QTreeWidgetItem * > const * items) {
  this_ptr->addTopLevelItems(*items);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_headerItem(QTreeWidget const * this_ptr) {
  return this_ptr->headerItem();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setHeaderItem(QTreeWidget * this_ptr, QTreeWidgetItem * item) {
  this_ptr->setHeaderItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setHeaderLabels(QTreeWidget * this_ptr, QStringList const * labels) {
  this_ptr->setHeaderLabels(*labels);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setHeaderLabel(QTreeWidget * this_ptr, QString const * label) {
  this_ptr->setHeaderLabel(*label);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_currentItem(QTreeWidget const * this_ptr) {
  return this_ptr->currentItem();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidget_currentColumn(QTreeWidget const * this_ptr) {
  return this_ptr->currentColumn();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setCurrentItem(QTreeWidget * this_ptr, QTreeWidgetItem * item) {
  this_ptr->setCurrentItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setCurrentItem1(QTreeWidget * this_ptr, QTreeWidgetItem * item, int column) {
  this_ptr->setCurrentItem(item, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setCurrentItem2(QTreeWidget * this_ptr, QTreeWidgetItem * item, int column, int command) {
  this_ptr->setCurrentItem(item, column, QFlags< QItemSelectionModel::SelectionFlag >(command));
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_itemAt(QTreeWidget const * this_ptr, QPoint const * p) {
  return this_ptr->itemAt(*p);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_itemAt1(QTreeWidget const * this_ptr, int x, int y) {
  return this_ptr->itemAt(x, y);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QTreeWidget_visualItemRect(QTreeWidget const * this_ptr, QTreeWidgetItem const * item) {
  return new QRect(this_ptr->visualItemRect(item));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QTreeWidget_sortColumn(QTreeWidget const * this_ptr) {
  return this_ptr->sortColumn();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_sortItems(QTreeWidget * this_ptr, int column, Qt::SortOrder order) {
  this_ptr->sortItems(column, order);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_editItem(QTreeWidget * this_ptr, QTreeWidgetItem * item, int column) {
  this_ptr->editItem(item, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_openPersistentEditor(QTreeWidget * this_ptr, QTreeWidgetItem * item, int column) {
  this_ptr->openPersistentEditor(item, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_closePersistentEditor(QTreeWidget * this_ptr, QTreeWidgetItem * item, int column) {
  this_ptr->closePersistentEditor(item, column);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidget_isPersistentEditorOpen(QTreeWidget const * this_ptr, QTreeWidgetItem * item, int column) {
  return this_ptr->isPersistentEditorOpen(item, column);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QTreeWidget_itemWidget(QTreeWidget const * this_ptr, QTreeWidgetItem * item, int column) {
  return this_ptr->itemWidget(item, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setItemWidget(QTreeWidget * this_ptr, QTreeWidgetItem * item, int column, QWidget * widget) {
  this_ptr->setItemWidget(item, column, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_removeItemWidget(QTreeWidget * this_ptr, QTreeWidgetItem * item, int column) {
  this_ptr->removeItemWidget(item, column);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidget_isItemSelected(QTreeWidget const * this_ptr, QTreeWidgetItem const * item) {
  return this_ptr->isItemSelected(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setItemSelected(QTreeWidget * this_ptr, QTreeWidgetItem const * item, bool select) {
  this_ptr->setItemSelected(item, select);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QTreeWidget_selectedItems(QTreeWidget const * this_ptr) {
  return new QList< QTreeWidgetItem * >(this_ptr->selectedItems());
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QTreeWidget_findItems(QTreeWidget const * this_ptr, QString const * text, int flags, int column) {
  return new QList< QTreeWidgetItem * >(this_ptr->findItems(*text, QFlags< Qt::MatchFlag >(flags), column));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidget_isItemHidden(QTreeWidget const * this_ptr, QTreeWidgetItem const * item) {
  return this_ptr->isItemHidden(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setItemHidden(QTreeWidget * this_ptr, QTreeWidgetItem const * item, bool hide) {
  this_ptr->setItemHidden(item, hide);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidget_isItemExpanded(QTreeWidget const * this_ptr, QTreeWidgetItem const * item) {
  return this_ptr->isItemExpanded(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setItemExpanded(QTreeWidget * this_ptr, QTreeWidgetItem const * item, bool expand) {
  this_ptr->setItemExpanded(item, expand);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidget_isFirstItemColumnSpanned(QTreeWidget const * this_ptr, QTreeWidgetItem const * item) {
  return this_ptr->isFirstItemColumnSpanned(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setFirstItemColumnSpanned(QTreeWidget * this_ptr, QTreeWidgetItem const * item, bool span) {
  this_ptr->setFirstItemColumnSpanned(item, span);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_itemAbove(QTreeWidget const * this_ptr, QTreeWidgetItem const * item) {
  return this_ptr->itemAbove(item);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidget_itemBelow(QTreeWidget const * this_ptr, QTreeWidgetItem const * item) {
  return this_ptr->itemBelow(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_setSelectionModel(QTreeWidget * this_ptr, QItemSelectionModel * selectionModel) {
  this_ptr->setSelectionModel(selectionModel);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_scrollToItem(QTreeWidget * this_ptr, QTreeWidgetItem const * item, QAbstractItemView::ScrollHint hint) {
  this_ptr->scrollToItem(item, hint);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_expandItem(QTreeWidget * this_ptr, QTreeWidgetItem const * item) {
  this_ptr->expandItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_collapseItem(QTreeWidget * this_ptr, QTreeWidgetItem const * item) {
  this_ptr->collapseItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_clear(QTreeWidget * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QUndoGroup_metaObject(QUndoGroup const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QUndoGroup_qt_metacast(QUndoGroup * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoGroup_qt_metacall(QUndoGroup * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoGroup_tr(char const * s, char const * c, int n) {
  return new QString(QUndoGroup::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoGroup_trUtf8(char const * s, char const * c, int n) {
  return new QString(QUndoGroup::trUtf8(s, c, n));
}


RITUAL_EXPORT QUndoGroup * ctr_qt_widgets_ffi_QUndoGroup_QUndoGroup(QObject * parent) {
  return new QUndoGroup(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoGroup_dQUndoGroup(QUndoGroup * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoGroup_addStack(QUndoGroup * this_ptr, QUndoStack * stack) {
  this_ptr->addStack(stack);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoGroup_removeStack(QUndoGroup * this_ptr, QUndoStack * stack) {
  this_ptr->removeStack(stack);
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QUndoGroup_stacks(QUndoGroup const * this_ptr) {
  return new QList< QUndoStack * >(this_ptr->stacks());
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QUndoGroup_activeStack(QUndoGroup const * this_ptr) {
  return this_ptr->activeStack();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoGroup_createUndoAction(QUndoGroup const * this_ptr, QObject * parent, QString const * prefix) {
  return this_ptr->createUndoAction(parent, *prefix);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoGroup_createRedoAction(QUndoGroup const * this_ptr, QObject * parent, QString const * prefix) {
  return this_ptr->createRedoAction(parent, *prefix);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoGroup_canUndo(QUndoGroup const * this_ptr) {
  return this_ptr->canUndo();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoGroup_canRedo(QUndoGroup const * this_ptr) {
  return this_ptr->canRedo();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoGroup_undoText(QUndoGroup const * this_ptr) {
  return new QString(this_ptr->undoText());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoGroup_redoText(QUndoGroup const * this_ptr) {
  return new QString(this_ptr->redoText());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoGroup_isClean(QUndoGroup const * this_ptr) {
  return this_ptr->isClean();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoGroup_undo(QUndoGroup * this_ptr) {
  this_ptr->undo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoGroup_redo(QUndoGroup * this_ptr) {
  this_ptr->redo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoGroup_setActiveStack(QUndoGroup * this_ptr, QUndoStack * stack) {
  this_ptr->setActiveStack(stack);
}


RITUAL_EXPORT QUndoCommand * ctr_qt_widgets_ffi_QUndoCommand_QUndoCommand(QUndoCommand * parent) {
  return new QUndoCommand(parent);
}


RITUAL_EXPORT QUndoCommand * ctr_qt_widgets_ffi_QUndoCommand_QUndoCommand1(QString const * text, QUndoCommand * parent) {
  return new QUndoCommand(*text, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoCommand_dQUndoCommand(QUndoCommand * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoCommand_undo(QUndoCommand * this_ptr) {
  this_ptr->undo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoCommand_redo(QUndoCommand * this_ptr) {
  this_ptr->redo();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoCommand_text(QUndoCommand const * this_ptr) {
  return new QString(this_ptr->text());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoCommand_actionText(QUndoCommand const * this_ptr) {
  return new QString(this_ptr->actionText());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoCommand_setText(QUndoCommand * this_ptr, QString const * text) {
  this_ptr->setText(*text);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoCommand_isObsolete(QUndoCommand const * this_ptr) {
  return this_ptr->isObsolete();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoCommand_setObsolete(QUndoCommand * this_ptr, bool obsolete) {
  this_ptr->setObsolete(obsolete);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoCommand_id(QUndoCommand const * this_ptr) {
  return this_ptr->id();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoCommand_mergeWith(QUndoCommand * this_ptr, QUndoCommand const * other) {
  return this_ptr->mergeWith(other);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoCommand_childCount(QUndoCommand const * this_ptr) {
  return this_ptr->childCount();
}


RITUAL_EXPORT QUndoCommand const * ctr_qt_widgets_ffi_QUndoCommand_child(QUndoCommand const * this_ptr, int index) {
  return this_ptr->child(index);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QUndoStack_metaObject(QUndoStack const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QUndoStack_qt_metacast(QUndoStack * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoStack_qt_metacall(QUndoStack * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoStack_tr(char const * s, char const * c, int n) {
  return new QString(QUndoStack::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoStack_trUtf8(char const * s, char const * c, int n) {
  return new QString(QUndoStack::trUtf8(s, c, n));
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QUndoStack_QUndoStack(QObject * parent) {
  return new QUndoStack(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_dQUndoStack(QUndoStack * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_clear(QUndoStack * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_push(QUndoStack * this_ptr, QUndoCommand * cmd) {
  this_ptr->push(cmd);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoStack_canUndo(QUndoStack const * this_ptr) {
  return this_ptr->canUndo();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoStack_canRedo(QUndoStack const * this_ptr) {
  return this_ptr->canRedo();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoStack_undoText(QUndoStack const * this_ptr) {
  return new QString(this_ptr->undoText());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoStack_redoText(QUndoStack const * this_ptr) {
  return new QString(this_ptr->redoText());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoStack_count(QUndoStack const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoStack_index(QUndoStack const * this_ptr) {
  return this_ptr->index();
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoStack_text(QUndoStack const * this_ptr, int idx) {
  return new QString(this_ptr->text(idx));
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoStack_createUndoAction(QUndoStack const * this_ptr, QObject * parent, QString const * prefix) {
  return this_ptr->createUndoAction(parent, *prefix);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoStack_createRedoAction(QUndoStack const * this_ptr, QObject * parent, QString const * prefix) {
  return this_ptr->createRedoAction(parent, *prefix);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoStack_isActive(QUndoStack const * this_ptr) {
  return this_ptr->isActive();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QUndoStack_isClean(QUndoStack const * this_ptr) {
  return this_ptr->isClean();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoStack_cleanIndex(QUndoStack const * this_ptr) {
  return this_ptr->cleanIndex();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_beginMacro(QUndoStack * this_ptr, QString const * text) {
  this_ptr->beginMacro(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_endMacro(QUndoStack * this_ptr) {
  this_ptr->endMacro();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_setUndoLimit(QUndoStack * this_ptr, int limit) {
  this_ptr->setUndoLimit(limit);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoStack_undoLimit(QUndoStack const * this_ptr) {
  return this_ptr->undoLimit();
}


RITUAL_EXPORT QUndoCommand const * ctr_qt_widgets_ffi_QUndoStack_command(QUndoStack const * this_ptr, int index) {
  return this_ptr->command(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_setClean(QUndoStack * this_ptr) {
  this_ptr->setClean();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_resetClean(QUndoStack * this_ptr) {
  this_ptr->resetClean();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_setIndex(QUndoStack * this_ptr, int idx) {
  this_ptr->setIndex(idx);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_undo(QUndoStack * this_ptr) {
  this_ptr->undo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_redo(QUndoStack * this_ptr) {
  this_ptr->redo();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_setActive(QUndoStack * this_ptr, bool active) {
  this_ptr->setActive(active);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QUndoView_metaObject(QUndoView const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QUndoView_qt_metacast(QUndoView * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QUndoView_qt_metacall(QUndoView * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoView_tr(char const * s, char const * c, int n) {
  return new QString(QUndoView::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoView_trUtf8(char const * s, char const * c, int n) {
  return new QString(QUndoView::trUtf8(s, c, n));
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_QUndoView_QUndoView(QWidget * parent) {
  return new QUndoView(parent);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_QUndoView_QUndoView1(QUndoStack * stack, QWidget * parent) {
  return new QUndoView(stack, parent);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_QUndoView_QUndoView2(QUndoGroup * group, QWidget * parent) {
  return new QUndoView(group, parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoView_dQUndoView(QUndoView * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QUndoView_stack(QUndoView const * this_ptr) {
  return this_ptr->stack();
}


RITUAL_EXPORT QUndoGroup * ctr_qt_widgets_ffi_QUndoView_group(QUndoView const * this_ptr) {
  return this_ptr->group();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoView_setEmptyLabel(QUndoView * this_ptr, QString const * label) {
  this_ptr->setEmptyLabel(*label);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QUndoView_emptyLabel(QUndoView const * this_ptr) {
  return new QString(this_ptr->emptyLabel());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoView_setCleanIcon(QUndoView * this_ptr, QIcon const * icon) {
  this_ptr->setCleanIcon(*icon);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QUndoView_cleanIcon(QUndoView const * this_ptr) {
  return new QIcon(this_ptr->cleanIcon());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoView_setStack(QUndoView * this_ptr, QUndoStack * stack) {
  this_ptr->setStack(stack);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoView_setGroup(QUndoView * this_ptr, QUndoGroup * group) {
  this_ptr->setGroup(group);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWhatsThis_enterWhatsThisMode() {
  QWhatsThis::enterWhatsThisMode();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWhatsThis_inWhatsThisMode() {
  return QWhatsThis::inWhatsThisMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWhatsThis_leaveWhatsThisMode() {
  QWhatsThis::leaveWhatsThisMode();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWhatsThis_showText(QPoint const * pos, QString const * text, QWidget * w) {
  QWhatsThis::showText(*pos, *text, w);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWhatsThis_hideText() {
  QWhatsThis::hideText();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QWhatsThis_createAction(QObject * parent) {
  return QWhatsThis::createAction(parent);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWidgetAction_metaObject(QWidgetAction const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QWidgetAction_qt_metacast(QWidgetAction * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidgetAction_qt_metacall(QWidgetAction * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidgetAction_tr(char const * s, char const * c, int n) {
  return new QString(QWidgetAction::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWidgetAction_trUtf8(char const * s, char const * c, int n) {
  return new QString(QWidgetAction::trUtf8(s, c, n));
}


RITUAL_EXPORT QWidgetAction * ctr_qt_widgets_ffi_QWidgetAction_QWidgetAction(QObject * parent) {
  return new QWidgetAction(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidgetAction_dQWidgetAction(QWidgetAction * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidgetAction_setDefaultWidget(QWidgetAction * this_ptr, QWidget * w) {
  this_ptr->setDefaultWidget(w);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidgetAction_defaultWidget(QWidgetAction const * this_ptr) {
  return this_ptr->defaultWidget();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidgetAction_requestWidget(QWidgetAction * this_ptr, QWidget * parent) {
  return this_ptr->requestWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidgetAction_releaseWidget(QWidgetAction * this_ptr, QWidget * widget) {
  this_ptr->releaseWidget(widget);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWizard_metaObject(QWizard const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QWizard_qt_metacast(QWizard * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizard_qt_metacall(QWizard * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizard_tr(char const * s, char const * c, int n) {
  return new QString(QWizard::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizard_trUtf8(char const * s, char const * c, int n) {
  return new QString(QWizard::trUtf8(s, c, n));
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_QWizard_QWizard(QWidget * parent, int flags) {
  return new QWizard(parent, QFlags< Qt::WindowType >(flags));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_dQWizard(QWizard * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizard_addPage(QWizard * this_ptr, QWizardPage * page) {
  return this_ptr->addPage(page);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setPage(QWizard * this_ptr, int id, QWizardPage * page) {
  this_ptr->setPage(id, page);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_removePage(QWizard * this_ptr, int id) {
  this_ptr->removePage(id);
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_QWizard_page(QWizard const * this_ptr, int id) {
  return this_ptr->page(id);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWizard_hasVisitedPage(QWizard const * this_ptr, int id) {
  return this_ptr->hasVisitedPage(id);
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QWizard_visitedPages(QWizard const * this_ptr) {
  return new QList< int >(this_ptr->visitedPages());
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QWizard_visitedIds(QWizard const * this_ptr) {
  return new QList< int >(this_ptr->visitedIds());
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QWizard_pageIds(QWizard const * this_ptr) {
  return new QList< int >(this_ptr->pageIds());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setStartId(QWizard * this_ptr, int id) {
  this_ptr->setStartId(id);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizard_startId(QWizard const * this_ptr) {
  return this_ptr->startId();
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_QWizard_currentPage(QWizard const * this_ptr) {
  return this_ptr->currentPage();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizard_currentId(QWizard const * this_ptr) {
  return this_ptr->currentId();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWizard_validateCurrentPage(QWizard * this_ptr) {
  return this_ptr->validateCurrentPage();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizard_nextId(QWizard const * this_ptr) {
  return this_ptr->nextId();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setField(QWizard * this_ptr, QString const * name, QVariant const * value) {
  this_ptr->setField(*name, *value);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QWizard_field(QWizard const * this_ptr, QString const * name) {
  return new QVariant(this_ptr->field(*name));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setWizardStyle(QWizard * this_ptr, QWizard::WizardStyle style) {
  this_ptr->setWizardStyle(style);
}


RITUAL_EXPORT QWizard::WizardStyle ctr_qt_widgets_ffi_QWizard_wizardStyle(QWizard const * this_ptr) {
  return this_ptr->wizardStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setOption(QWizard * this_ptr, QWizard::WizardOption option, bool on) {
  this_ptr->setOption(option, on);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWizard_testOption(QWizard const * this_ptr, QWizard::WizardOption option) {
  return this_ptr->testOption(option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setOptions(QWizard * this_ptr, int options) {
  this_ptr->setOptions(QFlags< QWizard::WizardOption >(options));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizard_options(QWizard const * this_ptr) {
  return int(this_ptr->options());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setButtonText(QWizard * this_ptr, QWizard::WizardButton which, QString const * text) {
  this_ptr->setButtonText(which, *text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizard_buttonText(QWizard const * this_ptr, QWizard::WizardButton which) {
  return new QString(this_ptr->buttonText(which));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setButtonLayout(QWizard * this_ptr, QList< QWizard::WizardButton > const * layout) {
  this_ptr->setButtonLayout(*layout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setButton(QWizard * this_ptr, QWizard::WizardButton which, QAbstractButton * button) {
  this_ptr->setButton(which, button);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QWizard_button(QWizard const * this_ptr, QWizard::WizardButton which) {
  return this_ptr->button(which);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setTitleFormat(QWizard * this_ptr, Qt::TextFormat format) {
  this_ptr->setTitleFormat(format);
}


RITUAL_EXPORT Qt::TextFormat ctr_qt_widgets_ffi_QWizard_titleFormat(QWizard const * this_ptr) {
  return this_ptr->titleFormat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setSubTitleFormat(QWizard * this_ptr, Qt::TextFormat format) {
  this_ptr->setSubTitleFormat(format);
}


RITUAL_EXPORT Qt::TextFormat ctr_qt_widgets_ffi_QWizard_subTitleFormat(QWizard const * this_ptr) {
  return this_ptr->subTitleFormat();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setPixmap(QWizard * this_ptr, QWizard::WizardPixmap which, QPixmap const * pixmap) {
  this_ptr->setPixmap(which, *pixmap);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QWizard_pixmap(QWizard const * this_ptr, QWizard::WizardPixmap which) {
  return new QPixmap(this_ptr->pixmap(which));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setSideWidget(QWizard * this_ptr, QWidget * widget) {
  this_ptr->setSideWidget(widget);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWizard_sideWidget(QWizard const * this_ptr) {
  return this_ptr->sideWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setDefaultProperty(QWizard * this_ptr, char const * className, char const * property, char const * changedSignal) {
  this_ptr->setDefaultProperty(className, property, changedSignal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setVisible(QWizard * this_ptr, bool visible) {
  this_ptr->setVisible(visible);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QWizard_sizeHint(QWizard const * this_ptr) {
  return new QSize(this_ptr->sizeHint());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_back(QWizard * this_ptr) {
  this_ptr->back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_next(QWizard * this_ptr) {
  this_ptr->next();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_restart(QWizard * this_ptr) {
  this_ptr->restart();
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_QWizardPage_metaObject(QWizardPage const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QWizardPage_qt_metacast(QWizardPage * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizardPage_qt_metacall(QWizardPage * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizardPage_tr(char const * s, char const * c, int n) {
  return new QString(QWizardPage::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizardPage_trUtf8(char const * s, char const * c, int n) {
  return new QString(QWizardPage::trUtf8(s, c, n));
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_QWizardPage_QWizardPage(QWidget * parent) {
  return new QWizardPage(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_dQWizardPage(QWizardPage * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_setTitle(QWizardPage * this_ptr, QString const * title) {
  this_ptr->setTitle(*title);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizardPage_title(QWizardPage const * this_ptr) {
  return new QString(this_ptr->title());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_setSubTitle(QWizardPage * this_ptr, QString const * subTitle) {
  this_ptr->setSubTitle(*subTitle);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizardPage_subTitle(QWizardPage const * this_ptr) {
  return new QString(this_ptr->subTitle());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_setPixmap(QWizardPage * this_ptr, QWizard::WizardPixmap which, QPixmap const * pixmap) {
  this_ptr->setPixmap(which, *pixmap);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QWizardPage_pixmap(QWizardPage const * this_ptr, QWizard::WizardPixmap which) {
  return new QPixmap(this_ptr->pixmap(which));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_setFinalPage(QWizardPage * this_ptr, bool finalPage) {
  this_ptr->setFinalPage(finalPage);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWizardPage_isFinalPage(QWizardPage const * this_ptr) {
  return this_ptr->isFinalPage();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_setCommitPage(QWizardPage * this_ptr, bool commitPage) {
  this_ptr->setCommitPage(commitPage);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWizardPage_isCommitPage(QWizardPage const * this_ptr) {
  return this_ptr->isCommitPage();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_setButtonText(QWizardPage * this_ptr, QWizard::WizardButton which, QString const * text) {
  this_ptr->setButtonText(which, *text);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QWizardPage_buttonText(QWizardPage const * this_ptr, QWizard::WizardButton which) {
  return new QString(this_ptr->buttonText(which));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_initializePage(QWizardPage * this_ptr) {
  this_ptr->initializePage();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizardPage_cleanupPage(QWizardPage * this_ptr) {
  this_ptr->cleanupPage();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWizardPage_validatePage(QWizardPage * this_ptr) {
  return this_ptr->validatePage();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QWizardPage_isComplete(QWizardPage const * this_ptr) {
  return this_ptr->isComplete();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWizardPage_nextId(QWizardPage const * this_ptr) {
  return this_ptr->nextId();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSizePolicy_dQSizePolicy(QSizePolicy * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QSizePolicy_QSizePolicy2(QSizePolicy const * other) {
  return new QSizePolicy(*other);
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QSizePolicy_operator_(QSizePolicy * this_ptr, QSizePolicy const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_QWidget1() {
  return new QWidget();
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_QAbstractSpinBox_QAbstractSpinBox1() {
  return new QAbstractSpinBox();
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_QAbstractSlider_QAbstractSlider1() {
  return new QAbstractSlider();
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_QSlider_QSlider2() {
  return new QSlider();
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_QTabBar_QTabBar1() {
  return new QTabBar();
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_QTabWidget_QTabWidget1() {
  return new QTabWidget();
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_QFrame_QFrame1() {
  return new QFrame();
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_QStyleOption_QStyleOption2() {
  return new QStyleOption();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionFocusRect_dQStyleOptionFocusRect(QStyleOptionFocusRect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionFrame_dQStyleOptionFrame(QStyleOptionFrame * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionTabWidgetFrame_dQStyleOptionTabWidgetFrame(QStyleOptionTabWidgetFrame * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionTabBarBase_dQStyleOptionTabBarBase(QStyleOptionTabBarBase * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionHeader_dQStyleOptionHeader(QStyleOptionHeader * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionButton_dQStyleOptionButton(QStyleOptionButton * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionTab_dQStyleOptionTab(QStyleOptionTab * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionTabV4_dQStyleOptionTabV4(QStyleOptionTabV4 * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyleOptionTabV4 * ctr_qt_widgets_ffi_QStyleOptionTabV4_QStyleOptionTabV41(QStyleOptionTabV4 const * other) {
  return new QStyleOptionTabV4(*other);
}


RITUAL_EXPORT QStyleOptionTabV4 * ctr_qt_widgets_ffi_QStyleOptionTabV4_operator_(QStyleOptionTabV4 * this_ptr, QStyleOptionTabV4 const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionToolBar_dQStyleOptionToolBar(QStyleOptionToolBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionProgressBar_dQStyleOptionProgressBar(QStyleOptionProgressBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionMenuItem_dQStyleOptionMenuItem(QStyleOptionMenuItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionDockWidget_dQStyleOptionDockWidget(QStyleOptionDockWidget * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionViewItem_dQStyleOptionViewItem(QStyleOptionViewItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionToolBox_dQStyleOptionToolBox(QStyleOptionToolBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionRubberBand_dQStyleOptionRubberBand(QStyleOptionRubberBand * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionComplex_dQStyleOptionComplex(QStyleOptionComplex * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_QStyleOptionComplex_QStyleOptionComplex2() {
  return new QStyleOptionComplex();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionSlider_dQStyleOptionSlider(QStyleOptionSlider * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionSpinBox_dQStyleOptionSpinBox(QStyleOptionSpinBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionToolButton_dQStyleOptionToolButton(QStyleOptionToolButton * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionComboBox_dQStyleOptionComboBox(QStyleOptionComboBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionTitleBar_dQStyleOptionTitleBar(QStyleOptionTitleBar * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionGroupBox_dQStyleOptionGroupBox(QStyleOptionGroupBox * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionSizeGrip_dQStyleOptionSizeGrip(QStyleOptionSizeGrip * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleOptionGraphicsItem_dQStyleOptionGraphicsItem(QStyleOptionGraphicsItem * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyleHintReturn * ctr_qt_widgets_ffi_QStyleHintReturn_QStyleHintReturn1() {
  return new QStyleHintReturn();
}


RITUAL_EXPORT QStyleHintReturn * ctr_qt_widgets_ffi_QStyleHintReturn_QStyleHintReturn2(QStyleHintReturn const * other) {
  return new QStyleHintReturn(*other);
}


RITUAL_EXPORT QStyleHintReturn * ctr_qt_widgets_ffi_QStyleHintReturn_operator_(QStyleHintReturn * this_ptr, QStyleHintReturn const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QStyleHintReturnMask * ctr_qt_widgets_ffi_QStyleHintReturnMask_QStyleHintReturnMask1(QStyleHintReturnMask const * other) {
  return new QStyleHintReturnMask(*other);
}


RITUAL_EXPORT QStyleHintReturnMask * ctr_qt_widgets_ffi_QStyleHintReturnMask_operator_(QStyleHintReturnMask * this_ptr, QStyleHintReturnMask const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QStyleHintReturnVariant * ctr_qt_widgets_ffi_QStyleHintReturnVariant_QStyleHintReturnVariant1(QStyleHintReturnVariant const * other) {
  return new QStyleHintReturnVariant(*other);
}


RITUAL_EXPORT QStyleHintReturnVariant * ctr_qt_widgets_ffi_QStyleHintReturnVariant_operator_(QStyleHintReturnVariant * this_ptr, QStyleHintReturnVariant const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_QAbstractScrollArea_QAbstractScrollArea1() {
  return new QAbstractScrollArea();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QAction_QAction3() {
  return new QAction();
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QLayoutItem_operator_(QLayoutItem * this_ptr, QLayoutItem const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_QSpacerItem_QSpacerItem2(QSpacerItem const * other) {
  return new QSpacerItem(*other);
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_QSpacerItem_operator_(QSpacerItem * this_ptr, QSpacerItem const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QButtonGroup * ctr_qt_widgets_ffi_QButtonGroup_QButtonGroup1() {
  return new QButtonGroup();
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_QCalendarWidget_QCalendarWidget1() {
  return new QCalendarWidget();
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_QCheckBox_QCheckBox2() {
  return new QCheckBox();
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_QDialog_QDialog1() {
  return new QDialog();
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_QColorDialog_QColorDialog2() {
  return new QColorDialog();
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_QColumnView_QColumnView1() {
  return new QColumnView();
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_QComboBox_QComboBox1() {
  return new QComboBox();
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QPushButton_QPushButton3() {
  return new QPushButton();
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_QCommandLinkButton_QCommandLinkButton3() {
  return new QCommandLinkButton();
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QCompleter_QCompleter3() {
  return new QCompleter();
}


RITUAL_EXPORT QDataWidgetMapper * ctr_qt_widgets_ffi_QDataWidgetMapper_QDataWidgetMapper1() {
  return new QDataWidgetMapper();
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit4() {
  return new QDateTimeEdit();
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_QTimeEdit_QTimeEdit2() {
  return new QTimeEdit();
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_QDateEdit_QDateEdit2() {
  return new QDateEdit();
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_QDial_QDial1() {
  return new QDial();
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox4() {
  return new QDialogButtonBox();
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_QDirModel_QDirModel2() {
  return new QDirModel();
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QDockWidget_QDockWidget2() {
  return new QDockWidget();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTileRules_dQTileRules(QTileRules * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QTileRules * ctr_qt_widgets_ffi_QTileRules_QTileRules2() {
  return new QTileRules();
}


RITUAL_EXPORT QTileRules * ctr_qt_widgets_ffi_QTileRules_QTileRules3(QTileRules const * other) {
  return new QTileRules(*other);
}


RITUAL_EXPORT QTileRules * ctr_qt_widgets_ffi_QTileRules_operator_(QTileRules * this_ptr, QTileRules const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_QErrorMessage_QErrorMessage1() {
  return new QErrorMessage();
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_QFileDialog_QFileDialog2() {
  return new QFileDialog();
}


RITUAL_EXPORT QFileSystemModel * ctr_qt_widgets_ffi_QFileSystemModel_QFileSystemModel1() {
  return new QFileSystemModel();
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_QFocusFrame_QFocusFrame1() {
  return new QFocusFrame();
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_QFontComboBox_QFontComboBox1() {
  return new QFontComboBox();
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_QFontDialog_QFontDialog2() {
  return new QFontDialog();
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_QFormLayout_QFormLayout1() {
  return new QFormLayout();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFormLayout_TakeRowResult_dTakeRowResult(QFormLayout::TakeRowResult * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QFormLayout::TakeRowResult * ctr_qt_widgets_ffi_QFormLayout_TakeRowResult_TakeRowResult() {
  return new QFormLayout::TakeRowResult();
}


RITUAL_EXPORT QFormLayout::TakeRowResult * ctr_qt_widgets_ffi_QFormLayout_TakeRowResult_TakeRowResult1(QFormLayout::TakeRowResult const * other) {
  return new QFormLayout::TakeRowResult(*other);
}


RITUAL_EXPORT QFormLayout::TakeRowResult * ctr_qt_widgets_ffi_QFormLayout_TakeRowResult_operator_(QFormLayout::TakeRowResult * this_ptr, QFormLayout::TakeRowResult const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QGesture_QGesture1() {
  return new QGesture();
}


RITUAL_EXPORT QPanGesture * ctr_qt_widgets_ffi_QPanGesture_QPanGesture1() {
  return new QPanGesture();
}


RITUAL_EXPORT QPinchGesture * ctr_qt_widgets_ffi_QPinchGesture_QPinchGesture1() {
  return new QPinchGesture();
}


RITUAL_EXPORT QSwipeGesture * ctr_qt_widgets_ffi_QSwipeGesture_QSwipeGesture1() {
  return new QSwipeGesture();
}


RITUAL_EXPORT QTapGesture * ctr_qt_widgets_ffi_QTapGesture_QTapGesture1() {
  return new QTapGesture();
}


RITUAL_EXPORT QTapAndHoldGesture * ctr_qt_widgets_ffi_QTapAndHoldGesture_QTapAndHoldGesture1() {
  return new QTapAndHoldGesture();
}


RITUAL_EXPORT QGestureEvent * ctr_qt_widgets_ffi_QGestureEvent_QGestureEvent2(QGestureEvent const * other) {
  return new QGestureEvent(*other);
}


RITUAL_EXPORT QGestureEvent * ctr_qt_widgets_ffi_QGestureEvent_operator_(QGestureEvent * this_ptr, QGestureEvent const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QGestureRecognizer * ctr_qt_widgets_ffi_QGestureRecognizer_operator_(QGestureRecognizer * this_ptr, QGestureRecognizer const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_QGraphicsPathItem_QGraphicsPathItem2() {
  return new QGraphicsPathItem();
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsRectItem_QGraphicsRectItem3() {
  return new QGraphicsRectItem();
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsEllipseItem_QGraphicsEllipseItem3() {
  return new QGraphicsEllipseItem();
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_QGraphicsPolygonItem_QGraphicsPolygonItem2() {
  return new QGraphicsPolygonItem();
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsLineItem_QGraphicsLineItem3() {
  return new QGraphicsLineItem();
}


RITUAL_EXPORT QGraphicsPixmapItem * ctr_qt_widgets_ffi_QGraphicsPixmapItem_QGraphicsPixmapItem2() {
  return new QGraphicsPixmapItem();
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_QGraphicsTextItem_QGraphicsTextItem2() {
  return new QGraphicsTextItem();
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_QGraphicsSimpleTextItem2() {
  return new QGraphicsSimpleTextItem();
}


RITUAL_EXPORT QGraphicsItemGroup * ctr_qt_widgets_ffi_QGraphicsItemGroup_QGraphicsItemGroup1() {
  return new QGraphicsItemGroup();
}


RITUAL_EXPORT QGraphicsAnchorLayout * ctr_qt_widgets_ffi_QGraphicsAnchorLayout_QGraphicsAnchorLayout1() {
  return new QGraphicsAnchorLayout();
}


RITUAL_EXPORT QGraphicsColorizeEffect * ctr_qt_widgets_ffi_QGraphicsColorizeEffect_QGraphicsColorizeEffect1() {
  return new QGraphicsColorizeEffect();
}


RITUAL_EXPORT QGraphicsBlurEffect * ctr_qt_widgets_ffi_QGraphicsBlurEffect_QGraphicsBlurEffect1() {
  return new QGraphicsBlurEffect();
}


RITUAL_EXPORT QGraphicsDropShadowEffect * ctr_qt_widgets_ffi_QGraphicsDropShadowEffect_QGraphicsDropShadowEffect1() {
  return new QGraphicsDropShadowEffect();
}


RITUAL_EXPORT QGraphicsOpacityEffect * ctr_qt_widgets_ffi_QGraphicsOpacityEffect_QGraphicsOpacityEffect1() {
  return new QGraphicsOpacityEffect();
}


RITUAL_EXPORT QGraphicsGridLayout * ctr_qt_widgets_ffi_QGraphicsGridLayout_QGraphicsGridLayout1() {
  return new QGraphicsGridLayout();
}


RITUAL_EXPORT QGraphicsItemAnimation * ctr_qt_widgets_ffi_QGraphicsItemAnimation_QGraphicsItemAnimation1() {
  return new QGraphicsItemAnimation();
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_QGraphicsLinearLayout_QGraphicsLinearLayout2() {
  return new QGraphicsLinearLayout();
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsWidget_QGraphicsWidget1() {
  return new QGraphicsWidget();
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_QGraphicsProxyWidget_QGraphicsProxyWidget1() {
  return new QGraphicsProxyWidget();
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsScene_QGraphicsScene3() {
  return new QGraphicsScene();
}


RITUAL_EXPORT QGraphicsSceneMouseEvent * ctr_qt_widgets_ffi_QGraphicsSceneMouseEvent_QGraphicsSceneMouseEvent1() {
  return new QGraphicsSceneMouseEvent();
}


RITUAL_EXPORT QGraphicsSceneWheelEvent * ctr_qt_widgets_ffi_QGraphicsSceneWheelEvent_QGraphicsSceneWheelEvent1() {
  return new QGraphicsSceneWheelEvent();
}


RITUAL_EXPORT QGraphicsSceneContextMenuEvent * ctr_qt_widgets_ffi_QGraphicsSceneContextMenuEvent_QGraphicsSceneContextMenuEvent1() {
  return new QGraphicsSceneContextMenuEvent();
}


RITUAL_EXPORT QGraphicsSceneHoverEvent * ctr_qt_widgets_ffi_QGraphicsSceneHoverEvent_QGraphicsSceneHoverEvent1() {
  return new QGraphicsSceneHoverEvent();
}


RITUAL_EXPORT QGraphicsSceneHelpEvent * ctr_qt_widgets_ffi_QGraphicsSceneHelpEvent_QGraphicsSceneHelpEvent1() {
  return new QGraphicsSceneHelpEvent();
}


RITUAL_EXPORT QGraphicsSceneDragDropEvent * ctr_qt_widgets_ffi_QGraphicsSceneDragDropEvent_QGraphicsSceneDragDropEvent1() {
  return new QGraphicsSceneDragDropEvent();
}


RITUAL_EXPORT QGraphicsScale * ctr_qt_widgets_ffi_QGraphicsScale_QGraphicsScale1() {
  return new QGraphicsScale();
}


RITUAL_EXPORT QGraphicsRotation * ctr_qt_widgets_ffi_QGraphicsRotation_QGraphicsRotation1() {
  return new QGraphicsRotation();
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_QScrollArea_QScrollArea1() {
  return new QScrollArea();
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QGraphicsView_QGraphicsView2() {
  return new QGraphicsView();
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_QGroupBox_QGroupBox2() {
  return new QGroupBox();
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_QLineEdit_QLineEdit2() {
  return new QLineEdit();
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_QInputDialog_QInputDialog1() {
  return new QInputDialog();
}


RITUAL_EXPORT QItemDelegate * ctr_qt_widgets_ffi_QItemDelegate_QItemDelegate1() {
  return new QItemDelegate();
}


RITUAL_EXPORT QItemEditorCreatorBase * ctr_qt_widgets_ffi_QItemEditorCreatorBase_operator_(QItemEditorCreatorBase * this_ptr, QItemEditorCreatorBase const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QItemEditorFactory * ctr_qt_widgets_ffi_QItemEditorFactory_QItemEditorFactory1(QItemEditorFactory const * other) {
  return new QItemEditorFactory(*other);
}


RITUAL_EXPORT QItemEditorFactory * ctr_qt_widgets_ffi_QItemEditorFactory_operator_(QItemEditorFactory * this_ptr, QItemEditorFactory const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_QKeyEventTransition_QKeyEventTransition2() {
  return new QKeyEventTransition();
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_QKeySequenceEdit_QKeySequenceEdit2() {
  return new QKeySequenceEdit();
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_QLabel_QLabel2() {
  return new QLabel();
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_QLCDNumber_QLCDNumber2() {
  return new QLCDNumber();
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_QListView_QListView1() {
  return new QListView();
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem4() {
  return new QListWidgetItem();
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_QListWidget_QListWidget1() {
  return new QListWidget();
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_QMainWindow_QMainWindow1() {
  return new QMainWindow();
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_QMdiArea_QMdiArea1() {
  return new QMdiArea();
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QMdiSubWindow_QMdiSubWindow1() {
  return new QMdiSubWindow();
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenu_QMenu2() {
  return new QMenu();
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_QMenuBar_QMenuBar1() {
  return new QMenuBar();
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox3() {
  return new QMessageBox();
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_QMouseEventTransition_QMouseEventTransition2() {
  return new QMouseEventTransition();
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_QOpenGLWidget_QOpenGLWidget1() {
  return new QOpenGLWidget();
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_QTextEdit_QTextEdit2() {
  return new QTextEdit();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_dExtraSelection(QTextEdit::ExtraSelection * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_ExtraSelection() {
  return new QTextEdit::ExtraSelection();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_ExtraSelection1(QTextEdit::ExtraSelection const * other) {
  return new QTextEdit::ExtraSelection(*other);
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QTextEdit_ExtraSelection_operator_(QTextEdit::ExtraSelection * this_ptr, QTextEdit::ExtraSelection const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_QPlainTextEdit_QPlainTextEdit2() {
  return new QPlainTextEdit();
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_QProgressBar_QProgressBar1() {
  return new QProgressBar();
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_QProgressDialog_QProgressDialog2() {
  return new QProgressDialog();
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_QProxyStyle_QProxyStyle2() {
  return new QProxyStyle();
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_QRadioButton_QRadioButton2() {
  return new QRadioButton();
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_QScrollBar_QScrollBar2() {
  return new QScrollBar();
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_QSpinBox_QSpinBox1() {
  return new QSpinBox();
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_QDoubleSpinBox_QDoubleSpinBox1() {
  return new QDoubleSpinBox();
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen3() {
  return new QSplashScreen();
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_QSplitter_QSplitter2() {
  return new QSplitter();
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_QStackedWidget_QStackedWidget1() {
  return new QStackedWidget();
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_QStatusBar_QStatusBar1() {
  return new QStatusBar();
}


RITUAL_EXPORT QStyledItemDelegate * ctr_qt_widgets_ffi_QStyledItemDelegate_QStyledItemDelegate1() {
  return new QStyledItemDelegate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyleFactory_dQStyleFactory(QStyleFactory * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QStyleFactory * ctr_qt_widgets_ffi_QStyleFactory_QStyleFactory() {
  return new QStyleFactory();
}


RITUAL_EXPORT QStyleFactory * ctr_qt_widgets_ffi_QStyleFactory_QStyleFactory1(QStyleFactory const * other) {
  return new QStyleFactory(*other);
}


RITUAL_EXPORT QStyleFactory * ctr_qt_widgets_ffi_QStyleFactory_operator_(QStyleFactory * this_ptr, QStyleFactory const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePainter_dQStylePainter(QStylePainter * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QSystemTrayIcon * ctr_qt_widgets_ffi_QSystemTrayIcon_QSystemTrayIcon2() {
  return new QSystemTrayIcon();
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_QTableView_QTableView1() {
  return new QTableView();
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_QTableWidgetItem4() {
  return new QTableWidgetItem();
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_QTableWidget_QTableWidget2() {
  return new QTableWidget();
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_QTextBrowser_QTextBrowser1() {
  return new QTextBrowser();
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_QToolBar_QToolBar2() {
  return new QToolBar();
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_QToolBox_QToolBox1() {
  return new QToolBox();
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_QToolButton_QToolButton1() {
  return new QToolButton();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_dQToolTip(QToolTip * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QToolTip * ctr_qt_widgets_ffi_QToolTip_QToolTip(QToolTip const * other) {
  return new QToolTip(*other);
}


RITUAL_EXPORT QToolTip * ctr_qt_widgets_ffi_QToolTip_operator_(QToolTip * this_ptr, QToolTip const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_QTreeView_QTreeView1() {
  return new QTreeView();
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem9() {
  return new QTreeWidgetItem();
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_QTreeWidget_QTreeWidget1() {
  return new QTreeWidget();
}


RITUAL_EXPORT QUndoGroup * ctr_qt_widgets_ffi_QUndoGroup_QUndoGroup1() {
  return new QUndoGroup();
}


RITUAL_EXPORT QUndoCommand * ctr_qt_widgets_ffi_QUndoCommand_QUndoCommand2() {
  return new QUndoCommand();
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QUndoStack_QUndoStack1() {
  return new QUndoStack();
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_QUndoView_QUndoView3() {
  return new QUndoView();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWhatsThis_dQWhatsThis(QWhatsThis * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QWhatsThis * ctr_qt_widgets_ffi_QWhatsThis_QWhatsThis(QWhatsThis const * other) {
  return new QWhatsThis(*other);
}


RITUAL_EXPORT QWhatsThis * ctr_qt_widgets_ffi_QWhatsThis_operator_(QWhatsThis * this_ptr, QWhatsThis const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_QWizard_QWizard1() {
  return new QWizard();
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_QWizardPage_QWizardPage1() {
  return new QWizardPage();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QPair_double_QPointF_QPair() {
  return new QPair< double, QPointF >();
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QPair_double_double_QPair() {
  return new QPair< double, double >();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QPair_double_QPointF_QPair1(double const * t1, QPointF const * t2) {
  return new QPair< double, QPointF >(*t1, *t2);
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QPair_double_double_QPair1(double const * t1, double const * t2) {
  return new QPair< double, double >(*t1, *t2);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPair_double_QPointF_swap(QPair< double, QPointF > * this_ptr, QPair< double, QPointF > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPair_double_double_swap(QPair< double, double > * this_ptr, QPair< double, double > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__22(QPair< double, QPointF > const * p1, QPair< double, QPointF > const * p2) {
  return operator==(*p1, *p2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__23(QPair< double, double > const * p1, QPair< double, double > const * p2) {
  return operator==(*p1, *p2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_38(QPair< double, double > const * p1, QPair< double, double > const * p2) {
  return operator<(*p1, *p2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_40(QPair< double, double > const * p1, QPair< double, double > const * p2) {
  return operator>(*p1, *p2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__27(QPair< double, double > const * p1, QPair< double, double > const * p2) {
  return operator<=(*p1, *p2);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__29(QPair< double, double > const * p1, QPair< double, double > const * p2) {
  return operator>=(*p1, *p2);
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_qMakePair(double const * x, QPointF const * y) {
  return new QPair< double, QPointF >(qMakePair(*x, *y));
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_qMakePair1(double const * x, double const * y) {
  return new QPair< double, double >(qMakePair(*x, *y));
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash2(QPair< double, double > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_QVector() {
  return new QVector< void * >();
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_QVector() {
  return new QVector< QColor >();
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_QVector1(int size) {
  return new QVector< void * >(size);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_QVector1(int size) {
  return new QVector< QColor >(size);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_QVector2(int size, void * const * t) {
  return new QVector< void * >(size, *t);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_QVector2(int size, QColor const * t) {
  return new QVector< QColor >(size, *t);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_QVector3(QVector< void * > const * v) {
  return new QVector< void * >(*v);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_QVector3(QVector< QColor > const * v) {
  return new QVector< QColor >(*v);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_dQVector(QVector< void * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_dQVector(QVector< QColor > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_operator_(QVector< void * > * this_ptr, QVector< void * > const * v) {
  return &this_ptr->operator=(*v);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_operator_(QVector< QColor > * this_ptr, QVector< QColor > const * v) {
  return &this_ptr->operator=(*v);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_swap(QVector< void * > * this_ptr, QVector< void * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_swap(QVector< QColor > * this_ptr, QVector< QColor > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_operator__(QVector< void * > const * this_ptr, QVector< void * > const * v) {
  return this_ptr->operator==(*v);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_operator__(QVector< QColor > const * this_ptr, QVector< QColor > const * v) {
  return this_ptr->operator==(*v);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_size(QVector< void * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_size(QVector< QColor > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_isEmpty(QVector< void * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_isEmpty(QVector< QColor > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_resize(QVector< void * > * this_ptr, int size) {
  this_ptr->resize(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_resize(QVector< QColor > * this_ptr, int size) {
  this_ptr->resize(size);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_capacity(QVector< void * > const * this_ptr) {
  return this_ptr->capacity();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_capacity(QVector< QColor > const * this_ptr) {
  return this_ptr->capacity();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_reserve(QVector< void * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_reserve(QVector< QColor > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_squeeze(QVector< void * > * this_ptr) {
  this_ptr->squeeze();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_squeeze(QVector< QColor > * this_ptr) {
  this_ptr->squeeze();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_detach(QVector< void * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_detach(QVector< QColor > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_isDetached(QVector< void * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_isDetached(QVector< QColor > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_setSharable(QVector< void * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_setSharable(QVector< QColor > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_isSharedWith(QVector< void * > const * this_ptr, QVector< void * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_isSharedWith(QVector< QColor > const * this_ptr, QVector< QColor > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT void * * ctr_qt_widgets_ffi_QVector_void_ptr_data(QVector< void * > * this_ptr) {
  return this_ptr->data();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_data(QVector< QColor > * this_ptr) {
  return this_ptr->data();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_data1(QVector< void * > const * this_ptr) {
  return this_ptr->data();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_data1(QVector< QColor > const * this_ptr) {
  return this_ptr->data();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_constData(QVector< void * > const * this_ptr) {
  return this_ptr->constData();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_constData(QVector< QColor > const * this_ptr) {
  return this_ptr->constData();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_clear(QVector< void * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_clear(QVector< QColor > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_at(QVector< void * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_at(QVector< QColor > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT void * * ctr_qt_widgets_ffi_QVector_void_ptr_operator__2(QVector< void * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_operator__2(QVector< QColor > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_operator__3(QVector< void * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_operator__3(QVector< QColor > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_append(QVector< void * > * this_ptr, void * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_append(QVector< QColor > * this_ptr, QColor const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_append2(QVector< void * > * this_ptr, QVector< void * > const * l) {
  this_ptr->append(*l);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_append2(QVector< QColor > * this_ptr, QVector< QColor > const * l) {
  this_ptr->append(*l);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_prepend1(QVector< void * > * this_ptr, void * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_prepend1(QVector< QColor > * this_ptr, QColor const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_insert1(QVector< void * > * this_ptr, int i, void * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_insert1(QVector< QColor > * this_ptr, int i, QColor const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_insert2(QVector< void * > * this_ptr, int i, int n, void * const * t) {
  this_ptr->insert(i, n, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_insert2(QVector< QColor > * this_ptr, int i, int n, QColor const * t) {
  this_ptr->insert(i, n, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_replace(QVector< void * > * this_ptr, int i, void * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_replace(QVector< QColor > * this_ptr, int i, QColor const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_remove(QVector< void * > * this_ptr, int i) {
  this_ptr->remove(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_remove(QVector< QColor > * this_ptr, int i) {
  this_ptr->remove(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_remove1(QVector< void * > * this_ptr, int i, int n) {
  this_ptr->remove(i, n);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_remove1(QVector< QColor > * this_ptr, int i, int n) {
  this_ptr->remove(i, n);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_removeFirst(QVector< void * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_removeFirst(QVector< QColor > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_removeLast(QVector< void * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_removeLast(QVector< QColor > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QVector_void_ptr_takeFirst(QVector< void * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_takeFirst(QVector< QColor > * this_ptr) {
  return new QColor(this_ptr->takeFirst());
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QVector_void_ptr_takeLast(QVector< void * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_takeLast(QVector< QColor > * this_ptr) {
  return new QColor(this_ptr->takeLast());
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_fill(QVector< void * > * this_ptr, void * const * t, int size) {
  return &this_ptr->fill(*t, size);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_fill(QVector< QColor > * this_ptr, QColor const * t, int size) {
  return &this_ptr->fill(*t, size);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_indexOf(QVector< void * > const * this_ptr, void * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_indexOf(QVector< QColor > const * this_ptr, QColor const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_lastIndexOf(QVector< void * > const * this_ptr, void * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_lastIndexOf(QVector< QColor > const * this_ptr, QColor const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_contains(QVector< void * > const * this_ptr, void * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_contains(QVector< QColor > const * this_ptr, QColor const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_count(QVector< void * > const * this_ptr, void * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_count(QVector< QColor > const * this_ptr, QColor const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_removeAt(QVector< void * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_removeAt(QVector< QColor > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_removeAll(QVector< void * > * this_ptr, void * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_removeAll(QVector< QColor > * this_ptr, QColor const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_removeOne(QVector< void * > * this_ptr, void * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_removeOne(QVector< QColor > * this_ptr, QColor const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_length(QVector< void * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_length(QVector< QColor > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QVector_void_ptr_takeAt(QVector< void * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_takeAt(QVector< QColor > * this_ptr, int i) {
  return new QColor(this_ptr->takeAt(i));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_move(QVector< void * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_move(QVector< QColor > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_count1(QVector< void * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_count1(QVector< QColor > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT void * * ctr_qt_widgets_ffi_QVector_void_ptr_first(QVector< void * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_first(QVector< QColor > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_first1(QVector< void * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_first1(QVector< QColor > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_constFirst(QVector< void * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_constFirst(QVector< QColor > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT void * * ctr_qt_widgets_ffi_QVector_void_ptr_last(QVector< void * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_last(QVector< QColor > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_last1(QVector< void * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_last1(QVector< QColor > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_constLast(QVector< void * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_constLast(QVector< QColor > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_startsWith(QVector< void * > const * this_ptr, void * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_startsWith(QVector< QColor > const * this_ptr, QColor const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_endsWith(QVector< void * > const * this_ptr, void * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_endsWith(QVector< QColor > const * this_ptr, QColor const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_mid(QVector< void * > const * this_ptr, int pos, int len) {
  return new QVector< void * >(this_ptr->mid(pos, len));
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_mid(QVector< QColor > const * this_ptr, int pos, int len) {
  return new QVector< QColor >(this_ptr->mid(pos, len));
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QVector_void_ptr_value(QVector< void * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_value(QVector< QColor > const * this_ptr, int i) {
  return new QColor(this_ptr->value(i));
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_QVector_void_ptr_value1(QVector< void * > const * this_ptr, int i, void * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_value1(QVector< QColor > const * this_ptr, int i, QColor const * defaultValue) {
  return new QColor(this_ptr->value(i, *defaultValue));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_swapItemsAt(QVector< void * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_swapItemsAt(QVector< QColor > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_push_back(QVector< void * > * this_ptr, void * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_push_back(QVector< QColor > * this_ptr, QColor const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_push_front1(QVector< void * > * this_ptr, void * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_push_front1(QVector< QColor > * this_ptr, QColor const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_pop_back(QVector< void * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_pop_back(QVector< QColor > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_pop_front(QVector< void * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_pop_front(QVector< QColor > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_void_ptr_empty(QVector< void * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QVector_QColor_empty(QVector< QColor > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT void * * ctr_qt_widgets_ffi_QVector_void_ptr_front(QVector< void * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_front(QVector< QColor > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_front1(QVector< void * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_front1(QVector< QColor > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT void * * ctr_qt_widgets_ffi_QVector_void_ptr_back(QVector< void * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QVector_QColor_back(QVector< QColor > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT void * const * ctr_qt_widgets_ffi_QVector_void_ptr_back1(QVector< void * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QColor const * ctr_qt_widgets_ffi_QVector_QColor_back1(QVector< QColor > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_void_ptr_shrink_to_fit(QVector< void * > * this_ptr) {
  this_ptr->shrink_to_fit();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QVector_QColor_shrink_to_fit(QVector< QColor > * this_ptr) {
  this_ptr->shrink_to_fit();
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_operator__4(QVector< void * > * this_ptr, QVector< void * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_operator__4(QVector< QColor > * this_ptr, QVector< QColor > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_operator_2(QVector< void * > const * this_ptr, QVector< void * > const * l) {
  return new QVector< void * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_operator_2(QVector< QColor > const * this_ptr, QVector< QColor > const * l) {
  return new QVector< QColor >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_operator__5(QVector< void * > * this_ptr, void * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_operator__5(QVector< QColor > * this_ptr, QColor const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_operator__6(QVector< void * > * this_ptr, void * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_operator__6(QVector< QColor > * this_ptr, QColor const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_operator__7(QVector< void * > * this_ptr, QVector< void * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_operator__7(QVector< QColor > * this_ptr, QVector< QColor > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash3(QVector< void * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_41(QVector< void * > const * lhs, QVector< void * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_43(QVector< void * > const * lhs, QVector< void * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__30(QVector< void * > const * lhs, QVector< void * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__32(QVector< void * > const * lhs, QVector< void * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_QList() {
  return new QList< QGesture * >();
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_QList() {
  return new QList< QTreeWidgetItem * >();
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_QList() {
  return new QList< QAction * >();
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_QList() {
  return new QList< QWidget * >();
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_QList() {
  return new QList< QGraphicsWidget * >();
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_QList() {
  return new QList< QAbstractButton * >();
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_QList() {
  return new QList< QGraphicsItem * >();
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_QList() {
  return new QList< QGraphicsTransform * >();
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_QList() {
  return new QList< QPair< double, QPointF > >();
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_QList() {
  return new QList< QPair< double, double > >();
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_QList() {
  return new QList< QGraphicsView * >();
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_QList() {
  return new QList< QRectF >();
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_QList() {
  return new QList< QListWidgetItem * >();
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_QList() {
  return new QList< QDockWidget * >();
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_QList() {
  return new QList< QMdiSubWindow * >();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_QList() {
  return new QList< QTextEdit::ExtraSelection >();
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_QList() {
  return new QList< QScroller * >();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_QList() {
  return new QList< QTableWidgetSelectionRange >();
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_QList() {
  return new QList< QTableWidgetItem * >();
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_QList() {
  return new QList< QUndoStack * >();
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_QList() {
  return new QList< QWizard::WizardButton >();
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_QList1(QList< QGesture * > const * l) {
  return new QList< QGesture * >(*l);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_QList1(QList< QTreeWidgetItem * > const * l) {
  return new QList< QTreeWidgetItem * >(*l);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_QList1(QList< QAction * > const * l) {
  return new QList< QAction * >(*l);
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_QList1(QList< QWidget * > const * l) {
  return new QList< QWidget * >(*l);
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_QList1(QList< QGraphicsWidget * > const * l) {
  return new QList< QGraphicsWidget * >(*l);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_QList1(QList< QAbstractButton * > const * l) {
  return new QList< QAbstractButton * >(*l);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_QList1(QList< QGraphicsItem * > const * l) {
  return new QList< QGraphicsItem * >(*l);
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_QList1(QList< QGraphicsTransform * > const * l) {
  return new QList< QGraphicsTransform * >(*l);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_QList1(QList< QPair< double, QPointF > > const * l) {
  return new QList< QPair< double, QPointF > >(*l);
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_QList1(QList< QPair< double, double > > const * l) {
  return new QList< QPair< double, double > >(*l);
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_QList1(QList< QGraphicsView * > const * l) {
  return new QList< QGraphicsView * >(*l);
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_QList1(QList< QRectF > const * l) {
  return new QList< QRectF >(*l);
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_QList1(QList< QListWidgetItem * > const * l) {
  return new QList< QListWidgetItem * >(*l);
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_QList1(QList< QDockWidget * > const * l) {
  return new QList< QDockWidget * >(*l);
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_QList1(QList< QMdiSubWindow * > const * l) {
  return new QList< QMdiSubWindow * >(*l);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_QList1(QList< QTextEdit::ExtraSelection > const * l) {
  return new QList< QTextEdit::ExtraSelection >(*l);
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_QList1(QList< QScroller * > const * l) {
  return new QList< QScroller * >(*l);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_QList1(QList< QTableWidgetSelectionRange > const * l) {
  return new QList< QTableWidgetSelectionRange >(*l);
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_QList1(QList< QTableWidgetItem * > const * l) {
  return new QList< QTableWidgetItem * >(*l);
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_QList1(QList< QUndoStack * > const * l) {
  return new QList< QUndoStack * >(*l);
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_QList1(QList< QWizard::WizardButton > const * l) {
  return new QList< QWizard::WizardButton >(*l);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_dQList(QList< QGesture * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_dQList(QList< QTreeWidgetItem * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_dQList(QList< QAction * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_dQList(QList< QWidget * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_dQList(QList< QGraphicsWidget * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_dQList(QList< QAbstractButton * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_dQList(QList< QGraphicsItem * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_dQList(QList< QGraphicsTransform * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_dQList(QList< QPair< double, QPointF > > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_dQList(QList< QPair< double, double > > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_dQList(QList< QGraphicsView * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_dQList(QList< QRectF > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_dQList(QList< QListWidgetItem * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_dQList(QList< QDockWidget * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_dQList(QList< QMdiSubWindow * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_dQList(QList< QTextEdit::ExtraSelection > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_dQList(QList< QScroller * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_dQList(QList< QTableWidgetSelectionRange > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_dQList(QList< QTableWidgetItem * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_dQList(QList< QUndoStack * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_dQList(QList< QWizard::WizardButton > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator_(QList< QGesture * > * this_ptr, QList< QGesture * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator_(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_operator_(QList< QAction * > * this_ptr, QList< QAction * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator_(QList< QWidget * > * this_ptr, QList< QWidget * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator_(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator_(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator_(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator_(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator_(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_operator_(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator_(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_operator_(QList< QRectF > * this_ptr, QList< QRectF > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator_(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator_(QList< QDockWidget * > * this_ptr, QList< QDockWidget * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator_(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator_(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator_(QList< QScroller * > * this_ptr, QList< QScroller * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator_(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator_(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator_(QList< QUndoStack * > * this_ptr, QList< QUndoStack * > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator_(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton > const * l) {
  return &this_ptr->operator=(*l);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_swap(QList< QGesture * > * this_ptr, QList< QGesture * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_swap(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_swap(QList< QAction * > * this_ptr, QList< QAction * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_swap(QList< QWidget * > * this_ptr, QList< QWidget * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_swap(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_swap(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_swap(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_swap(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_swap(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_swap(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_swap(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_swap(QList< QRectF > * this_ptr, QList< QRectF > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_swap(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_swap(QList< QDockWidget * > * this_ptr, QList< QDockWidget * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_swap(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_swap(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_swap(QList< QScroller * > * this_ptr, QList< QScroller * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_swap(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_swap(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_swap(QList< QUndoStack * > * this_ptr, QList< QUndoStack * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_swap(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_operator__(QList< QGesture * > const * this_ptr, QList< QGesture * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator__(QList< QTreeWidgetItem * > const * this_ptr, QList< QTreeWidgetItem * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_operator__(QList< QAction * > const * this_ptr, QList< QAction * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_operator__(QList< QWidget * > const * this_ptr, QList< QWidget * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator__(QList< QGraphicsWidget * > const * this_ptr, QList< QGraphicsWidget * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator__(QList< QAbstractButton * > const * this_ptr, QList< QAbstractButton * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator__(QList< QGraphicsItem * > const * this_ptr, QList< QGraphicsItem * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator__(QList< QGraphicsTransform * > const * this_ptr, QList< QGraphicsTransform * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator__(QList< QPair< double, QPointF > > const * this_ptr, QList< QPair< double, QPointF > > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_operator__(QList< QPair< double, double > > const * this_ptr, QList< QPair< double, double > > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator__(QList< QGraphicsView * > const * this_ptr, QList< QGraphicsView * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_operator__(QList< QRectF > const * this_ptr, QList< QRectF > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator__(QList< QListWidgetItem * > const * this_ptr, QList< QListWidgetItem * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator__(QList< QDockWidget * > const * this_ptr, QList< QDockWidget * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator__(QList< QMdiSubWindow * > const * this_ptr, QList< QMdiSubWindow * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_operator__(QList< QScroller * > const * this_ptr, QList< QScroller * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator__(QList< QTableWidgetItem * > const * this_ptr, QList< QTableWidgetItem * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator__(QList< QUndoStack * > const * this_ptr, QList< QUndoStack * > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator__(QList< QWizard::WizardButton > const * this_ptr, QList< QWizard::WizardButton > const * l) {
  return this_ptr->operator==(*l);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_size(QList< QGesture * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_size(QList< QTreeWidgetItem * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_size(QList< QAction * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_size(QList< QWidget * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_size(QList< QGraphicsWidget * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_size(QList< QAbstractButton * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_size(QList< QGraphicsItem * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_size(QList< QGraphicsTransform * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_size(QList< QPair< double, QPointF > > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_size(QList< QPair< double, double > > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_size(QList< QGraphicsView * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_size(QList< QRectF > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_size(QList< QListWidgetItem * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_size(QList< QDockWidget * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_size(QList< QMdiSubWindow * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_size(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_size(QList< QScroller * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_size(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_size(QList< QTableWidgetItem * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_size(QList< QUndoStack * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_size(QList< QWizard::WizardButton > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_detach(QList< QGesture * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_detach(QList< QTreeWidgetItem * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_detach(QList< QAction * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_detach(QList< QWidget * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_detach(QList< QGraphicsWidget * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_detach(QList< QAbstractButton * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_detach(QList< QGraphicsItem * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_detach(QList< QGraphicsTransform * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_detach(QList< QPair< double, QPointF > > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_detach(QList< QPair< double, double > > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_detach(QList< QGraphicsView * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_detach(QList< QRectF > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_detach(QList< QListWidgetItem * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_detach(QList< QDockWidget * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_detach(QList< QMdiSubWindow * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_detach(QList< QTextEdit::ExtraSelection > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_detach(QList< QScroller * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_detach(QList< QTableWidgetSelectionRange > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_detach(QList< QTableWidgetItem * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_detach(QList< QUndoStack * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_detach(QList< QWizard::WizardButton > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_detachShared(QList< QGesture * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_detachShared(QList< QTreeWidgetItem * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_detachShared(QList< QAction * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_detachShared(QList< QWidget * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_detachShared(QList< QGraphicsWidget * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_detachShared(QList< QAbstractButton * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_detachShared(QList< QGraphicsItem * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_detachShared(QList< QGraphicsTransform * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_detachShared(QList< QPair< double, QPointF > > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_detachShared(QList< QPair< double, double > > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_detachShared(QList< QGraphicsView * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_detachShared(QList< QRectF > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_detachShared(QList< QListWidgetItem * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_detachShared(QList< QDockWidget * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_detachShared(QList< QMdiSubWindow * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_detachShared(QList< QTextEdit::ExtraSelection > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_detachShared(QList< QScroller * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_detachShared(QList< QTableWidgetSelectionRange > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_detachShared(QList< QTableWidgetItem * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_detachShared(QList< QUndoStack * > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_detachShared(QList< QWizard::WizardButton > * this_ptr) {
  this_ptr->detachShared();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_isDetached(QList< QGesture * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_isDetached(QList< QTreeWidgetItem * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_isDetached(QList< QAction * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_isDetached(QList< QWidget * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_isDetached(QList< QGraphicsWidget * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_isDetached(QList< QAbstractButton * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_isDetached(QList< QGraphicsItem * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_isDetached(QList< QGraphicsTransform * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_isDetached(QList< QPair< double, QPointF > > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_isDetached(QList< QPair< double, double > > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_isDetached(QList< QGraphicsView * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_isDetached(QList< QRectF > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_isDetached(QList< QListWidgetItem * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_isDetached(QList< QDockWidget * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_isDetached(QList< QMdiSubWindow * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_isDetached(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_isDetached(QList< QScroller * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_isDetached(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_isDetached(QList< QTableWidgetItem * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_isDetached(QList< QUndoStack * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_isDetached(QList< QWizard::WizardButton > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_setSharable(QList< QGesture * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_setSharable(QList< QTreeWidgetItem * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_setSharable(QList< QAction * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_setSharable(QList< QWidget * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_setSharable(QList< QGraphicsWidget * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_setSharable(QList< QAbstractButton * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_setSharable(QList< QGraphicsItem * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_setSharable(QList< QGraphicsTransform * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_setSharable(QList< QPair< double, QPointF > > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_setSharable(QList< QPair< double, double > > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_setSharable(QList< QGraphicsView * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_setSharable(QList< QRectF > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_setSharable(QList< QListWidgetItem * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_setSharable(QList< QDockWidget * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_setSharable(QList< QMdiSubWindow * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_setSharable(QList< QTextEdit::ExtraSelection > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_setSharable(QList< QScroller * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_setSharable(QList< QTableWidgetSelectionRange > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_setSharable(QList< QTableWidgetItem * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_setSharable(QList< QUndoStack * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_setSharable(QList< QWizard::WizardButton > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_isSharedWith(QList< QGesture * > const * this_ptr, QList< QGesture * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_isSharedWith(QList< QTreeWidgetItem * > const * this_ptr, QList< QTreeWidgetItem * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_isSharedWith(QList< QAction * > const * this_ptr, QList< QAction * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_isSharedWith(QList< QWidget * > const * this_ptr, QList< QWidget * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_isSharedWith(QList< QGraphicsWidget * > const * this_ptr, QList< QGraphicsWidget * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_isSharedWith(QList< QAbstractButton * > const * this_ptr, QList< QAbstractButton * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_isSharedWith(QList< QGraphicsItem * > const * this_ptr, QList< QGraphicsItem * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_isSharedWith(QList< QGraphicsTransform * > const * this_ptr, QList< QGraphicsTransform * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_isSharedWith(QList< QPair< double, QPointF > > const * this_ptr, QList< QPair< double, QPointF > > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_isSharedWith(QList< QPair< double, double > > const * this_ptr, QList< QPair< double, double > > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_isSharedWith(QList< QGraphicsView * > const * this_ptr, QList< QGraphicsView * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_isSharedWith(QList< QRectF > const * this_ptr, QList< QRectF > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_isSharedWith(QList< QListWidgetItem * > const * this_ptr, QList< QListWidgetItem * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_isSharedWith(QList< QDockWidget * > const * this_ptr, QList< QDockWidget * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_isSharedWith(QList< QMdiSubWindow * > const * this_ptr, QList< QMdiSubWindow * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_isSharedWith(QList< QTextEdit::ExtraSelection > const * this_ptr, QList< QTextEdit::ExtraSelection > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_isSharedWith(QList< QScroller * > const * this_ptr, QList< QScroller * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_isSharedWith(QList< QTableWidgetSelectionRange > const * this_ptr, QList< QTableWidgetSelectionRange > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_isSharedWith(QList< QTableWidgetItem * > const * this_ptr, QList< QTableWidgetItem * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_isSharedWith(QList< QUndoStack * > const * this_ptr, QList< QUndoStack * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_isSharedWith(QList< QWizard::WizardButton > const * this_ptr, QList< QWizard::WizardButton > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_isEmpty(QList< QGesture * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_isEmpty(QList< QTreeWidgetItem * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_isEmpty(QList< QAction * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_isEmpty(QList< QWidget * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_isEmpty(QList< QGraphicsWidget * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_isEmpty(QList< QAbstractButton * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_isEmpty(QList< QGraphicsItem * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_isEmpty(QList< QGraphicsTransform * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_isEmpty(QList< QPair< double, QPointF > > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_isEmpty(QList< QPair< double, double > > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_isEmpty(QList< QGraphicsView * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_isEmpty(QList< QRectF > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_isEmpty(QList< QListWidgetItem * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_isEmpty(QList< QDockWidget * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_isEmpty(QList< QMdiSubWindow * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_isEmpty(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_isEmpty(QList< QScroller * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_isEmpty(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_isEmpty(QList< QTableWidgetItem * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_isEmpty(QList< QUndoStack * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_isEmpty(QList< QWizard::WizardButton > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_clear(QList< QGesture * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_clear(QList< QTreeWidgetItem * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_clear(QList< QAction * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_clear(QList< QWidget * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_clear(QList< QGraphicsWidget * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_clear(QList< QAbstractButton * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_clear(QList< QGraphicsItem * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_clear(QList< QGraphicsTransform * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_clear(QList< QPair< double, QPointF > > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_clear(QList< QPair< double, double > > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_clear(QList< QGraphicsView * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_clear(QList< QRectF > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_clear(QList< QListWidgetItem * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_clear(QList< QDockWidget * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_clear(QList< QMdiSubWindow * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_clear(QList< QTextEdit::ExtraSelection > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_clear(QList< QScroller * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_clear(QList< QTableWidgetSelectionRange > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_clear(QList< QTableWidgetItem * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_clear(QList< QUndoStack * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_clear(QList< QWizard::WizardButton > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_at(QList< QGesture * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_at(QList< QTreeWidgetItem * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_at(QList< QAction * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_at(QList< QWidget * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_at(QList< QGraphicsWidget * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_at(QList< QAbstractButton * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_at(QList< QGraphicsItem * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_at(QList< QGraphicsTransform * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_at(QList< QPair< double, QPointF > > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_at(QList< QPair< double, double > > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_at(QList< QGraphicsView * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_at(QList< QRectF > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_at(QList< QListWidgetItem * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_at(QList< QDockWidget * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_at(QList< QMdiSubWindow * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_at(QList< QTextEdit::ExtraSelection > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_at(QList< QScroller * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_at(QList< QTableWidgetSelectionRange > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_at(QList< QTableWidgetItem * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_at(QList< QUndoStack * > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_at(QList< QWizard::WizardButton > const * this_ptr, int i) {
  return &this_ptr->at(i);
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator__2(QList< QGesture * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator__2(QList< QTreeWidgetItem * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_operator__2(QList< QAction * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator__2(QList< QWidget * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator__2(QList< QGraphicsWidget * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator__2(QList< QAbstractButton * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator__2(QList< QGraphicsItem * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator__2(QList< QGraphicsTransform * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator__2(QList< QPair< double, QPointF > > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_operator__2(QList< QPair< double, double > > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator__2(QList< QGraphicsView * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_operator__2(QList< QRectF > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator__2(QList< QListWidgetItem * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator__2(QList< QDockWidget * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator__2(QList< QMdiSubWindow * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator__2(QList< QTextEdit::ExtraSelection > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator__2(QList< QScroller * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator__2(QList< QTableWidgetSelectionRange > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator__2(QList< QTableWidgetItem * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator__2(QList< QUndoStack * > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator__2(QList< QWizard::WizardButton > const * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator__3(QList< QGesture * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator__3(QList< QTreeWidgetItem * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_operator__3(QList< QAction * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator__3(QList< QWidget * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator__3(QList< QGraphicsWidget * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator__3(QList< QAbstractButton * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator__3(QList< QGraphicsItem * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator__3(QList< QGraphicsTransform * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator__3(QList< QPair< double, QPointF > > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_operator__3(QList< QPair< double, double > > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator__3(QList< QGraphicsView * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_operator__3(QList< QRectF > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator__3(QList< QListWidgetItem * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator__3(QList< QDockWidget * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator__3(QList< QMdiSubWindow * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator__3(QList< QTextEdit::ExtraSelection > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator__3(QList< QScroller * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator__3(QList< QTableWidgetSelectionRange > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator__3(QList< QTableWidgetItem * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator__3(QList< QUndoStack * > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator__3(QList< QWizard::WizardButton > * this_ptr, int i) {
  return &this_ptr->operator[](i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_reserve(QList< QGesture * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_reserve(QList< QTreeWidgetItem * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_reserve(QList< QAction * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_reserve(QList< QWidget * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_reserve(QList< QGraphicsWidget * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_reserve(QList< QAbstractButton * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_reserve(QList< QGraphicsItem * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_reserve(QList< QGraphicsTransform * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_reserve(QList< QPair< double, QPointF > > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_reserve(QList< QPair< double, double > > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_reserve(QList< QGraphicsView * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_reserve(QList< QRectF > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_reserve(QList< QListWidgetItem * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_reserve(QList< QDockWidget * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_reserve(QList< QMdiSubWindow * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_reserve(QList< QTextEdit::ExtraSelection > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_reserve(QList< QScroller * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_reserve(QList< QTableWidgetSelectionRange > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_reserve(QList< QTableWidgetItem * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_reserve(QList< QUndoStack * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_reserve(QList< QWizard::WizardButton > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_append(QList< QGesture * > * this_ptr, QGesture * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_append(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_append(QList< QAction * > * this_ptr, QAction * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_append(QList< QWidget * > * this_ptr, QWidget * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_append(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_append(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_append(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_append(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_append(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_append(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_append(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_append(QList< QRectF > * this_ptr, QRectF const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_append(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_append(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_append(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_append(QList< QTextEdit::ExtraSelection > * this_ptr, QTextEdit::ExtraSelection const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_append(QList< QScroller * > * this_ptr, QScroller * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_append(QList< QTableWidgetSelectionRange > * this_ptr, QTableWidgetSelectionRange const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_append(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_append(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_append(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_append1(QList< QGesture * > * this_ptr, QList< QGesture * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_append1(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_append1(QList< QAction * > * this_ptr, QList< QAction * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_append1(QList< QWidget * > * this_ptr, QList< QWidget * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_append1(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_append1(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_append1(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_append1(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_append1(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_append1(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_append1(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_append1(QList< QRectF > * this_ptr, QList< QRectF > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_append1(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_append1(QList< QDockWidget * > * this_ptr, QList< QDockWidget * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_append1(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_append1(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_append1(QList< QScroller * > * this_ptr, QList< QScroller * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_append1(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_append1(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_append1(QList< QUndoStack * > * this_ptr, QList< QUndoStack * > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_append1(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton > const * t) {
  this_ptr->append(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_prepend(QList< QGesture * > * this_ptr, QGesture * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_prepend(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_prepend(QList< QAction * > * this_ptr, QAction * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_prepend(QList< QWidget * > * this_ptr, QWidget * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_prepend(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_prepend(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_prepend(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_prepend(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_prepend(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_prepend(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_prepend(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_prepend(QList< QRectF > * this_ptr, QRectF const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_prepend(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_prepend(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_prepend(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_prepend(QList< QTextEdit::ExtraSelection > * this_ptr, QTextEdit::ExtraSelection const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_prepend(QList< QScroller * > * this_ptr, QScroller * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_prepend(QList< QTableWidgetSelectionRange > * this_ptr, QTableWidgetSelectionRange const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_prepend(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_prepend(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_prepend(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  this_ptr->prepend(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_insert(QList< QGesture * > * this_ptr, int i, QGesture * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_insert(QList< QTreeWidgetItem * > * this_ptr, int i, QTreeWidgetItem * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_insert(QList< QAction * > * this_ptr, int i, QAction * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_insert(QList< QWidget * > * this_ptr, int i, QWidget * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_insert(QList< QGraphicsWidget * > * this_ptr, int i, QGraphicsWidget * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_insert(QList< QAbstractButton * > * this_ptr, int i, QAbstractButton * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_insert(QList< QGraphicsItem * > * this_ptr, int i, QGraphicsItem * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_insert(QList< QGraphicsTransform * > * this_ptr, int i, QGraphicsTransform * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_insert(QList< QPair< double, QPointF > > * this_ptr, int i, QPair< double, QPointF > const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_insert(QList< QPair< double, double > > * this_ptr, int i, QPair< double, double > const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_insert(QList< QGraphicsView * > * this_ptr, int i, QGraphicsView * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_insert(QList< QRectF > * this_ptr, int i, QRectF const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_insert(QList< QListWidgetItem * > * this_ptr, int i, QListWidgetItem * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_insert(QList< QDockWidget * > * this_ptr, int i, QDockWidget * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_insert(QList< QMdiSubWindow * > * this_ptr, int i, QMdiSubWindow * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_insert(QList< QTextEdit::ExtraSelection > * this_ptr, int i, QTextEdit::ExtraSelection const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_insert(QList< QScroller * > * this_ptr, int i, QScroller * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_insert(QList< QTableWidgetSelectionRange > * this_ptr, int i, QTableWidgetSelectionRange const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_insert(QList< QTableWidgetItem * > * this_ptr, int i, QTableWidgetItem * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_insert(QList< QUndoStack * > * this_ptr, int i, QUndoStack * const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_insert(QList< QWizard::WizardButton > * this_ptr, int i, QWizard::WizardButton const * t) {
  this_ptr->insert(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_replace(QList< QGesture * > * this_ptr, int i, QGesture * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_replace(QList< QTreeWidgetItem * > * this_ptr, int i, QTreeWidgetItem * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_replace(QList< QAction * > * this_ptr, int i, QAction * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_replace(QList< QWidget * > * this_ptr, int i, QWidget * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_replace(QList< QGraphicsWidget * > * this_ptr, int i, QGraphicsWidget * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_replace(QList< QAbstractButton * > * this_ptr, int i, QAbstractButton * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_replace(QList< QGraphicsItem * > * this_ptr, int i, QGraphicsItem * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_replace(QList< QGraphicsTransform * > * this_ptr, int i, QGraphicsTransform * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_replace(QList< QPair< double, QPointF > > * this_ptr, int i, QPair< double, QPointF > const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_replace(QList< QPair< double, double > > * this_ptr, int i, QPair< double, double > const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_replace(QList< QGraphicsView * > * this_ptr, int i, QGraphicsView * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_replace(QList< QRectF > * this_ptr, int i, QRectF const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_replace(QList< QListWidgetItem * > * this_ptr, int i, QListWidgetItem * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_replace(QList< QDockWidget * > * this_ptr, int i, QDockWidget * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_replace(QList< QMdiSubWindow * > * this_ptr, int i, QMdiSubWindow * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_replace(QList< QTextEdit::ExtraSelection > * this_ptr, int i, QTextEdit::ExtraSelection const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_replace(QList< QScroller * > * this_ptr, int i, QScroller * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_replace(QList< QTableWidgetSelectionRange > * this_ptr, int i, QTableWidgetSelectionRange const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_replace(QList< QTableWidgetItem * > * this_ptr, int i, QTableWidgetItem * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_replace(QList< QUndoStack * > * this_ptr, int i, QUndoStack * const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_replace(QList< QWizard::WizardButton > * this_ptr, int i, QWizard::WizardButton const * t) {
  this_ptr->replace(i, *t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_removeAt(QList< QGesture * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_removeAt(QList< QTreeWidgetItem * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_removeAt(QList< QAction * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_removeAt(QList< QWidget * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_removeAt(QList< QGraphicsWidget * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_removeAt(QList< QAbstractButton * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_removeAt(QList< QGraphicsItem * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_removeAt(QList< QGraphicsTransform * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_removeAt(QList< QPair< double, QPointF > > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_removeAt(QList< QPair< double, double > > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_removeAt(QList< QGraphicsView * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_removeAt(QList< QRectF > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_removeAt(QList< QListWidgetItem * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_removeAt(QList< QDockWidget * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_removeAt(QList< QMdiSubWindow * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_removeAt(QList< QTextEdit::ExtraSelection > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_removeAt(QList< QScroller * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_removeAt(QList< QTableWidgetSelectionRange > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_removeAt(QList< QTableWidgetItem * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_removeAt(QList< QUndoStack * > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_removeAt(QList< QWizard::WizardButton > * this_ptr, int i) {
  this_ptr->removeAt(i);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_removeAll(QList< QGesture * > * this_ptr, QGesture * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_removeAll(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_removeAll(QList< QAction * > * this_ptr, QAction * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_removeAll(QList< QWidget * > * this_ptr, QWidget * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_removeAll(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_removeAll(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_removeAll(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_removeAll(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_removeAll(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_removeAll(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_removeAll(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_removeAll(QList< QRectF > * this_ptr, QRectF const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_removeAll(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_removeAll(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_removeAll(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_removeAll(QList< QScroller * > * this_ptr, QScroller * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_removeAll(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_removeAll(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_removeAll(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->removeAll(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_removeOne(QList< QGesture * > * this_ptr, QGesture * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_removeOne(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_removeOne(QList< QAction * > * this_ptr, QAction * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_removeOne(QList< QWidget * > * this_ptr, QWidget * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_removeOne(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_removeOne(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_removeOne(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_removeOne(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_removeOne(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_removeOne(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_removeOne(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_removeOne(QList< QRectF > * this_ptr, QRectF const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_removeOne(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_removeOne(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_removeOne(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_removeOne(QList< QScroller * > * this_ptr, QScroller * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_removeOne(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_removeOne(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_removeOne(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->removeOne(*t);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QList_QGesture_ptr_takeAt(QList< QGesture * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_takeAt(QList< QTreeWidgetItem * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QList_QAction_ptr_takeAt(QList< QAction * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QList_QWidget_ptr_takeAt(QList< QWidget * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_takeAt(QList< QGraphicsWidget * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_takeAt(QList< QAbstractButton * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_takeAt(QList< QGraphicsItem * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_takeAt(QList< QGraphicsTransform * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_takeAt(QList< QPair< double, QPointF > > * this_ptr, int i) {
  return new QPair< double, QPointF >(this_ptr->takeAt(i));
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_takeAt(QList< QPair< double, double > > * this_ptr, int i) {
  return new QPair< double, double >(this_ptr->takeAt(i));
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_takeAt(QList< QGraphicsView * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_takeAt(QList< QRectF > * this_ptr, int i) {
  return new QRectF(this_ptr->takeAt(i));
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_takeAt(QList< QListWidgetItem * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_takeAt(QList< QDockWidget * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_takeAt(QList< QMdiSubWindow * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_takeAt(QList< QTextEdit::ExtraSelection > * this_ptr, int i) {
  return new QTextEdit::ExtraSelection(this_ptr->takeAt(i));
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_QList_QScroller_ptr_takeAt(QList< QScroller * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_takeAt(QList< QTableWidgetSelectionRange > * this_ptr, int i) {
  return new QTableWidgetSelectionRange(this_ptr->takeAt(i));
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_takeAt(QList< QTableWidgetItem * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_takeAt(QList< QUndoStack * > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QWizard::WizardButton ctr_qt_widgets_ffi_QList_QWizard_WizardButton_takeAt(QList< QWizard::WizardButton > * this_ptr, int i) {
  return this_ptr->takeAt(i);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QList_QGesture_ptr_takeFirst(QList< QGesture * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_takeFirst(QList< QTreeWidgetItem * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QList_QAction_ptr_takeFirst(QList< QAction * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QList_QWidget_ptr_takeFirst(QList< QWidget * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_takeFirst(QList< QGraphicsWidget * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_takeFirst(QList< QAbstractButton * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_takeFirst(QList< QGraphicsItem * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_takeFirst(QList< QGraphicsTransform * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_takeFirst(QList< QPair< double, QPointF > > * this_ptr) {
  return new QPair< double, QPointF >(this_ptr->takeFirst());
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_takeFirst(QList< QPair< double, double > > * this_ptr) {
  return new QPair< double, double >(this_ptr->takeFirst());
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_takeFirst(QList< QGraphicsView * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_takeFirst(QList< QRectF > * this_ptr) {
  return new QRectF(this_ptr->takeFirst());
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_takeFirst(QList< QListWidgetItem * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_takeFirst(QList< QDockWidget * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_takeFirst(QList< QMdiSubWindow * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_takeFirst(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return new QTextEdit::ExtraSelection(this_ptr->takeFirst());
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_QList_QScroller_ptr_takeFirst(QList< QScroller * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_takeFirst(QList< QTableWidgetSelectionRange > * this_ptr) {
  return new QTableWidgetSelectionRange(this_ptr->takeFirst());
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_takeFirst(QList< QTableWidgetItem * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_takeFirst(QList< QUndoStack * > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QWizard::WizardButton ctr_qt_widgets_ffi_QList_QWizard_WizardButton_takeFirst(QList< QWizard::WizardButton > * this_ptr) {
  return this_ptr->takeFirst();
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QList_QGesture_ptr_takeLast(QList< QGesture * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_takeLast(QList< QTreeWidgetItem * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QList_QAction_ptr_takeLast(QList< QAction * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QList_QWidget_ptr_takeLast(QList< QWidget * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_takeLast(QList< QGraphicsWidget * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_takeLast(QList< QAbstractButton * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_takeLast(QList< QGraphicsItem * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_takeLast(QList< QGraphicsTransform * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_takeLast(QList< QPair< double, QPointF > > * this_ptr) {
  return new QPair< double, QPointF >(this_ptr->takeLast());
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_takeLast(QList< QPair< double, double > > * this_ptr) {
  return new QPair< double, double >(this_ptr->takeLast());
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_takeLast(QList< QGraphicsView * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_takeLast(QList< QRectF > * this_ptr) {
  return new QRectF(this_ptr->takeLast());
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_takeLast(QList< QListWidgetItem * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_takeLast(QList< QDockWidget * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_takeLast(QList< QMdiSubWindow * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_takeLast(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return new QTextEdit::ExtraSelection(this_ptr->takeLast());
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_QList_QScroller_ptr_takeLast(QList< QScroller * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_takeLast(QList< QTableWidgetSelectionRange > * this_ptr) {
  return new QTableWidgetSelectionRange(this_ptr->takeLast());
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_takeLast(QList< QTableWidgetItem * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_takeLast(QList< QUndoStack * > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT QWizard::WizardButton ctr_qt_widgets_ffi_QList_QWizard_WizardButton_takeLast(QList< QWizard::WizardButton > * this_ptr) {
  return this_ptr->takeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_move(QList< QGesture * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_move(QList< QTreeWidgetItem * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_move(QList< QAction * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_move(QList< QWidget * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_move(QList< QGraphicsWidget * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_move(QList< QAbstractButton * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_move(QList< QGraphicsItem * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_move(QList< QGraphicsTransform * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_move(QList< QPair< double, QPointF > > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_move(QList< QPair< double, double > > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_move(QList< QGraphicsView * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_move(QList< QRectF > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_move(QList< QListWidgetItem * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_move(QList< QDockWidget * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_move(QList< QMdiSubWindow * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_move(QList< QTextEdit::ExtraSelection > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_move(QList< QScroller * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_move(QList< QTableWidgetSelectionRange > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_move(QList< QTableWidgetItem * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_move(QList< QUndoStack * > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_move(QList< QWizard::WizardButton > * this_ptr, int from, int to) {
  this_ptr->move(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_swapItemsAt(QList< QGesture * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_swapItemsAt(QList< QTreeWidgetItem * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_swapItemsAt(QList< QAction * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_swapItemsAt(QList< QWidget * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_swapItemsAt(QList< QGraphicsWidget * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_swapItemsAt(QList< QAbstractButton * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_swapItemsAt(QList< QGraphicsItem * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_swapItemsAt(QList< QGraphicsTransform * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_swapItemsAt(QList< QPair< double, QPointF > > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_swapItemsAt(QList< QPair< double, double > > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_swapItemsAt(QList< QGraphicsView * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_swapItemsAt(QList< QRectF > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_swapItemsAt(QList< QListWidgetItem * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_swapItemsAt(QList< QDockWidget * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_swapItemsAt(QList< QMdiSubWindow * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_swapItemsAt(QList< QTextEdit::ExtraSelection > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_swapItemsAt(QList< QScroller * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_swapItemsAt(QList< QTableWidgetSelectionRange > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_swapItemsAt(QList< QTableWidgetItem * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_swapItemsAt(QList< QUndoStack * > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_swapItemsAt(QList< QWizard::WizardButton > * this_ptr, int i, int j) {
  this_ptr->swapItemsAt(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_swap1(QList< QGesture * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_swap1(QList< QTreeWidgetItem * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_swap1(QList< QAction * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_swap1(QList< QWidget * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_swap1(QList< QGraphicsWidget * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_swap1(QList< QAbstractButton * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_swap1(QList< QGraphicsItem * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_swap1(QList< QGraphicsTransform * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_swap1(QList< QPair< double, QPointF > > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_swap1(QList< QPair< double, double > > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_swap1(QList< QGraphicsView * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_swap1(QList< QRectF > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_swap1(QList< QListWidgetItem * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_swap1(QList< QDockWidget * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_swap1(QList< QMdiSubWindow * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_swap1(QList< QTextEdit::ExtraSelection > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_swap1(QList< QScroller * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_swap1(QList< QTableWidgetSelectionRange > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_swap1(QList< QTableWidgetItem * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_swap1(QList< QUndoStack * > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_swap1(QList< QWizard::WizardButton > * this_ptr, int i, int j) {
  this_ptr->swap(i, j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_indexOf(QList< QGesture * > const * this_ptr, QGesture * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_indexOf(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_indexOf(QList< QAction * > const * this_ptr, QAction * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_indexOf(QList< QWidget * > const * this_ptr, QWidget * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_indexOf(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_indexOf(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_indexOf(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_indexOf(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_indexOf(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_indexOf(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_indexOf(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_indexOf(QList< QRectF > const * this_ptr, QRectF const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_indexOf(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_indexOf(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_indexOf(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_indexOf(QList< QScroller * > const * this_ptr, QScroller * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_indexOf(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_indexOf(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_indexOf(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t, int from) {
  return this_ptr->indexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_lastIndexOf(QList< QGesture * > const * this_ptr, QGesture * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_lastIndexOf(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_lastIndexOf(QList< QAction * > const * this_ptr, QAction * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_lastIndexOf(QList< QWidget * > const * this_ptr, QWidget * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_lastIndexOf(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_lastIndexOf(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_lastIndexOf(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_lastIndexOf(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_lastIndexOf(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_lastIndexOf(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_lastIndexOf(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_lastIndexOf(QList< QRectF > const * this_ptr, QRectF const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_lastIndexOf(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_lastIndexOf(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_lastIndexOf(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_lastIndexOf(QList< QScroller * > const * this_ptr, QScroller * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_lastIndexOf(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_lastIndexOf(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_lastIndexOf(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t, int from) {
  return this_ptr->lastIndexOf(*t, from);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_contains(QList< QGesture * > const * this_ptr, QGesture * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_contains(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_contains(QList< QAction * > const * this_ptr, QAction * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_contains(QList< QWidget * > const * this_ptr, QWidget * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_contains(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_contains(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_contains(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_contains(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_contains(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_contains(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_contains(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_contains(QList< QRectF > const * this_ptr, QRectF const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_contains(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_contains(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_contains(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_contains(QList< QScroller * > const * this_ptr, QScroller * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_contains(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_contains(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_contains(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->contains(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_count(QList< QGesture * > const * this_ptr, QGesture * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_count(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_count(QList< QAction * > const * this_ptr, QAction * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_count(QList< QWidget * > const * this_ptr, QWidget * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_count(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_count(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_count(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_count(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_count(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_count(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_count(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_count(QList< QRectF > const * this_ptr, QRectF const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_count(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_count(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_count(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_count(QList< QScroller * > const * this_ptr, QScroller * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_count(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_count(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_count(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->count(*t);
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_iterator() {
  return new QList< QGesture * >::iterator();
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_iterator() {
  return new QList< QTreeWidgetItem * >::iterator();
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_iterator() {
  return new QList< QAction * >::iterator();
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_iterator() {
  return new QList< QWidget * >::iterator();
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_iterator() {
  return new QList< QGraphicsWidget * >::iterator();
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_iterator() {
  return new QList< QAbstractButton * >::iterator();
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_iterator() {
  return new QList< QGraphicsItem * >::iterator();
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_iterator() {
  return new QList< QGraphicsTransform * >::iterator();
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_iterator() {
  return new QList< QPair< double, QPointF > >::iterator();
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_iterator() {
  return new QList< QPair< double, double > >::iterator();
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_iterator() {
  return new QList< QGraphicsView * >::iterator();
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_iterator() {
  return new QList< QRectF >::iterator();
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_iterator() {
  return new QList< QListWidgetItem * >::iterator();
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_iterator() {
  return new QList< QDockWidget * >::iterator();
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_iterator() {
  return new QList< QMdiSubWindow * >::iterator();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_iterator() {
  return new QList< QTextEdit::ExtraSelection >::iterator();
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_iterator() {
  return new QList< QScroller * >::iterator();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_iterator() {
  return new QList< QTableWidgetSelectionRange >::iterator();
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_iterator() {
  return new QList< QTableWidgetItem * >::iterator();
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_iterator() {
  return new QList< QUndoStack * >::iterator();
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_iterator() {
  return new QList< QWizard::WizardButton >::iterator();
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_iterator1(QList< QGesture * >::iterator const * o) {
  return new QList< QGesture * >::iterator(*o);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_iterator1(QList< QTreeWidgetItem * >::iterator const * o) {
  return new QList< QTreeWidgetItem * >::iterator(*o);
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_iterator1(QList< QAction * >::iterator const * o) {
  return new QList< QAction * >::iterator(*o);
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_iterator1(QList< QWidget * >::iterator const * o) {
  return new QList< QWidget * >::iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_iterator1(QList< QGraphicsWidget * >::iterator const * o) {
  return new QList< QGraphicsWidget * >::iterator(*o);
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_iterator1(QList< QAbstractButton * >::iterator const * o) {
  return new QList< QAbstractButton * >::iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_iterator1(QList< QGraphicsItem * >::iterator const * o) {
  return new QList< QGraphicsItem * >::iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_iterator1(QList< QGraphicsTransform * >::iterator const * o) {
  return new QList< QGraphicsTransform * >::iterator(*o);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_iterator1(QList< QPair< double, QPointF > >::iterator const * o) {
  return new QList< QPair< double, QPointF > >::iterator(*o);
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_iterator1(QList< QPair< double, double > >::iterator const * o) {
  return new QList< QPair< double, double > >::iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_iterator1(QList< QGraphicsView * >::iterator const * o) {
  return new QList< QGraphicsView * >::iterator(*o);
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_iterator1(QList< QRectF >::iterator const * o) {
  return new QList< QRectF >::iterator(*o);
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_iterator1(QList< QListWidgetItem * >::iterator const * o) {
  return new QList< QListWidgetItem * >::iterator(*o);
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_iterator1(QList< QDockWidget * >::iterator const * o) {
  return new QList< QDockWidget * >::iterator(*o);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_iterator1(QList< QMdiSubWindow * >::iterator const * o) {
  return new QList< QMdiSubWindow * >::iterator(*o);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_iterator1(QList< QTextEdit::ExtraSelection >::iterator const * o) {
  return new QList< QTextEdit::ExtraSelection >::iterator(*o);
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_iterator1(QList< QScroller * >::iterator const * o) {
  return new QList< QScroller * >::iterator(*o);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_iterator1(QList< QTableWidgetSelectionRange >::iterator const * o) {
  return new QList< QTableWidgetSelectionRange >::iterator(*o);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_iterator1(QList< QTableWidgetItem * >::iterator const * o) {
  return new QList< QTableWidgetItem * >::iterator(*o);
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_iterator1(QList< QUndoStack * >::iterator const * o) {
  return new QList< QUndoStack * >::iterator(*o);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_iterator1(QList< QWizard::WizardButton >::iterator const * o) {
  return new QList< QWizard::WizardButton >::iterator(*o);
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_(QList< QGesture * >::iterator * this_ptr, QList< QGesture * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_(QList< QTreeWidgetItem * >::iterator * this_ptr, QList< QTreeWidgetItem * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_(QList< QAction * >::iterator * this_ptr, QList< QAction * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_(QList< QWidget * >::iterator * this_ptr, QList< QWidget * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_(QList< QGraphicsWidget * >::iterator * this_ptr, QList< QGraphicsWidget * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_(QList< QAbstractButton * >::iterator * this_ptr, QList< QAbstractButton * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_(QList< QGraphicsItem * >::iterator * this_ptr, QList< QGraphicsItem * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_(QList< QGraphicsTransform * >::iterator * this_ptr, QList< QGraphicsTransform * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_(QList< QPair< double, QPointF > >::iterator * this_ptr, QList< QPair< double, QPointF > >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_(QList< QPair< double, double > >::iterator * this_ptr, QList< QPair< double, double > >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_(QList< QGraphicsView * >::iterator * this_ptr, QList< QGraphicsView * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_(QList< QRectF >::iterator * this_ptr, QList< QRectF >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_(QList< QListWidgetItem * >::iterator * this_ptr, QList< QListWidgetItem * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_(QList< QDockWidget * >::iterator * this_ptr, QList< QDockWidget * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_(QList< QMdiSubWindow * >::iterator * this_ptr, QList< QMdiSubWindow * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_(QList< QTextEdit::ExtraSelection >::iterator * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_(QList< QScroller * >::iterator * this_ptr, QList< QScroller * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_(QList< QTableWidgetSelectionRange >::iterator * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_(QList< QTableWidgetItem * >::iterator * this_ptr, QList< QTableWidgetItem * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_(QList< QUndoStack * >::iterator * this_ptr, QList< QUndoStack * >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_(QList< QWizard::WizardButton >::iterator * this_ptr, QList< QWizard::WizardButton >::iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_1(QList< QGesture * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_1(QList< QTreeWidgetItem * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_1(QList< QAction * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_1(QList< QWidget * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_1(QList< QGraphicsWidget * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_1(QList< QAbstractButton * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_1(QList< QGraphicsItem * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_1(QList< QGraphicsTransform * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_1(QList< QPair< double, QPointF > >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_1(QList< QPair< double, double > >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_1(QList< QGraphicsView * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_1(QList< QRectF >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_1(QList< QListWidgetItem * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_1(QList< QDockWidget * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_1(QList< QMdiSubWindow * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_1(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_1(QList< QScroller * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_1(QList< QTableWidgetSelectionRange >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_1(QList< QTableWidgetItem * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_1(QList< QUndoStack * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_1(QList< QWizard::WizardButton >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__(QList< QGesture * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__(QList< QTreeWidgetItem * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__(QList< QAction * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__(QList< QWidget * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__(QList< QGraphicsWidget * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__(QList< QAbstractButton * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__(QList< QGraphicsItem * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__(QList< QGraphicsTransform * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__(QList< QPair< double, QPointF > >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__(QList< QPair< double, double > >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__(QList< QGraphicsView * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__(QList< QRectF >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__(QList< QListWidgetItem * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__(QList< QDockWidget * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__(QList< QMdiSubWindow * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__(QList< QScroller * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__(QList< QTableWidgetSelectionRange >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__(QList< QTableWidgetItem * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__(QList< QUndoStack * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__(QList< QWizard::WizardButton >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__1(QList< QGesture * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__1(QList< QTreeWidgetItem * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__1(QList< QAction * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__1(QList< QWidget * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__1(QList< QGraphicsWidget * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__1(QList< QAbstractButton * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__1(QList< QGraphicsItem * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__1(QList< QGraphicsTransform * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__1(QList< QPair< double, QPointF > >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__1(QList< QPair< double, double > >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__1(QList< QGraphicsView * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__1(QList< QRectF >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__1(QList< QListWidgetItem * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__1(QList< QDockWidget * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__1(QList< QMdiSubWindow * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__1(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__1(QList< QScroller * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__1(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__1(QList< QTableWidgetItem * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__1(QList< QUndoStack * >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__1(QList< QWizard::WizardButton >::iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__2(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__2(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__2(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__2(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__2(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__2(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__2(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__2(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__2(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__2(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__2(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__2(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__2(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__2(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__2(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__2(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__2(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__2(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__2(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__2(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__2(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_2(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_2(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_2(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_2(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_2(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_2(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_2(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_2(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_2(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_2(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_2(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_2(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_2(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_2(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_2(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_2(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_2(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_2(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_2(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_2(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_2(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__4(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__4(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__4(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__4(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__4(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__4(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__4(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__4(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__4(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__4(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__4(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__4(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__4(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__4(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__4(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__4(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__4(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__4(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__4(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__4(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__4(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_3(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_3(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_3(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_3(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_3(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_3(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_3(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_3(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_3(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_3(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_3(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_3(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_3(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_3(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_3(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_3(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_3(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_3(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_3(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_3(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_3(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__5(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__5(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__5(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__5(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__5(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__5(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__5(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__5(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__5(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__5(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__5(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__5(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__5(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__5(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__5(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__5(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__5(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__5(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__5(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__5(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__5(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__6(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__6(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__6(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__6(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__6(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__6(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__6(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__6(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__6(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__6(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__6(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__6(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__6(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__6(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__6(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__6(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__6(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__6(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__6(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__6(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__6(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_4(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_4(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_4(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_4(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_4(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_4(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_4(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_4(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_4(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_4(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_4(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_4(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_4(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_4(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_4(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_4(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_4(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_4(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_4(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_4(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_4(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__8(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__8(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__8(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__8(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__8(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__8(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__8(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__8(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__8(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__8(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__8(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__8(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__8(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__8(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__8(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__8(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__8(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__8(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__8(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__8(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__8(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_5(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_5(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_5(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_5(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_5(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_5(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_5(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_5(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_5(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_5(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_5(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_5(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_5(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_5(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_5(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_5(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_5(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_5(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_5(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_5(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_5(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__9(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__9(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__9(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__9(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__9(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__9(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__9(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__9(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__9(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__9(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__9(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__9(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__9(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__9(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__9(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__9(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__9(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__9(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__9(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__9(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__9(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__10(QList< QGesture * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__10(QList< QTreeWidgetItem * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__10(QList< QAction * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__10(QList< QWidget * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__10(QList< QGraphicsWidget * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__10(QList< QAbstractButton * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__10(QList< QGraphicsItem * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__10(QList< QGraphicsTransform * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__10(QList< QPair< double, QPointF > >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__10(QList< QPair< double, double > >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__10(QList< QGraphicsView * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__10(QList< QRectF >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__10(QList< QListWidgetItem * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__10(QList< QDockWidget * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__10(QList< QMdiSubWindow * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__10(QList< QTextEdit::ExtraSelection >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__10(QList< QScroller * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__10(QList< QTableWidgetSelectionRange >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__10(QList< QTableWidgetItem * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__10(QList< QUndoStack * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__10(QList< QWizard::WizardButton >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__11(QList< QGesture * >::iterator * this_ptr, int arg1) {
  return new QList< QGesture * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__11(QList< QTreeWidgetItem * >::iterator * this_ptr, int arg1) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__11(QList< QAction * >::iterator * this_ptr, int arg1) {
  return new QList< QAction * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__11(QList< QWidget * >::iterator * this_ptr, int arg1) {
  return new QList< QWidget * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__11(QList< QGraphicsWidget * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__11(QList< QAbstractButton * >::iterator * this_ptr, int arg1) {
  return new QList< QAbstractButton * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__11(QList< QGraphicsItem * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__11(QList< QGraphicsTransform * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__11(QList< QPair< double, QPointF > >::iterator * this_ptr, int arg1) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__11(QList< QPair< double, double > >::iterator * this_ptr, int arg1) {
  return new QList< QPair< double, double > >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__11(QList< QGraphicsView * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsView * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__11(QList< QRectF >::iterator * this_ptr, int arg1) {
  return new QList< QRectF >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__11(QList< QListWidgetItem * >::iterator * this_ptr, int arg1) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__11(QList< QDockWidget * >::iterator * this_ptr, int arg1) {
  return new QList< QDockWidget * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__11(QList< QMdiSubWindow * >::iterator * this_ptr, int arg1) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__11(QList< QTextEdit::ExtraSelection >::iterator * this_ptr, int arg1) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__11(QList< QScroller * >::iterator * this_ptr, int arg1) {
  return new QList< QScroller * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__11(QList< QTableWidgetSelectionRange >::iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__11(QList< QTableWidgetItem * >::iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__11(QList< QUndoStack * >::iterator * this_ptr, int arg1) {
  return new QList< QUndoStack * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__11(QList< QWizard::WizardButton >::iterator * this_ptr, int arg1) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__12(QList< QGesture * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__12(QList< QTreeWidgetItem * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__12(QList< QAction * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__12(QList< QWidget * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__12(QList< QGraphicsWidget * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__12(QList< QAbstractButton * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__12(QList< QGraphicsItem * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__12(QList< QGraphicsTransform * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__12(QList< QPair< double, QPointF > >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__12(QList< QPair< double, double > >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__12(QList< QGraphicsView * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__12(QList< QRectF >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__12(QList< QListWidgetItem * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__12(QList< QDockWidget * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__12(QList< QMdiSubWindow * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__12(QList< QTextEdit::ExtraSelection >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__12(QList< QScroller * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__12(QList< QTableWidgetSelectionRange >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__12(QList< QTableWidgetItem * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__12(QList< QUndoStack * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__12(QList< QWizard::WizardButton >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__13(QList< QGesture * >::iterator * this_ptr, int arg1) {
  return new QList< QGesture * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__13(QList< QTreeWidgetItem * >::iterator * this_ptr, int arg1) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__13(QList< QAction * >::iterator * this_ptr, int arg1) {
  return new QList< QAction * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__13(QList< QWidget * >::iterator * this_ptr, int arg1) {
  return new QList< QWidget * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__13(QList< QGraphicsWidget * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__13(QList< QAbstractButton * >::iterator * this_ptr, int arg1) {
  return new QList< QAbstractButton * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__13(QList< QGraphicsItem * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__13(QList< QGraphicsTransform * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__13(QList< QPair< double, QPointF > >::iterator * this_ptr, int arg1) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__13(QList< QPair< double, double > >::iterator * this_ptr, int arg1) {
  return new QList< QPair< double, double > >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__13(QList< QGraphicsView * >::iterator * this_ptr, int arg1) {
  return new QList< QGraphicsView * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__13(QList< QRectF >::iterator * this_ptr, int arg1) {
  return new QList< QRectF >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__13(QList< QListWidgetItem * >::iterator * this_ptr, int arg1) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__13(QList< QDockWidget * >::iterator * this_ptr, int arg1) {
  return new QList< QDockWidget * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__13(QList< QMdiSubWindow * >::iterator * this_ptr, int arg1) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__13(QList< QTextEdit::ExtraSelection >::iterator * this_ptr, int arg1) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__13(QList< QScroller * >::iterator * this_ptr, int arg1) {
  return new QList< QScroller * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__13(QList< QTableWidgetSelectionRange >::iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__13(QList< QTableWidgetItem * >::iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__13(QList< QUndoStack * >::iterator * this_ptr, int arg1) {
  return new QList< QUndoStack * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__13(QList< QWizard::WizardButton >::iterator * this_ptr, int arg1) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__14(QList< QGesture * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__14(QList< QTreeWidgetItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__14(QList< QAction * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__14(QList< QWidget * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__14(QList< QGraphicsWidget * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__14(QList< QAbstractButton * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__14(QList< QGraphicsItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__14(QList< QGraphicsTransform * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__14(QList< QPair< double, QPointF > >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__14(QList< QPair< double, double > >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__14(QList< QGraphicsView * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__14(QList< QRectF >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__14(QList< QListWidgetItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__14(QList< QDockWidget * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__14(QList< QMdiSubWindow * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__14(QList< QTextEdit::ExtraSelection >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__14(QList< QScroller * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__14(QList< QTableWidgetSelectionRange >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__14(QList< QTableWidgetItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__14(QList< QUndoStack * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__14(QList< QWizard::WizardButton >::iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator__15(QList< QGesture * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator__15(QList< QTreeWidgetItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator__15(QList< QAction * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator__15(QList< QWidget * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator__15(QList< QGraphicsWidget * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator__15(QList< QAbstractButton * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator__15(QList< QGraphicsItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator__15(QList< QGraphicsTransform * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator__15(QList< QPair< double, QPointF > >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator__15(QList< QPair< double, double > >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator__15(QList< QGraphicsView * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator__15(QList< QRectF >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator__15(QList< QListWidgetItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator__15(QList< QDockWidget * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator__15(QList< QMdiSubWindow * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator__15(QList< QTextEdit::ExtraSelection >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator__15(QList< QScroller * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator__15(QList< QTableWidgetSelectionRange >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator__15(QList< QTableWidgetItem * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator__15(QList< QUndoStack * >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator__15(QList< QWizard::WizardButton >::iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_6(QList< QGesture * >::iterator const * this_ptr, long long j) {
  return new QList< QGesture * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_6(QList< QTreeWidgetItem * >::iterator const * this_ptr, long long j) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_6(QList< QAction * >::iterator const * this_ptr, long long j) {
  return new QList< QAction * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_6(QList< QWidget * >::iterator const * this_ptr, long long j) {
  return new QList< QWidget * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_6(QList< QGraphicsWidget * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_6(QList< QAbstractButton * >::iterator const * this_ptr, long long j) {
  return new QList< QAbstractButton * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_6(QList< QGraphicsItem * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_6(QList< QGraphicsTransform * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_6(QList< QPair< double, QPointF > >::iterator const * this_ptr, long long j) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_6(QList< QPair< double, double > >::iterator const * this_ptr, long long j) {
  return new QList< QPair< double, double > >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_6(QList< QGraphicsView * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsView * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_6(QList< QRectF >::iterator const * this_ptr, long long j) {
  return new QList< QRectF >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_6(QList< QListWidgetItem * >::iterator const * this_ptr, long long j) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_6(QList< QDockWidget * >::iterator const * this_ptr, long long j) {
  return new QList< QDockWidget * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_6(QList< QMdiSubWindow * >::iterator const * this_ptr, long long j) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_6(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, long long j) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_6(QList< QScroller * >::iterator const * this_ptr, long long j) {
  return new QList< QScroller * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_6(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_6(QList< QTableWidgetItem * >::iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_6(QList< QUndoStack * >::iterator const * this_ptr, long long j) {
  return new QList< QUndoStack * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_6(QList< QWizard::WizardButton >::iterator const * this_ptr, long long j) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_7(QList< QGesture * >::iterator const * this_ptr, long long j) {
  return new QList< QGesture * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_7(QList< QTreeWidgetItem * >::iterator const * this_ptr, long long j) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_7(QList< QAction * >::iterator const * this_ptr, long long j) {
  return new QList< QAction * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_7(QList< QWidget * >::iterator const * this_ptr, long long j) {
  return new QList< QWidget * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_7(QList< QGraphicsWidget * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_7(QList< QAbstractButton * >::iterator const * this_ptr, long long j) {
  return new QList< QAbstractButton * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_7(QList< QGraphicsItem * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_7(QList< QGraphicsTransform * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_7(QList< QPair< double, QPointF > >::iterator const * this_ptr, long long j) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_7(QList< QPair< double, double > >::iterator const * this_ptr, long long j) {
  return new QList< QPair< double, double > >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_7(QList< QGraphicsView * >::iterator const * this_ptr, long long j) {
  return new QList< QGraphicsView * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_7(QList< QRectF >::iterator const * this_ptr, long long j) {
  return new QList< QRectF >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_7(QList< QListWidgetItem * >::iterator const * this_ptr, long long j) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_7(QList< QDockWidget * >::iterator const * this_ptr, long long j) {
  return new QList< QDockWidget * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_7(QList< QMdiSubWindow * >::iterator const * this_ptr, long long j) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_7(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, long long j) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_7(QList< QScroller * >::iterator const * this_ptr, long long j) {
  return new QList< QScroller * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_7(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_7(QList< QTableWidgetItem * >::iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_7(QList< QUndoStack * >::iterator const * this_ptr, long long j) {
  return new QList< QUndoStack * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_7(QList< QWizard::WizardButton >::iterator const * this_ptr, long long j) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_operator_8(QList< QGesture * >::iterator const * this_ptr, QList< QGesture * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_operator_8(QList< QTreeWidgetItem * >::iterator const * this_ptr, QList< QTreeWidgetItem * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_operator_8(QList< QAction * >::iterator const * this_ptr, QList< QAction * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_operator_8(QList< QWidget * >::iterator const * this_ptr, QList< QWidget * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_operator_8(QList< QGraphicsWidget * >::iterator const * this_ptr, QList< QGraphicsWidget * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_operator_8(QList< QAbstractButton * >::iterator const * this_ptr, QList< QAbstractButton * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_operator_8(QList< QGraphicsItem * >::iterator const * this_ptr, QList< QGraphicsItem * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_operator_8(QList< QGraphicsTransform * >::iterator const * this_ptr, QList< QGraphicsTransform * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_operator_8(QList< QPair< double, QPointF > >::iterator const * this_ptr, QList< QPair< double, QPointF > >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_operator_8(QList< QPair< double, double > >::iterator const * this_ptr, QList< QPair< double, double > >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_operator_8(QList< QGraphicsView * >::iterator const * this_ptr, QList< QGraphicsView * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_iterator_operator_8(QList< QRectF >::iterator const * this_ptr, QList< QRectF >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_operator_8(QList< QListWidgetItem * >::iterator const * this_ptr, QList< QListWidgetItem * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_operator_8(QList< QDockWidget * >::iterator const * this_ptr, QList< QDockWidget * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_operator_8(QList< QMdiSubWindow * >::iterator const * this_ptr, QList< QMdiSubWindow * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_operator_8(QList< QTextEdit::ExtraSelection >::iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_operator_8(QList< QScroller * >::iterator const * this_ptr, QList< QScroller * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_operator_8(QList< QTableWidgetSelectionRange >::iterator const * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_operator_8(QList< QTableWidgetItem * >::iterator const * this_ptr, QList< QTableWidgetItem * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_operator_8(QList< QUndoStack * >::iterator const * this_ptr, QList< QUndoStack * >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_operator_8(QList< QWizard::WizardButton >::iterator const * this_ptr, QList< QWizard::WizardButton >::iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_const_iterator() {
  return new QList< QGesture * >::const_iterator();
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_const_iterator() {
  return new QList< QTreeWidgetItem * >::const_iterator();
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_const_iterator() {
  return new QList< QAction * >::const_iterator();
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_const_iterator() {
  return new QList< QWidget * >::const_iterator();
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_const_iterator() {
  return new QList< QGraphicsWidget * >::const_iterator();
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_const_iterator() {
  return new QList< QAbstractButton * >::const_iterator();
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_const_iterator() {
  return new QList< QGraphicsItem * >::const_iterator();
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_const_iterator() {
  return new QList< QGraphicsTransform * >::const_iterator();
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_const_iterator() {
  return new QList< QPair< double, QPointF > >::const_iterator();
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_const_iterator() {
  return new QList< QPair< double, double > >::const_iterator();
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_const_iterator() {
  return new QList< QGraphicsView * >::const_iterator();
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_const_iterator() {
  return new QList< QRectF >::const_iterator();
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_const_iterator() {
  return new QList< QListWidgetItem * >::const_iterator();
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_const_iterator() {
  return new QList< QDockWidget * >::const_iterator();
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_const_iterator() {
  return new QList< QMdiSubWindow * >::const_iterator();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_const_iterator() {
  return new QList< QTextEdit::ExtraSelection >::const_iterator();
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_const_iterator() {
  return new QList< QScroller * >::const_iterator();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_const_iterator() {
  return new QList< QTableWidgetSelectionRange >::const_iterator();
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_const_iterator() {
  return new QList< QTableWidgetItem * >::const_iterator();
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_const_iterator() {
  return new QList< QUndoStack * >::const_iterator();
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_const_iterator() {
  return new QList< QWizard::WizardButton >::const_iterator();
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_const_iterator1(QList< QGesture * >::const_iterator const * o) {
  return new QList< QGesture * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_const_iterator1(QList< QTreeWidgetItem * >::const_iterator const * o) {
  return new QList< QTreeWidgetItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_const_iterator1(QList< QAction * >::const_iterator const * o) {
  return new QList< QAction * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_const_iterator1(QList< QWidget * >::const_iterator const * o) {
  return new QList< QWidget * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_const_iterator1(QList< QGraphicsWidget * >::const_iterator const * o) {
  return new QList< QGraphicsWidget * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_const_iterator1(QList< QAbstractButton * >::const_iterator const * o) {
  return new QList< QAbstractButton * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_const_iterator1(QList< QGraphicsItem * >::const_iterator const * o) {
  return new QList< QGraphicsItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_const_iterator1(QList< QGraphicsTransform * >::const_iterator const * o) {
  return new QList< QGraphicsTransform * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_const_iterator1(QList< QPair< double, QPointF > >::const_iterator const * o) {
  return new QList< QPair< double, QPointF > >::const_iterator(*o);
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_const_iterator1(QList< QPair< double, double > >::const_iterator const * o) {
  return new QList< QPair< double, double > >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_const_iterator1(QList< QGraphicsView * >::const_iterator const * o) {
  return new QList< QGraphicsView * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_const_iterator1(QList< QRectF >::const_iterator const * o) {
  return new QList< QRectF >::const_iterator(*o);
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_const_iterator1(QList< QListWidgetItem * >::const_iterator const * o) {
  return new QList< QListWidgetItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_const_iterator1(QList< QDockWidget * >::const_iterator const * o) {
  return new QList< QDockWidget * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_const_iterator1(QList< QMdiSubWindow * >::const_iterator const * o) {
  return new QList< QMdiSubWindow * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_const_iterator1(QList< QTextEdit::ExtraSelection >::const_iterator const * o) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(*o);
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_const_iterator1(QList< QScroller * >::const_iterator const * o) {
  return new QList< QScroller * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_const_iterator1(QList< QTableWidgetSelectionRange >::const_iterator const * o) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_const_iterator1(QList< QTableWidgetItem * >::const_iterator const * o) {
  return new QList< QTableWidgetItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_const_iterator1(QList< QUndoStack * >::const_iterator const * o) {
  return new QList< QUndoStack * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_const_iterator1(QList< QWizard::WizardButton >::const_iterator const * o) {
  return new QList< QWizard::WizardButton >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator_(QList< QGesture * >::const_iterator * this_ptr, QList< QGesture * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator_(QList< QTreeWidgetItem * >::const_iterator * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator_(QList< QAction * >::const_iterator * this_ptr, QList< QAction * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator_(QList< QWidget * >::const_iterator * this_ptr, QList< QWidget * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator_(QList< QGraphicsWidget * >::const_iterator * this_ptr, QList< QGraphicsWidget * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator_(QList< QAbstractButton * >::const_iterator * this_ptr, QList< QAbstractButton * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator_(QList< QGraphicsItem * >::const_iterator * this_ptr, QList< QGraphicsItem * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator_(QList< QGraphicsTransform * >::const_iterator * this_ptr, QList< QGraphicsTransform * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator_(QList< QPair< double, QPointF > >::const_iterator * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator_(QList< QPair< double, double > >::const_iterator * this_ptr, QList< QPair< double, double > >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator_(QList< QGraphicsView * >::const_iterator * this_ptr, QList< QGraphicsView * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator_(QList< QRectF >::const_iterator * this_ptr, QList< QRectF >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator_(QList< QListWidgetItem * >::const_iterator * this_ptr, QList< QListWidgetItem * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator_(QList< QDockWidget * >::const_iterator * this_ptr, QList< QDockWidget * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator_(QList< QMdiSubWindow * >::const_iterator * this_ptr, QList< QMdiSubWindow * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator_(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator_(QList< QScroller * >::const_iterator * this_ptr, QList< QScroller * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator_(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator_(QList< QTableWidgetItem * >::const_iterator * this_ptr, QList< QTableWidgetItem * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator_(QList< QUndoStack * >::const_iterator * this_ptr, QList< QUndoStack * >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator_(QList< QWizard::WizardButton >::const_iterator * this_ptr, QList< QWizard::WizardButton >::const_iterator const * o) {
  return &this_ptr->operator=(*o);
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_const_iterator2(QList< QGesture * >::iterator const * o) {
  return new QList< QGesture * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_const_iterator2(QList< QTreeWidgetItem * >::iterator const * o) {
  return new QList< QTreeWidgetItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_const_iterator2(QList< QAction * >::iterator const * o) {
  return new QList< QAction * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_const_iterator2(QList< QWidget * >::iterator const * o) {
  return new QList< QWidget * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_const_iterator2(QList< QGraphicsWidget * >::iterator const * o) {
  return new QList< QGraphicsWidget * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_const_iterator2(QList< QAbstractButton * >::iterator const * o) {
  return new QList< QAbstractButton * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_const_iterator2(QList< QGraphicsItem * >::iterator const * o) {
  return new QList< QGraphicsItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_const_iterator2(QList< QGraphicsTransform * >::iterator const * o) {
  return new QList< QGraphicsTransform * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_const_iterator2(QList< QPair< double, QPointF > >::iterator const * o) {
  return new QList< QPair< double, QPointF > >::const_iterator(*o);
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_const_iterator2(QList< QPair< double, double > >::iterator const * o) {
  return new QList< QPair< double, double > >::const_iterator(*o);
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_const_iterator2(QList< QGraphicsView * >::iterator const * o) {
  return new QList< QGraphicsView * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_const_iterator2(QList< QRectF >::iterator const * o) {
  return new QList< QRectF >::const_iterator(*o);
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_const_iterator2(QList< QListWidgetItem * >::iterator const * o) {
  return new QList< QListWidgetItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_const_iterator2(QList< QDockWidget * >::iterator const * o) {
  return new QList< QDockWidget * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_const_iterator2(QList< QMdiSubWindow * >::iterator const * o) {
  return new QList< QMdiSubWindow * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_const_iterator2(QList< QTextEdit::ExtraSelection >::iterator const * o) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(*o);
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_const_iterator2(QList< QScroller * >::iterator const * o) {
  return new QList< QScroller * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_const_iterator2(QList< QTableWidgetSelectionRange >::iterator const * o) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(*o);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_const_iterator2(QList< QTableWidgetItem * >::iterator const * o) {
  return new QList< QTableWidgetItem * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_const_iterator2(QList< QUndoStack * >::iterator const * o) {
  return new QList< QUndoStack * >::const_iterator(*o);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_const_iterator2(QList< QWizard::WizardButton >::iterator const * o) {
  return new QList< QWizard::WizardButton >::const_iterator(*o);
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator_1(QList< QGesture * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator_1(QList< QTreeWidgetItem * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator_1(QList< QAction * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator_1(QList< QWidget * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator_1(QList< QGraphicsWidget * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator_1(QList< QAbstractButton * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator_1(QList< QGraphicsItem * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator_1(QList< QGraphicsTransform * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator_1(QList< QPair< double, QPointF > >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator_1(QList< QPair< double, double > >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator_1(QList< QGraphicsView * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator_1(QList< QRectF >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator_1(QList< QListWidgetItem * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator_1(QList< QDockWidget * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator_1(QList< QMdiSubWindow * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator_1(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator_1(QList< QScroller * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator_1(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator_1(QList< QTableWidgetItem * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator_1(QList< QUndoStack * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator_1(QList< QWizard::WizardButton >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__(QList< QGesture * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__(QList< QTreeWidgetItem * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__(QList< QAction * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__(QList< QWidget * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__(QList< QGraphicsWidget * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__(QList< QAbstractButton * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__(QList< QGraphicsItem * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__(QList< QGraphicsTransform * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__(QList< QPair< double, QPointF > >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__(QList< QPair< double, double > >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__(QList< QGraphicsView * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__(QList< QRectF >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__(QList< QListWidgetItem * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__(QList< QDockWidget * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__(QList< QMdiSubWindow * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__(QList< QScroller * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__(QList< QTableWidgetItem * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__(QList< QUndoStack * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__(QList< QWizard::WizardButton >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__1(QList< QGesture * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__1(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__1(QList< QAction * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__1(QList< QWidget * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__1(QList< QGraphicsWidget * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__1(QList< QAbstractButton * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__1(QList< QGraphicsItem * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__1(QList< QGraphicsTransform * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__1(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__1(QList< QPair< double, double > >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__1(QList< QGraphicsView * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__1(QList< QRectF >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__1(QList< QListWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__1(QList< QDockWidget * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__1(QList< QMdiSubWindow * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__1(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__1(QList< QScroller * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__1(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__1(QList< QTableWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__1(QList< QUndoStack * >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__1(QList< QWizard::WizardButton >::const_iterator const * this_ptr, long long j) {
  return &this_ptr->operator[](j);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__2(QList< QGesture * >::const_iterator const * this_ptr, QList< QGesture * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__2(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__2(QList< QAction * >::const_iterator const * this_ptr, QList< QAction * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__2(QList< QWidget * >::const_iterator const * this_ptr, QList< QWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__2(QList< QGraphicsWidget * >::const_iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__2(QList< QAbstractButton * >::const_iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__2(QList< QGraphicsItem * >::const_iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__2(QList< QGraphicsTransform * >::const_iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__2(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__2(QList< QPair< double, double > >::const_iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__2(QList< QGraphicsView * >::const_iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__2(QList< QRectF >::const_iterator const * this_ptr, QList< QRectF >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__2(QList< QListWidgetItem * >::const_iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__2(QList< QDockWidget * >::const_iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__2(QList< QMdiSubWindow * >::const_iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__2(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__2(QList< QScroller * >::const_iterator const * this_ptr, QList< QScroller * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__2(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__2(QList< QTableWidgetItem * >::const_iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__2(QList< QUndoStack * >::const_iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__2(QList< QWizard::WizardButton >::const_iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator_2(QList< QGesture * >::const_iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator_2(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator_2(QList< QAction * >::const_iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator_2(QList< QWidget * >::const_iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator_2(QList< QGraphicsWidget * >::const_iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator_2(QList< QAbstractButton * >::const_iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator_2(QList< QGraphicsItem * >::const_iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator_2(QList< QGraphicsTransform * >::const_iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator_2(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator_2(QList< QPair< double, double > >::const_iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator_2(QList< QGraphicsView * >::const_iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator_2(QList< QRectF >::const_iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator_2(QList< QListWidgetItem * >::const_iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator_2(QList< QDockWidget * >::const_iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator_2(QList< QMdiSubWindow * >::const_iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator_2(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator_2(QList< QScroller * >::const_iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator_2(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator_2(QList< QTableWidgetItem * >::const_iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator_2(QList< QUndoStack * >::const_iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator_2(QList< QWizard::WizardButton >::const_iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator<(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__4(QList< QGesture * >::const_iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__4(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__4(QList< QAction * >::const_iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__4(QList< QWidget * >::const_iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__4(QList< QGraphicsWidget * >::const_iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__4(QList< QAbstractButton * >::const_iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__4(QList< QGraphicsItem * >::const_iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__4(QList< QGraphicsTransform * >::const_iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__4(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__4(QList< QPair< double, double > >::const_iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__4(QList< QGraphicsView * >::const_iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__4(QList< QRectF >::const_iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__4(QList< QListWidgetItem * >::const_iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__4(QList< QDockWidget * >::const_iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__4(QList< QMdiSubWindow * >::const_iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__4(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__4(QList< QScroller * >::const_iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__4(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__4(QList< QTableWidgetItem * >::const_iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__4(QList< QUndoStack * >::const_iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__4(QList< QWizard::WizardButton >::const_iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator<=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator_3(QList< QGesture * >::const_iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator_3(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator_3(QList< QAction * >::const_iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator_3(QList< QWidget * >::const_iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator_3(QList< QGraphicsWidget * >::const_iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator_3(QList< QAbstractButton * >::const_iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator_3(QList< QGraphicsItem * >::const_iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator_3(QList< QGraphicsTransform * >::const_iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator_3(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator_3(QList< QPair< double, double > >::const_iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator_3(QList< QGraphicsView * >::const_iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator_3(QList< QRectF >::const_iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator_3(QList< QListWidgetItem * >::const_iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator_3(QList< QDockWidget * >::const_iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator_3(QList< QMdiSubWindow * >::const_iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator_3(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator_3(QList< QScroller * >::const_iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator_3(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator_3(QList< QTableWidgetItem * >::const_iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator_3(QList< QUndoStack * >::const_iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator_3(QList< QWizard::WizardButton >::const_iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator>(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__5(QList< QGesture * >::const_iterator const * this_ptr, QList< QGesture * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__5(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__5(QList< QAction * >::const_iterator const * this_ptr, QList< QAction * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__5(QList< QWidget * >::const_iterator const * this_ptr, QList< QWidget * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__5(QList< QGraphicsWidget * >::const_iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__5(QList< QAbstractButton * >::const_iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__5(QList< QGraphicsItem * >::const_iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__5(QList< QGraphicsTransform * >::const_iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__5(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__5(QList< QPair< double, double > >::const_iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__5(QList< QGraphicsView * >::const_iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__5(QList< QRectF >::const_iterator const * this_ptr, QList< QRectF >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__5(QList< QListWidgetItem * >::const_iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__5(QList< QDockWidget * >::const_iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__5(QList< QMdiSubWindow * >::const_iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__5(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__5(QList< QScroller * >::const_iterator const * this_ptr, QList< QScroller * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__5(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__5(QList< QTableWidgetItem * >::const_iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__5(QList< QUndoStack * >::const_iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__5(QList< QWizard::WizardButton >::const_iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * other) {
  return this_ptr->operator>=(*other);
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__6(QList< QGesture * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__6(QList< QTreeWidgetItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__6(QList< QAction * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__6(QList< QWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__6(QList< QGraphicsWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__6(QList< QAbstractButton * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__6(QList< QGraphicsItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__6(QList< QGraphicsTransform * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__6(QList< QPair< double, QPointF > >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__6(QList< QPair< double, double > >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__6(QList< QGraphicsView * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__6(QList< QRectF >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__6(QList< QListWidgetItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__6(QList< QDockWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__6(QList< QMdiSubWindow * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__6(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__6(QList< QScroller * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__6(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__6(QList< QTableWidgetItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__6(QList< QUndoStack * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__6(QList< QWizard::WizardButton >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__7(QList< QGesture * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGesture * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__7(QList< QTreeWidgetItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__7(QList< QAction * >::const_iterator * this_ptr, int arg1) {
  return new QList< QAction * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__7(QList< QWidget * >::const_iterator * this_ptr, int arg1) {
  return new QList< QWidget * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__7(QList< QGraphicsWidget * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__7(QList< QAbstractButton * >::const_iterator * this_ptr, int arg1) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__7(QList< QGraphicsItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__7(QList< QGraphicsTransform * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__7(QList< QPair< double, QPointF > >::const_iterator * this_ptr, int arg1) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__7(QList< QPair< double, double > >::const_iterator * this_ptr, int arg1) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__7(QList< QGraphicsView * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__7(QList< QRectF >::const_iterator * this_ptr, int arg1) {
  return new QList< QRectF >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__7(QList< QListWidgetItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__7(QList< QDockWidget * >::const_iterator * this_ptr, int arg1) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__7(QList< QMdiSubWindow * >::const_iterator * this_ptr, int arg1) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__7(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr, int arg1) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__7(QList< QScroller * >::const_iterator * this_ptr, int arg1) {
  return new QList< QScroller * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__7(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__7(QList< QTableWidgetItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__7(QList< QUndoStack * >::const_iterator * this_ptr, int arg1) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__7(QList< QWizard::WizardButton >::const_iterator * this_ptr, int arg1) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__8(QList< QGesture * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__8(QList< QTreeWidgetItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__8(QList< QAction * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__8(QList< QWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__8(QList< QGraphicsWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__8(QList< QAbstractButton * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__8(QList< QGraphicsItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__8(QList< QGraphicsTransform * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__8(QList< QPair< double, QPointF > >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__8(QList< QPair< double, double > >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__8(QList< QGraphicsView * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__8(QList< QRectF >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__8(QList< QListWidgetItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__8(QList< QDockWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__8(QList< QMdiSubWindow * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__8(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__8(QList< QScroller * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__8(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__8(QList< QTableWidgetItem * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__8(QList< QUndoStack * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__8(QList< QWizard::WizardButton >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__9(QList< QGesture * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGesture * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__9(QList< QTreeWidgetItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__9(QList< QAction * >::const_iterator * this_ptr, int arg1) {
  return new QList< QAction * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__9(QList< QWidget * >::const_iterator * this_ptr, int arg1) {
  return new QList< QWidget * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__9(QList< QGraphicsWidget * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__9(QList< QAbstractButton * >::const_iterator * this_ptr, int arg1) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__9(QList< QGraphicsItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__9(QList< QGraphicsTransform * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__9(QList< QPair< double, QPointF > >::const_iterator * this_ptr, int arg1) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__9(QList< QPair< double, double > >::const_iterator * this_ptr, int arg1) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__9(QList< QGraphicsView * >::const_iterator * this_ptr, int arg1) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__9(QList< QRectF >::const_iterator * this_ptr, int arg1) {
  return new QList< QRectF >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__9(QList< QListWidgetItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__9(QList< QDockWidget * >::const_iterator * this_ptr, int arg1) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__9(QList< QMdiSubWindow * >::const_iterator * this_ptr, int arg1) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__9(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr, int arg1) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__9(QList< QScroller * >::const_iterator * this_ptr, int arg1) {
  return new QList< QScroller * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__9(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__9(QList< QTableWidgetItem * >::const_iterator * this_ptr, int arg1) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__9(QList< QUndoStack * >::const_iterator * this_ptr, int arg1) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__9(QList< QWizard::WizardButton >::const_iterator * this_ptr, int arg1) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__10(QList< QGesture * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__10(QList< QTreeWidgetItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__10(QList< QAction * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__10(QList< QWidget * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__10(QList< QGraphicsWidget * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__10(QList< QAbstractButton * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__10(QList< QGraphicsItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__10(QList< QGraphicsTransform * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__10(QList< QPair< double, QPointF > >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__10(QList< QPair< double, double > >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__10(QList< QGraphicsView * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__10(QList< QRectF >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__10(QList< QListWidgetItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__10(QList< QDockWidget * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__10(QList< QMdiSubWindow * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__10(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__10(QList< QScroller * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__10(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__10(QList< QTableWidgetItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__10(QList< QUndoStack * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__10(QList< QWizard::WizardButton >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator__11(QList< QGesture * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator__11(QList< QTreeWidgetItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator__11(QList< QAction * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator__11(QList< QWidget * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator__11(QList< QGraphicsWidget * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator__11(QList< QAbstractButton * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator__11(QList< QGraphicsItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator__11(QList< QGraphicsTransform * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator__11(QList< QPair< double, QPointF > >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator__11(QList< QPair< double, double > >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator__11(QList< QGraphicsView * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator__11(QList< QRectF >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator__11(QList< QListWidgetItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator__11(QList< QDockWidget * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator__11(QList< QMdiSubWindow * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator__11(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator__11(QList< QScroller * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator__11(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator__11(QList< QTableWidgetItem * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator__11(QList< QUndoStack * >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator__11(QList< QWizard::WizardButton >::const_iterator * this_ptr, long long j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator_4(QList< QGesture * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGesture * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator_4(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator_4(QList< QAction * >::const_iterator const * this_ptr, long long j) {
  return new QList< QAction * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator_4(QList< QWidget * >::const_iterator const * this_ptr, long long j) {
  return new QList< QWidget * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator_4(QList< QGraphicsWidget * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator_4(QList< QAbstractButton * >::const_iterator const * this_ptr, long long j) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator_4(QList< QGraphicsItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator_4(QList< QGraphicsTransform * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator_4(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, long long j) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator_4(QList< QPair< double, double > >::const_iterator const * this_ptr, long long j) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator_4(QList< QGraphicsView * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator_4(QList< QRectF >::const_iterator const * this_ptr, long long j) {
  return new QList< QRectF >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator_4(QList< QListWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator_4(QList< QDockWidget * >::const_iterator const * this_ptr, long long j) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator_4(QList< QMdiSubWindow * >::const_iterator const * this_ptr, long long j) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator_4(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, long long j) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator_4(QList< QScroller * >::const_iterator const * this_ptr, long long j) {
  return new QList< QScroller * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator_4(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator_4(QList< QTableWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator_4(QList< QUndoStack * >::const_iterator const * this_ptr, long long j) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator_4(QList< QWizard::WizardButton >::const_iterator const * this_ptr, long long j) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator_5(QList< QGesture * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGesture * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator_5(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator_5(QList< QAction * >::const_iterator const * this_ptr, long long j) {
  return new QList< QAction * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator_5(QList< QWidget * >::const_iterator const * this_ptr, long long j) {
  return new QList< QWidget * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator_5(QList< QGraphicsWidget * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator_5(QList< QAbstractButton * >::const_iterator const * this_ptr, long long j) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator_5(QList< QGraphicsItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator_5(QList< QGraphicsTransform * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator_5(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, long long j) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator_5(QList< QPair< double, double > >::const_iterator const * this_ptr, long long j) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator_5(QList< QGraphicsView * >::const_iterator const * this_ptr, long long j) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator_5(QList< QRectF >::const_iterator const * this_ptr, long long j) {
  return new QList< QRectF >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator_5(QList< QListWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator_5(QList< QDockWidget * >::const_iterator const * this_ptr, long long j) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator_5(QList< QMdiSubWindow * >::const_iterator const * this_ptr, long long j) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator_5(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, long long j) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator_5(QList< QScroller * >::const_iterator const * this_ptr, long long j) {
  return new QList< QScroller * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator_5(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator_5(QList< QTableWidgetItem * >::const_iterator const * this_ptr, long long j) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator_5(QList< QUndoStack * >::const_iterator const * this_ptr, long long j) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator_5(QList< QWizard::WizardButton >::const_iterator const * this_ptr, long long j) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_operator_6(QList< QGesture * >::const_iterator const * this_ptr, QList< QGesture * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_operator_6(QList< QTreeWidgetItem * >::const_iterator const * this_ptr, QList< QTreeWidgetItem * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_operator_6(QList< QAction * >::const_iterator const * this_ptr, QList< QAction * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_operator_6(QList< QWidget * >::const_iterator const * this_ptr, QList< QWidget * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_operator_6(QList< QGraphicsWidget * >::const_iterator const * this_ptr, QList< QGraphicsWidget * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_operator_6(QList< QAbstractButton * >::const_iterator const * this_ptr, QList< QAbstractButton * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_operator_6(QList< QGraphicsItem * >::const_iterator const * this_ptr, QList< QGraphicsItem * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_operator_6(QList< QGraphicsTransform * >::const_iterator const * this_ptr, QList< QGraphicsTransform * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_operator_6(QList< QPair< double, QPointF > >::const_iterator const * this_ptr, QList< QPair< double, QPointF > >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_operator_6(QList< QPair< double, double > >::const_iterator const * this_ptr, QList< QPair< double, double > >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_operator_6(QList< QGraphicsView * >::const_iterator const * this_ptr, QList< QGraphicsView * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_const_iterator_operator_6(QList< QRectF >::const_iterator const * this_ptr, QList< QRectF >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_operator_6(QList< QListWidgetItem * >::const_iterator const * this_ptr, QList< QListWidgetItem * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_operator_6(QList< QDockWidget * >::const_iterator const * this_ptr, QList< QDockWidget * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_operator_6(QList< QMdiSubWindow * >::const_iterator const * this_ptr, QList< QMdiSubWindow * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_operator_6(QList< QTextEdit::ExtraSelection >::const_iterator const * this_ptr, QList< QTextEdit::ExtraSelection >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_operator_6(QList< QScroller * >::const_iterator const * this_ptr, QList< QScroller * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_operator_6(QList< QTableWidgetSelectionRange >::const_iterator const * this_ptr, QList< QTableWidgetSelectionRange >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_operator_6(QList< QTableWidgetItem * >::const_iterator const * this_ptr, QList< QTableWidgetItem * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_operator_6(QList< QUndoStack * >::const_iterator const * this_ptr, QList< QUndoStack * >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_operator_6(QList< QWizard::WizardButton >::const_iterator const * this_ptr, QList< QWizard::WizardButton >::const_iterator const * j) {
  return this_ptr->operator-(*j);
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_begin(QList< QGesture * > * this_ptr) {
  return new QList< QGesture * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_begin(QList< QTreeWidgetItem * > * this_ptr) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_begin(QList< QAction * > * this_ptr) {
  return new QList< QAction * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_begin(QList< QWidget * > * this_ptr) {
  return new QList< QWidget * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_begin(QList< QGraphicsWidget * > * this_ptr) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_begin(QList< QAbstractButton * > * this_ptr) {
  return new QList< QAbstractButton * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_begin(QList< QGraphicsItem * > * this_ptr) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_begin(QList< QGraphicsTransform * > * this_ptr) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_begin(QList< QPair< double, QPointF > > * this_ptr) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_begin(QList< QPair< double, double > > * this_ptr) {
  return new QList< QPair< double, double > >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_begin(QList< QGraphicsView * > * this_ptr) {
  return new QList< QGraphicsView * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_begin(QList< QRectF > * this_ptr) {
  return new QList< QRectF >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_begin(QList< QListWidgetItem * > * this_ptr) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_begin(QList< QDockWidget * > * this_ptr) {
  return new QList< QDockWidget * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_begin(QList< QMdiSubWindow * > * this_ptr) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_begin(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_begin(QList< QScroller * > * this_ptr) {
  return new QList< QScroller * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_begin(QList< QTableWidgetSelectionRange > * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_begin(QList< QTableWidgetItem * > * this_ptr) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_begin(QList< QUndoStack * > * this_ptr) {
  return new QList< QUndoStack * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_begin(QList< QWizard::WizardButton > * this_ptr) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_begin1(QList< QGesture * > const * this_ptr) {
  return new QList< QGesture * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_begin1(QList< QTreeWidgetItem * > const * this_ptr) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_begin1(QList< QAction * > const * this_ptr) {
  return new QList< QAction * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_begin1(QList< QWidget * > const * this_ptr) {
  return new QList< QWidget * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_begin1(QList< QGraphicsWidget * > const * this_ptr) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_begin1(QList< QAbstractButton * > const * this_ptr) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_begin1(QList< QGraphicsItem * > const * this_ptr) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_begin1(QList< QGraphicsTransform * > const * this_ptr) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_begin1(QList< QPair< double, QPointF > > const * this_ptr) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_begin1(QList< QPair< double, double > > const * this_ptr) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_begin1(QList< QGraphicsView * > const * this_ptr) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_begin1(QList< QRectF > const * this_ptr) {
  return new QList< QRectF >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_begin1(QList< QListWidgetItem * > const * this_ptr) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_begin1(QList< QDockWidget * > const * this_ptr) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_begin1(QList< QMdiSubWindow * > const * this_ptr) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_begin1(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_begin1(QList< QScroller * > const * this_ptr) {
  return new QList< QScroller * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_begin1(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_begin1(QList< QTableWidgetItem * > const * this_ptr) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_begin1(QList< QUndoStack * > const * this_ptr) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_begin1(QList< QWizard::WizardButton > const * this_ptr) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_cbegin(QList< QGesture * > const * this_ptr) {
  return new QList< QGesture * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_cbegin(QList< QTreeWidgetItem * > const * this_ptr) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_cbegin(QList< QAction * > const * this_ptr) {
  return new QList< QAction * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_cbegin(QList< QWidget * > const * this_ptr) {
  return new QList< QWidget * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_cbegin(QList< QGraphicsWidget * > const * this_ptr) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_cbegin(QList< QAbstractButton * > const * this_ptr) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_cbegin(QList< QGraphicsItem * > const * this_ptr) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_cbegin(QList< QGraphicsTransform * > const * this_ptr) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_cbegin(QList< QPair< double, QPointF > > const * this_ptr) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_cbegin(QList< QPair< double, double > > const * this_ptr) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_cbegin(QList< QGraphicsView * > const * this_ptr) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_cbegin(QList< QRectF > const * this_ptr) {
  return new QList< QRectF >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_cbegin(QList< QListWidgetItem * > const * this_ptr) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_cbegin(QList< QDockWidget * > const * this_ptr) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_cbegin(QList< QMdiSubWindow * > const * this_ptr) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_cbegin(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_cbegin(QList< QScroller * > const * this_ptr) {
  return new QList< QScroller * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_cbegin(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_cbegin(QList< QTableWidgetItem * > const * this_ptr) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_cbegin(QList< QUndoStack * > const * this_ptr) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_cbegin(QList< QWizard::WizardButton > const * this_ptr) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_constBegin(QList< QGesture * > const * this_ptr) {
  return new QList< QGesture * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_constBegin(QList< QTreeWidgetItem * > const * this_ptr) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_constBegin(QList< QAction * > const * this_ptr) {
  return new QList< QAction * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_constBegin(QList< QWidget * > const * this_ptr) {
  return new QList< QWidget * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_constBegin(QList< QGraphicsWidget * > const * this_ptr) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_constBegin(QList< QAbstractButton * > const * this_ptr) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_constBegin(QList< QGraphicsItem * > const * this_ptr) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_constBegin(QList< QGraphicsTransform * > const * this_ptr) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_constBegin(QList< QPair< double, QPointF > > const * this_ptr) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_constBegin(QList< QPair< double, double > > const * this_ptr) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_constBegin(QList< QGraphicsView * > const * this_ptr) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_constBegin(QList< QRectF > const * this_ptr) {
  return new QList< QRectF >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_constBegin(QList< QListWidgetItem * > const * this_ptr) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_constBegin(QList< QDockWidget * > const * this_ptr) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_constBegin(QList< QMdiSubWindow * > const * this_ptr) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_constBegin(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_constBegin(QList< QScroller * > const * this_ptr) {
  return new QList< QScroller * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_constBegin(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_constBegin(QList< QTableWidgetItem * > const * this_ptr) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_constBegin(QList< QUndoStack * > const * this_ptr) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_constBegin(QList< QWizard::WizardButton > const * this_ptr) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_end(QList< QGesture * > * this_ptr) {
  return new QList< QGesture * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_end(QList< QTreeWidgetItem * > * this_ptr) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_end(QList< QAction * > * this_ptr) {
  return new QList< QAction * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_end(QList< QWidget * > * this_ptr) {
  return new QList< QWidget * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_end(QList< QGraphicsWidget * > * this_ptr) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_end(QList< QAbstractButton * > * this_ptr) {
  return new QList< QAbstractButton * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_end(QList< QGraphicsItem * > * this_ptr) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_end(QList< QGraphicsTransform * > * this_ptr) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_end(QList< QPair< double, QPointF > > * this_ptr) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_end(QList< QPair< double, double > > * this_ptr) {
  return new QList< QPair< double, double > >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_end(QList< QGraphicsView * > * this_ptr) {
  return new QList< QGraphicsView * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_end(QList< QRectF > * this_ptr) {
  return new QList< QRectF >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_end(QList< QListWidgetItem * > * this_ptr) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_end(QList< QDockWidget * > * this_ptr) {
  return new QList< QDockWidget * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_end(QList< QMdiSubWindow * > * this_ptr) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_end(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_end(QList< QScroller * > * this_ptr) {
  return new QList< QScroller * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_end(QList< QTableWidgetSelectionRange > * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_end(QList< QTableWidgetItem * > * this_ptr) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_end(QList< QUndoStack * > * this_ptr) {
  return new QList< QUndoStack * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_end(QList< QWizard::WizardButton > * this_ptr) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_end1(QList< QGesture * > const * this_ptr) {
  return new QList< QGesture * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_end1(QList< QTreeWidgetItem * > const * this_ptr) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_end1(QList< QAction * > const * this_ptr) {
  return new QList< QAction * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_end1(QList< QWidget * > const * this_ptr) {
  return new QList< QWidget * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_end1(QList< QGraphicsWidget * > const * this_ptr) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_end1(QList< QAbstractButton * > const * this_ptr) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_end1(QList< QGraphicsItem * > const * this_ptr) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_end1(QList< QGraphicsTransform * > const * this_ptr) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_end1(QList< QPair< double, QPointF > > const * this_ptr) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_end1(QList< QPair< double, double > > const * this_ptr) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_end1(QList< QGraphicsView * > const * this_ptr) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_end1(QList< QRectF > const * this_ptr) {
  return new QList< QRectF >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_end1(QList< QListWidgetItem * > const * this_ptr) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_end1(QList< QDockWidget * > const * this_ptr) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_end1(QList< QMdiSubWindow * > const * this_ptr) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_end1(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_end1(QList< QScroller * > const * this_ptr) {
  return new QList< QScroller * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_end1(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_end1(QList< QTableWidgetItem * > const * this_ptr) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_end1(QList< QUndoStack * > const * this_ptr) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_end1(QList< QWizard::WizardButton > const * this_ptr) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_cend(QList< QGesture * > const * this_ptr) {
  return new QList< QGesture * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_cend(QList< QTreeWidgetItem * > const * this_ptr) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_cend(QList< QAction * > const * this_ptr) {
  return new QList< QAction * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_cend(QList< QWidget * > const * this_ptr) {
  return new QList< QWidget * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_cend(QList< QGraphicsWidget * > const * this_ptr) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_cend(QList< QAbstractButton * > const * this_ptr) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_cend(QList< QGraphicsItem * > const * this_ptr) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_cend(QList< QGraphicsTransform * > const * this_ptr) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_cend(QList< QPair< double, QPointF > > const * this_ptr) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_cend(QList< QPair< double, double > > const * this_ptr) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_cend(QList< QGraphicsView * > const * this_ptr) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_cend(QList< QRectF > const * this_ptr) {
  return new QList< QRectF >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_cend(QList< QListWidgetItem * > const * this_ptr) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_cend(QList< QDockWidget * > const * this_ptr) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_cend(QList< QMdiSubWindow * > const * this_ptr) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_cend(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_cend(QList< QScroller * > const * this_ptr) {
  return new QList< QScroller * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_cend(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_cend(QList< QTableWidgetItem * > const * this_ptr) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_cend(QList< QUndoStack * > const * this_ptr) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_cend(QList< QWizard::WizardButton > const * this_ptr) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QList< QGesture * >::const_iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_constEnd(QList< QGesture * > const * this_ptr) {
  return new QList< QGesture * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_constEnd(QList< QTreeWidgetItem * > const * this_ptr) {
  return new QList< QTreeWidgetItem * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QAction * >::const_iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_constEnd(QList< QAction * > const * this_ptr) {
  return new QList< QAction * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_constEnd(QList< QWidget * > const * this_ptr) {
  return new QList< QWidget * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QGraphicsWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_constEnd(QList< QGraphicsWidget * > const * this_ptr) {
  return new QList< QGraphicsWidget * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QAbstractButton * >::const_iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_constEnd(QList< QAbstractButton * > const * this_ptr) {
  return new QList< QAbstractButton * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QGraphicsItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_constEnd(QList< QGraphicsItem * > const * this_ptr) {
  return new QList< QGraphicsItem * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QGraphicsTransform * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_constEnd(QList< QGraphicsTransform * > const * this_ptr) {
  return new QList< QGraphicsTransform * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_constEnd(QList< QPair< double, QPointF > > const * this_ptr) {
  return new QList< QPair< double, QPointF > >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QPair< double, double > >::const_iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_constEnd(QList< QPair< double, double > > const * this_ptr) {
  return new QList< QPair< double, double > >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QGraphicsView * >::const_iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_constEnd(QList< QGraphicsView * > const * this_ptr) {
  return new QList< QGraphicsView * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QRectF >::const_iterator * ctr_qt_widgets_ffi_QList_QRectF_constEnd(QList< QRectF > const * this_ptr) {
  return new QList< QRectF >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QListWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_constEnd(QList< QListWidgetItem * > const * this_ptr) {
  return new QList< QListWidgetItem * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QDockWidget * >::const_iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_constEnd(QList< QDockWidget * > const * this_ptr) {
  return new QList< QDockWidget * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QMdiSubWindow * >::const_iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_constEnd(QList< QMdiSubWindow * > const * this_ptr) {
  return new QList< QMdiSubWindow * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::const_iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_constEnd(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return new QList< QTextEdit::ExtraSelection >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QScroller * >::const_iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_constEnd(QList< QScroller * > const * this_ptr) {
  return new QList< QScroller * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_constEnd(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return new QList< QTableWidgetSelectionRange >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QTableWidgetItem * >::const_iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_constEnd(QList< QTableWidgetItem * > const * this_ptr) {
  return new QList< QTableWidgetItem * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QUndoStack * >::const_iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_constEnd(QList< QUndoStack * > const * this_ptr) {
  return new QList< QUndoStack * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QWizard::WizardButton >::const_iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_constEnd(QList< QWizard::WizardButton > const * this_ptr) {
  return new QList< QWizard::WizardButton >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_insert1(QList< QGesture * > * this_ptr, QList< QGesture * >::iterator const * before, QGesture * const * t) {
  return new QList< QGesture * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_insert1(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * >::iterator const * before, QTreeWidgetItem * const * t) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_insert1(QList< QAction * > * this_ptr, QList< QAction * >::iterator const * before, QAction * const * t) {
  return new QList< QAction * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_insert1(QList< QWidget * > * this_ptr, QList< QWidget * >::iterator const * before, QWidget * const * t) {
  return new QList< QWidget * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_insert1(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * >::iterator const * before, QGraphicsWidget * const * t) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_insert1(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * >::iterator const * before, QAbstractButton * const * t) {
  return new QList< QAbstractButton * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_insert1(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * >::iterator const * before, QGraphicsItem * const * t) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_insert1(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * >::iterator const * before, QGraphicsTransform * const * t) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_insert1(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > >::iterator const * before, QPair< double, QPointF > const * t) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_insert1(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > >::iterator const * before, QPair< double, double > const * t) {
  return new QList< QPair< double, double > >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_insert1(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * >::iterator const * before, QGraphicsView * const * t) {
  return new QList< QGraphicsView * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_insert1(QList< QRectF > * this_ptr, QList< QRectF >::iterator const * before, QRectF const * t) {
  return new QList< QRectF >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_insert1(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * >::iterator const * before, QListWidgetItem * const * t) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_insert1(QList< QDockWidget * > * this_ptr, QList< QDockWidget * >::iterator const * before, QDockWidget * const * t) {
  return new QList< QDockWidget * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_insert1(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * >::iterator const * before, QMdiSubWindow * const * t) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_insert1(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * before, QTextEdit::ExtraSelection const * t) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_insert1(QList< QScroller * > * this_ptr, QList< QScroller * >::iterator const * before, QScroller * const * t) {
  return new QList< QScroller * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_insert1(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * before, QTableWidgetSelectionRange const * t) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_insert1(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * >::iterator const * before, QTableWidgetItem * const * t) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_insert1(QList< QUndoStack * > * this_ptr, QList< QUndoStack * >::iterator const * before, QUndoStack * const * t) {
  return new QList< QUndoStack * >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_insert1(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton >::iterator const * before, QWizard::WizardButton const * t) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->insert(*before, *t));
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_erase(QList< QGesture * > * this_ptr, QList< QGesture * >::iterator const * pos) {
  return new QList< QGesture * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_erase(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * >::iterator const * pos) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_erase(QList< QAction * > * this_ptr, QList< QAction * >::iterator const * pos) {
  return new QList< QAction * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_erase(QList< QWidget * > * this_ptr, QList< QWidget * >::iterator const * pos) {
  return new QList< QWidget * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_erase(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * >::iterator const * pos) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_erase(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * >::iterator const * pos) {
  return new QList< QAbstractButton * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_erase(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * >::iterator const * pos) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_erase(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * >::iterator const * pos) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_erase(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > >::iterator const * pos) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_erase(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > >::iterator const * pos) {
  return new QList< QPair< double, double > >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_erase(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * >::iterator const * pos) {
  return new QList< QGraphicsView * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_erase(QList< QRectF > * this_ptr, QList< QRectF >::iterator const * pos) {
  return new QList< QRectF >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_erase(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * >::iterator const * pos) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_erase(QList< QDockWidget * > * this_ptr, QList< QDockWidget * >::iterator const * pos) {
  return new QList< QDockWidget * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_erase(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * >::iterator const * pos) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_erase(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * pos) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_erase(QList< QScroller * > * this_ptr, QList< QScroller * >::iterator const * pos) {
  return new QList< QScroller * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_erase(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * pos) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_erase(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * >::iterator const * pos) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_erase(QList< QUndoStack * > * this_ptr, QList< QUndoStack * >::iterator const * pos) {
  return new QList< QUndoStack * >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_erase(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton >::iterator const * pos) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->erase(*pos));
}


RITUAL_EXPORT QList< QGesture * >::iterator * ctr_qt_widgets_ffi_QList_QGesture_ptr_erase1(QList< QGesture * > * this_ptr, QList< QGesture * >::iterator const * first, QList< QGesture * >::iterator const * last) {
  return new QList< QGesture * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_erase1(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * >::iterator const * first, QList< QTreeWidgetItem * >::iterator const * last) {
  return new QList< QTreeWidgetItem * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QAction * >::iterator * ctr_qt_widgets_ffi_QList_QAction_ptr_erase1(QList< QAction * > * this_ptr, QList< QAction * >::iterator const * first, QList< QAction * >::iterator const * last) {
  return new QList< QAction * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QWidget * >::iterator * ctr_qt_widgets_ffi_QList_QWidget_ptr_erase1(QList< QWidget * > * this_ptr, QList< QWidget * >::iterator const * first, QList< QWidget * >::iterator const * last) {
  return new QList< QWidget * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QGraphicsWidget * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_erase1(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * >::iterator const * first, QList< QGraphicsWidget * >::iterator const * last) {
  return new QList< QGraphicsWidget * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QAbstractButton * >::iterator * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_erase1(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * >::iterator const * first, QList< QAbstractButton * >::iterator const * last) {
  return new QList< QAbstractButton * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QGraphicsItem * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_erase1(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * >::iterator const * first, QList< QGraphicsItem * >::iterator const * last) {
  return new QList< QGraphicsItem * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QGraphicsTransform * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_erase1(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * >::iterator const * first, QList< QGraphicsTransform * >::iterator const * last) {
  return new QList< QGraphicsTransform * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_erase1(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > >::iterator const * first, QList< QPair< double, QPointF > >::iterator const * last) {
  return new QList< QPair< double, QPointF > >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QPair< double, double > >::iterator * ctr_qt_widgets_ffi_QList_QPair_double_double_erase1(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > >::iterator const * first, QList< QPair< double, double > >::iterator const * last) {
  return new QList< QPair< double, double > >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QGraphicsView * >::iterator * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_erase1(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * >::iterator const * first, QList< QGraphicsView * >::iterator const * last) {
  return new QList< QGraphicsView * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QRectF >::iterator * ctr_qt_widgets_ffi_QList_QRectF_erase1(QList< QRectF > * this_ptr, QList< QRectF >::iterator const * first, QList< QRectF >::iterator const * last) {
  return new QList< QRectF >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QListWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_erase1(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * >::iterator const * first, QList< QListWidgetItem * >::iterator const * last) {
  return new QList< QListWidgetItem * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QDockWidget * >::iterator * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_erase1(QList< QDockWidget * > * this_ptr, QList< QDockWidget * >::iterator const * first, QList< QDockWidget * >::iterator const * last) {
  return new QList< QDockWidget * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QMdiSubWindow * >::iterator * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_erase1(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * >::iterator const * first, QList< QMdiSubWindow * >::iterator const * last) {
  return new QList< QMdiSubWindow * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::iterator * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_erase1(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection >::iterator const * first, QList< QTextEdit::ExtraSelection >::iterator const * last) {
  return new QList< QTextEdit::ExtraSelection >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QScroller * >::iterator * ctr_qt_widgets_ffi_QList_QScroller_ptr_erase1(QList< QScroller * > * this_ptr, QList< QScroller * >::iterator const * first, QList< QScroller * >::iterator const * last) {
  return new QList< QScroller * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_erase1(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange >::iterator const * first, QList< QTableWidgetSelectionRange >::iterator const * last) {
  return new QList< QTableWidgetSelectionRange >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QTableWidgetItem * >::iterator * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_erase1(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * >::iterator const * first, QList< QTableWidgetItem * >::iterator const * last) {
  return new QList< QTableWidgetItem * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QUndoStack * >::iterator * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_erase1(QList< QUndoStack * > * this_ptr, QList< QUndoStack * >::iterator const * first, QList< QUndoStack * >::iterator const * last) {
  return new QList< QUndoStack * >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT QList< QWizard::WizardButton >::iterator * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_erase1(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton >::iterator const * first, QList< QWizard::WizardButton >::iterator const * last) {
  return new QList< QWizard::WizardButton >::iterator(this_ptr->erase(*first, *last));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_count1(QList< QGesture * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_count1(QList< QTreeWidgetItem * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_count1(QList< QAction * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_count1(QList< QWidget * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_count1(QList< QGraphicsWidget * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_count1(QList< QAbstractButton * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_count1(QList< QGraphicsItem * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_count1(QList< QGraphicsTransform * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_count1(QList< QPair< double, QPointF > > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_count1(QList< QPair< double, double > > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_count1(QList< QGraphicsView * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_count1(QList< QRectF > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_count1(QList< QListWidgetItem * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_count1(QList< QDockWidget * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_count1(QList< QMdiSubWindow * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_count1(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_count1(QList< QScroller * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_count1(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_count1(QList< QTableWidgetItem * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_count1(QList< QUndoStack * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_count1(QList< QWizard::WizardButton > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_length(QList< QGesture * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_length(QList< QTreeWidgetItem * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_length(QList< QAction * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_length(QList< QWidget * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_length(QList< QGraphicsWidget * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_length(QList< QAbstractButton * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_length(QList< QGraphicsItem * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_length(QList< QGraphicsTransform * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_length(QList< QPair< double, QPointF > > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_length(QList< QPair< double, double > > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_length(QList< QGraphicsView * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_length(QList< QRectF > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_length(QList< QListWidgetItem * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_length(QList< QDockWidget * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_length(QList< QMdiSubWindow * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_length(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_length(QList< QScroller * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_length(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_length(QList< QTableWidgetItem * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_length(QList< QUndoStack * > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_length(QList< QWizard::WizardButton > const * this_ptr) {
  return this_ptr->length();
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_first(QList< QGesture * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_first(QList< QTreeWidgetItem * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_first(QList< QAction * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_first(QList< QWidget * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_first(QList< QGraphicsWidget * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_first(QList< QAbstractButton * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_first(QList< QGraphicsItem * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_first(QList< QGraphicsTransform * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_first(QList< QPair< double, QPointF > > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_first(QList< QPair< double, double > > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_first(QList< QGraphicsView * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_first(QList< QRectF > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_first(QList< QListWidgetItem * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_first(QList< QDockWidget * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_first(QList< QMdiSubWindow * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_first(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_first(QList< QScroller * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_first(QList< QTableWidgetSelectionRange > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_first(QList< QTableWidgetItem * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_first(QList< QUndoStack * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_first(QList< QWizard::WizardButton > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_constFirst(QList< QGesture * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_constFirst(QList< QTreeWidgetItem * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_constFirst(QList< QAction * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_constFirst(QList< QWidget * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_constFirst(QList< QGraphicsWidget * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_constFirst(QList< QAbstractButton * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_constFirst(QList< QGraphicsItem * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_constFirst(QList< QGraphicsTransform * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_constFirst(QList< QPair< double, QPointF > > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_constFirst(QList< QPair< double, double > > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_constFirst(QList< QGraphicsView * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_constFirst(QList< QRectF > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_constFirst(QList< QListWidgetItem * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_constFirst(QList< QDockWidget * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_constFirst(QList< QMdiSubWindow * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_constFirst(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_constFirst(QList< QScroller * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_constFirst(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_constFirst(QList< QTableWidgetItem * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_constFirst(QList< QUndoStack * > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_constFirst(QList< QWizard::WizardButton > const * this_ptr) {
  return &this_ptr->constFirst();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_first1(QList< QGesture * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_first1(QList< QTreeWidgetItem * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_first1(QList< QAction * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_first1(QList< QWidget * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_first1(QList< QGraphicsWidget * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_first1(QList< QAbstractButton * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_first1(QList< QGraphicsItem * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_first1(QList< QGraphicsTransform * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_first1(QList< QPair< double, QPointF > > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_first1(QList< QPair< double, double > > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_first1(QList< QGraphicsView * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_first1(QList< QRectF > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_first1(QList< QListWidgetItem * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_first1(QList< QDockWidget * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_first1(QList< QMdiSubWindow * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_first1(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_first1(QList< QScroller * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_first1(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_first1(QList< QTableWidgetItem * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_first1(QList< QUndoStack * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_first1(QList< QWizard::WizardButton > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_last(QList< QGesture * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_last(QList< QTreeWidgetItem * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_last(QList< QAction * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_last(QList< QWidget * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_last(QList< QGraphicsWidget * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_last(QList< QAbstractButton * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_last(QList< QGraphicsItem * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_last(QList< QGraphicsTransform * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_last(QList< QPair< double, QPointF > > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_last(QList< QPair< double, double > > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_last(QList< QGraphicsView * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_last(QList< QRectF > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_last(QList< QListWidgetItem * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_last(QList< QDockWidget * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_last(QList< QMdiSubWindow * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_last(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_last(QList< QScroller * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_last(QList< QTableWidgetSelectionRange > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_last(QList< QTableWidgetItem * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_last(QList< QUndoStack * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_last(QList< QWizard::WizardButton > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_last1(QList< QGesture * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_last1(QList< QTreeWidgetItem * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_last1(QList< QAction * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_last1(QList< QWidget * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_last1(QList< QGraphicsWidget * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_last1(QList< QAbstractButton * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_last1(QList< QGraphicsItem * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_last1(QList< QGraphicsTransform * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_last1(QList< QPair< double, QPointF > > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_last1(QList< QPair< double, double > > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_last1(QList< QGraphicsView * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_last1(QList< QRectF > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_last1(QList< QListWidgetItem * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_last1(QList< QDockWidget * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_last1(QList< QMdiSubWindow * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_last1(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_last1(QList< QScroller * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_last1(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_last1(QList< QTableWidgetItem * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_last1(QList< QUndoStack * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_last1(QList< QWizard::WizardButton > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_constLast(QList< QGesture * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_constLast(QList< QTreeWidgetItem * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_constLast(QList< QAction * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_constLast(QList< QWidget * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_constLast(QList< QGraphicsWidget * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_constLast(QList< QAbstractButton * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_constLast(QList< QGraphicsItem * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_constLast(QList< QGraphicsTransform * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_constLast(QList< QPair< double, QPointF > > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_constLast(QList< QPair< double, double > > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_constLast(QList< QGraphicsView * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_constLast(QList< QRectF > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_constLast(QList< QListWidgetItem * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_constLast(QList< QDockWidget * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_constLast(QList< QMdiSubWindow * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_constLast(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_constLast(QList< QScroller * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_constLast(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_constLast(QList< QTableWidgetItem * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_constLast(QList< QUndoStack * > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_constLast(QList< QWizard::WizardButton > const * this_ptr) {
  return &this_ptr->constLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_removeFirst(QList< QGesture * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_removeFirst(QList< QTreeWidgetItem * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_removeFirst(QList< QAction * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_removeFirst(QList< QWidget * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_removeFirst(QList< QGraphicsWidget * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_removeFirst(QList< QAbstractButton * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_removeFirst(QList< QGraphicsItem * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_removeFirst(QList< QGraphicsTransform * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_removeFirst(QList< QPair< double, QPointF > > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_removeFirst(QList< QPair< double, double > > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_removeFirst(QList< QGraphicsView * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_removeFirst(QList< QRectF > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_removeFirst(QList< QListWidgetItem * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_removeFirst(QList< QDockWidget * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_removeFirst(QList< QMdiSubWindow * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_removeFirst(QList< QTextEdit::ExtraSelection > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_removeFirst(QList< QScroller * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_removeFirst(QList< QTableWidgetSelectionRange > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_removeFirst(QList< QTableWidgetItem * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_removeFirst(QList< QUndoStack * > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_removeFirst(QList< QWizard::WizardButton > * this_ptr) {
  this_ptr->removeFirst();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_removeLast(QList< QGesture * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_removeLast(QList< QTreeWidgetItem * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_removeLast(QList< QAction * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_removeLast(QList< QWidget * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_removeLast(QList< QGraphicsWidget * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_removeLast(QList< QAbstractButton * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_removeLast(QList< QGraphicsItem * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_removeLast(QList< QGraphicsTransform * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_removeLast(QList< QPair< double, QPointF > > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_removeLast(QList< QPair< double, double > > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_removeLast(QList< QGraphicsView * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_removeLast(QList< QRectF > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_removeLast(QList< QListWidgetItem * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_removeLast(QList< QDockWidget * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_removeLast(QList< QMdiSubWindow * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_removeLast(QList< QTextEdit::ExtraSelection > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_removeLast(QList< QScroller * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_removeLast(QList< QTableWidgetSelectionRange > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_removeLast(QList< QTableWidgetItem * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_removeLast(QList< QUndoStack * > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_removeLast(QList< QWizard::WizardButton > * this_ptr) {
  this_ptr->removeLast();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_startsWith(QList< QGesture * > const * this_ptr, QGesture * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_startsWith(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_startsWith(QList< QAction * > const * this_ptr, QAction * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_startsWith(QList< QWidget * > const * this_ptr, QWidget * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_startsWith(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_startsWith(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_startsWith(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_startsWith(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_startsWith(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_startsWith(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_startsWith(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_startsWith(QList< QRectF > const * this_ptr, QRectF const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_startsWith(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_startsWith(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_startsWith(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_startsWith(QList< QScroller * > const * this_ptr, QScroller * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_startsWith(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_startsWith(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_startsWith(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->startsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_endsWith(QList< QGesture * > const * this_ptr, QGesture * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_endsWith(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_endsWith(QList< QAction * > const * this_ptr, QAction * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_endsWith(QList< QWidget * > const * this_ptr, QWidget * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_endsWith(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_endsWith(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_endsWith(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_endsWith(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_endsWith(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_endsWith(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_endsWith(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_endsWith(QList< QRectF > const * this_ptr, QRectF const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_endsWith(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_endsWith(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_endsWith(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_endsWith(QList< QScroller * > const * this_ptr, QScroller * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_endsWith(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_endsWith(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_endsWith(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->endsWith(*t);
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_mid(QList< QGesture * > const * this_ptr, int pos, int length) {
  return new QList< QGesture * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_mid(QList< QTreeWidgetItem * > const * this_ptr, int pos, int length) {
  return new QList< QTreeWidgetItem * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_mid(QList< QAction * > const * this_ptr, int pos, int length) {
  return new QList< QAction * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_mid(QList< QWidget * > const * this_ptr, int pos, int length) {
  return new QList< QWidget * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_mid(QList< QGraphicsWidget * > const * this_ptr, int pos, int length) {
  return new QList< QGraphicsWidget * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_mid(QList< QAbstractButton * > const * this_ptr, int pos, int length) {
  return new QList< QAbstractButton * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_mid(QList< QGraphicsItem * > const * this_ptr, int pos, int length) {
  return new QList< QGraphicsItem * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_mid(QList< QGraphicsTransform * > const * this_ptr, int pos, int length) {
  return new QList< QGraphicsTransform * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_mid(QList< QPair< double, QPointF > > const * this_ptr, int pos, int length) {
  return new QList< QPair< double, QPointF > >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_mid(QList< QPair< double, double > > const * this_ptr, int pos, int length) {
  return new QList< QPair< double, double > >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_mid(QList< QGraphicsView * > const * this_ptr, int pos, int length) {
  return new QList< QGraphicsView * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_mid(QList< QRectF > const * this_ptr, int pos, int length) {
  return new QList< QRectF >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_mid(QList< QListWidgetItem * > const * this_ptr, int pos, int length) {
  return new QList< QListWidgetItem * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_mid(QList< QDockWidget * > const * this_ptr, int pos, int length) {
  return new QList< QDockWidget * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_mid(QList< QMdiSubWindow * > const * this_ptr, int pos, int length) {
  return new QList< QMdiSubWindow * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_mid(QList< QTextEdit::ExtraSelection > const * this_ptr, int pos, int length) {
  return new QList< QTextEdit::ExtraSelection >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_mid(QList< QScroller * > const * this_ptr, int pos, int length) {
  return new QList< QScroller * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_mid(QList< QTableWidgetSelectionRange > const * this_ptr, int pos, int length) {
  return new QList< QTableWidgetSelectionRange >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_mid(QList< QTableWidgetItem * > const * this_ptr, int pos, int length) {
  return new QList< QTableWidgetItem * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_mid(QList< QUndoStack * > const * this_ptr, int pos, int length) {
  return new QList< QUndoStack * >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_mid(QList< QWizard::WizardButton > const * this_ptr, int pos, int length) {
  return new QList< QWizard::WizardButton >(this_ptr->mid(pos, length));
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QList_QGesture_ptr_value(QList< QGesture * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_value(QList< QTreeWidgetItem * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QList_QAction_ptr_value(QList< QAction * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QList_QWidget_ptr_value(QList< QWidget * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_value(QList< QGraphicsWidget * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_value(QList< QAbstractButton * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_value(QList< QGraphicsItem * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_value(QList< QGraphicsTransform * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_value(QList< QPair< double, QPointF > > const * this_ptr, int i) {
  return new QPair< double, QPointF >(this_ptr->value(i));
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_value(QList< QPair< double, double > > const * this_ptr, int i) {
  return new QPair< double, double >(this_ptr->value(i));
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_value(QList< QGraphicsView * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_value(QList< QRectF > const * this_ptr, int i) {
  return new QRectF(this_ptr->value(i));
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_value(QList< QListWidgetItem * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_value(QList< QDockWidget * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_value(QList< QMdiSubWindow * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_value(QList< QTextEdit::ExtraSelection > const * this_ptr, int i) {
  return new QTextEdit::ExtraSelection(this_ptr->value(i));
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_QList_QScroller_ptr_value(QList< QScroller * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_value(QList< QTableWidgetSelectionRange > const * this_ptr, int i) {
  return new QTableWidgetSelectionRange(this_ptr->value(i));
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_value(QList< QTableWidgetItem * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_value(QList< QUndoStack * > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QWizard::WizardButton ctr_qt_widgets_ffi_QList_QWizard_WizardButton_value(QList< QWizard::WizardButton > const * this_ptr, int i) {
  return this_ptr->value(i);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_QList_QGesture_ptr_value1(QList< QGesture * > const * this_ptr, int i, QGesture * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_value1(QList< QTreeWidgetItem * > const * this_ptr, int i, QTreeWidgetItem * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QList_QAction_ptr_value1(QList< QAction * > const * this_ptr, int i, QAction * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QList_QWidget_ptr_value1(QList< QWidget * > const * this_ptr, int i, QWidget * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_value1(QList< QGraphicsWidget * > const * this_ptr, int i, QGraphicsWidget * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_value1(QList< QAbstractButton * > const * this_ptr, int i, QAbstractButton * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_value1(QList< QGraphicsItem * > const * this_ptr, int i, QGraphicsItem * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_value1(QList< QGraphicsTransform * > const * this_ptr, int i, QGraphicsTransform * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_value1(QList< QPair< double, QPointF > > const * this_ptr, int i, QPair< double, QPointF > const * defaultValue) {
  return new QPair< double, QPointF >(this_ptr->value(i, *defaultValue));
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_value1(QList< QPair< double, double > > const * this_ptr, int i, QPair< double, double > const * defaultValue) {
  return new QPair< double, double >(this_ptr->value(i, *defaultValue));
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_value1(QList< QGraphicsView * > const * this_ptr, int i, QGraphicsView * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_value1(QList< QRectF > const * this_ptr, int i, QRectF const * defaultValue) {
  return new QRectF(this_ptr->value(i, *defaultValue));
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_value1(QList< QListWidgetItem * > const * this_ptr, int i, QListWidgetItem * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_value1(QList< QDockWidget * > const * this_ptr, int i, QDockWidget * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_value1(QList< QMdiSubWindow * > const * this_ptr, int i, QMdiSubWindow * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_value1(QList< QTextEdit::ExtraSelection > const * this_ptr, int i, QTextEdit::ExtraSelection const * defaultValue) {
  return new QTextEdit::ExtraSelection(this_ptr->value(i, *defaultValue));
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_QList_QScroller_ptr_value1(QList< QScroller * > const * this_ptr, int i, QScroller * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_value1(QList< QTableWidgetSelectionRange > const * this_ptr, int i, QTableWidgetSelectionRange const * defaultValue) {
  return new QTableWidgetSelectionRange(this_ptr->value(i, *defaultValue));
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_value1(QList< QTableWidgetItem * > const * this_ptr, int i, QTableWidgetItem * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_value1(QList< QUndoStack * > const * this_ptr, int i, QUndoStack * const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT QWizard::WizardButton ctr_qt_widgets_ffi_QList_QWizard_WizardButton_value1(QList< QWizard::WizardButton > const * this_ptr, int i, QWizard::WizardButton const * defaultValue) {
  return this_ptr->value(i, *defaultValue);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_push_back(QList< QGesture * > * this_ptr, QGesture * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_push_back(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_push_back(QList< QAction * > * this_ptr, QAction * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_push_back(QList< QWidget * > * this_ptr, QWidget * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_push_back(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_push_back(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_push_back(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_push_back(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_push_back(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_push_back(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_push_back(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_push_back(QList< QRectF > * this_ptr, QRectF const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_push_back(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_push_back(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_push_back(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_push_back(QList< QTextEdit::ExtraSelection > * this_ptr, QTextEdit::ExtraSelection const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_push_back(QList< QScroller * > * this_ptr, QScroller * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_push_back(QList< QTableWidgetSelectionRange > * this_ptr, QTableWidgetSelectionRange const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_push_back(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_push_back(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_push_back(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  this_ptr->push_back(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_push_front(QList< QGesture * > * this_ptr, QGesture * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_push_front(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_push_front(QList< QAction * > * this_ptr, QAction * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_push_front(QList< QWidget * > * this_ptr, QWidget * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_push_front(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_push_front(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_push_front(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_push_front(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_push_front(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_push_front(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_push_front(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_push_front(QList< QRectF > * this_ptr, QRectF const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_push_front(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_push_front(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_push_front(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_push_front(QList< QTextEdit::ExtraSelection > * this_ptr, QTextEdit::ExtraSelection const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_push_front(QList< QScroller * > * this_ptr, QScroller * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_push_front(QList< QTableWidgetSelectionRange > * this_ptr, QTableWidgetSelectionRange const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_push_front(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_push_front(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_push_front(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  this_ptr->push_front(*t);
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_front(QList< QGesture * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_front(QList< QTreeWidgetItem * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_front(QList< QAction * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_front(QList< QWidget * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_front(QList< QGraphicsWidget * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_front(QList< QAbstractButton * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_front(QList< QGraphicsItem * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_front(QList< QGraphicsTransform * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_front(QList< QPair< double, QPointF > > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_front(QList< QPair< double, double > > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_front(QList< QGraphicsView * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_front(QList< QRectF > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_front(QList< QListWidgetItem * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_front(QList< QDockWidget * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_front(QList< QMdiSubWindow * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_front(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_front(QList< QScroller * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_front(QList< QTableWidgetSelectionRange > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_front(QList< QTableWidgetItem * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_front(QList< QUndoStack * > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_front(QList< QWizard::WizardButton > * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_front1(QList< QGesture * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_front1(QList< QTreeWidgetItem * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_front1(QList< QAction * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_front1(QList< QWidget * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_front1(QList< QGraphicsWidget * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_front1(QList< QAbstractButton * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_front1(QList< QGraphicsItem * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_front1(QList< QGraphicsTransform * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_front1(QList< QPair< double, QPointF > > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_front1(QList< QPair< double, double > > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_front1(QList< QGraphicsView * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_front1(QList< QRectF > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_front1(QList< QListWidgetItem * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_front1(QList< QDockWidget * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_front1(QList< QMdiSubWindow * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_front1(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_front1(QList< QScroller * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_front1(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_front1(QList< QTableWidgetItem * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_front1(QList< QUndoStack * > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_front1(QList< QWizard::WizardButton > const * this_ptr) {
  return &this_ptr->front();
}


RITUAL_EXPORT QGesture * * ctr_qt_widgets_ffi_QList_QGesture_ptr_back(QList< QGesture * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTreeWidgetItem * * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_back(QList< QTreeWidgetItem * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QAction * * ctr_qt_widgets_ffi_QList_QAction_ptr_back(QList< QAction * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QList_QWidget_ptr_back(QList< QWidget * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsWidget * * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_back(QList< QGraphicsWidget * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QAbstractButton * * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_back(QList< QAbstractButton * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsItem * * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_back(QList< QGraphicsItem * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsTransform * * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_back(QList< QGraphicsTransform * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_back(QList< QPair< double, QPointF > > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QList_QPair_double_double_back(QList< QPair< double, double > > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsView * * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_back(QList< QGraphicsView * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QRectF * ctr_qt_widgets_ffi_QList_QRectF_back(QList< QRectF > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QListWidgetItem * * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_back(QList< QListWidgetItem * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QDockWidget * * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_back(QList< QDockWidget * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QMdiSubWindow * * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_back(QList< QMdiSubWindow * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTextEdit::ExtraSelection * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_back(QList< QTextEdit::ExtraSelection > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QScroller * * ctr_qt_widgets_ffi_QList_QScroller_ptr_back(QList< QScroller * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTableWidgetSelectionRange * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_back(QList< QTableWidgetSelectionRange > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTableWidgetItem * * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_back(QList< QTableWidgetItem * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QUndoStack * * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_back(QList< QUndoStack * > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QWizard::WizardButton * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_back(QList< QWizard::WizardButton > * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGesture * const * ctr_qt_widgets_ffi_QList_QGesture_ptr_back1(QList< QGesture * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTreeWidgetItem * const * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_back1(QList< QTreeWidgetItem * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QAction * const * ctr_qt_widgets_ffi_QList_QAction_ptr_back1(QList< QAction * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QList_QWidget_ptr_back1(QList< QWidget * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsWidget * const * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_back1(QList< QGraphicsWidget * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QAbstractButton * const * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_back1(QList< QAbstractButton * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsItem * const * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_back1(QList< QGraphicsItem * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsTransform * const * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_back1(QList< QGraphicsTransform * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QPair< double, QPointF > const * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_back1(QList< QPair< double, QPointF > > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QPair< double, double > const * ctr_qt_widgets_ffi_QList_QPair_double_double_back1(QList< QPair< double, double > > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QGraphicsView * const * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_back1(QList< QGraphicsView * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QRectF const * ctr_qt_widgets_ffi_QList_QRectF_back1(QList< QRectF > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QListWidgetItem * const * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_back1(QList< QListWidgetItem * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QDockWidget * const * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_back1(QList< QDockWidget * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QMdiSubWindow * const * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_back1(QList< QMdiSubWindow * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTextEdit::ExtraSelection const * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_back1(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QScroller * const * ctr_qt_widgets_ffi_QList_QScroller_ptr_back1(QList< QScroller * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTableWidgetSelectionRange const * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_back1(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QTableWidgetItem * const * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_back1(QList< QTableWidgetItem * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QUndoStack * const * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_back1(QList< QUndoStack * > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT QWizard::WizardButton const * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_back1(QList< QWizard::WizardButton > const * this_ptr) {
  return &this_ptr->back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_pop_front(QList< QGesture * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_pop_front(QList< QTreeWidgetItem * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_pop_front(QList< QAction * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_pop_front(QList< QWidget * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_pop_front(QList< QGraphicsWidget * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_pop_front(QList< QAbstractButton * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_pop_front(QList< QGraphicsItem * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_pop_front(QList< QGraphicsTransform * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_pop_front(QList< QPair< double, QPointF > > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_pop_front(QList< QPair< double, double > > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_pop_front(QList< QGraphicsView * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_pop_front(QList< QRectF > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_pop_front(QList< QListWidgetItem * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_pop_front(QList< QDockWidget * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_pop_front(QList< QMdiSubWindow * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_pop_front(QList< QTextEdit::ExtraSelection > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_pop_front(QList< QScroller * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_pop_front(QList< QTableWidgetSelectionRange > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_pop_front(QList< QTableWidgetItem * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_pop_front(QList< QUndoStack * > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_pop_front(QList< QWizard::WizardButton > * this_ptr) {
  this_ptr->pop_front();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_pop_back(QList< QGesture * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_pop_back(QList< QTreeWidgetItem * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_pop_back(QList< QAction * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_pop_back(QList< QWidget * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_pop_back(QList< QGraphicsWidget * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_pop_back(QList< QAbstractButton * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_pop_back(QList< QGraphicsItem * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_pop_back(QList< QGraphicsTransform * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_pop_back(QList< QPair< double, QPointF > > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_pop_back(QList< QPair< double, double > > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_pop_back(QList< QGraphicsView * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_pop_back(QList< QRectF > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_pop_back(QList< QListWidgetItem * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_pop_back(QList< QDockWidget * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_pop_back(QList< QMdiSubWindow * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_pop_back(QList< QTextEdit::ExtraSelection > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_pop_back(QList< QScroller * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_pop_back(QList< QTableWidgetSelectionRange > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_pop_back(QList< QTableWidgetItem * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_pop_back(QList< QUndoStack * > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_pop_back(QList< QWizard::WizardButton > * this_ptr) {
  this_ptr->pop_back();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGesture_ptr_empty(QList< QGesture * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_empty(QList< QTreeWidgetItem * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAction_ptr_empty(QList< QAction * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWidget_ptr_empty(QList< QWidget * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_empty(QList< QGraphicsWidget * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_empty(QList< QAbstractButton * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_empty(QList< QGraphicsItem * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_empty(QList< QGraphicsTransform * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_QPointF_empty(QList< QPair< double, QPointF > > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QPair_double_double_empty(QList< QPair< double, double > > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_empty(QList< QGraphicsView * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QRectF_empty(QList< QRectF > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_empty(QList< QListWidgetItem * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QDockWidget_ptr_empty(QList< QDockWidget * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_empty(QList< QMdiSubWindow * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_empty(QList< QTextEdit::ExtraSelection > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QScroller_ptr_empty(QList< QScroller * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_empty(QList< QTableWidgetSelectionRange > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_empty(QList< QTableWidgetItem * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QUndoStack_ptr_empty(QList< QUndoStack * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QList_QWizard_WizardButton_empty(QList< QWizard::WizardButton > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator__4(QList< QGesture * > * this_ptr, QList< QGesture * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator__4(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_operator__4(QList< QAction * > * this_ptr, QList< QAction * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator__4(QList< QWidget * > * this_ptr, QList< QWidget * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator__4(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator__4(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator__4(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator__4(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator__4(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_operator__4(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator__4(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_operator__4(QList< QRectF > * this_ptr, QList< QRectF > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator__4(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator__4(QList< QDockWidget * > * this_ptr, QList< QDockWidget * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator__4(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator__4(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator__4(QList< QScroller * > * this_ptr, QList< QScroller * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator__4(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator__4(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator__4(QList< QUndoStack * > * this_ptr, QList< QUndoStack * > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator__4(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton > const * l) {
  return &this_ptr->operator+=(*l);
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator_2(QList< QGesture * > const * this_ptr, QList< QGesture * > const * l) {
  return new QList< QGesture * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator_2(QList< QTreeWidgetItem * > const * this_ptr, QList< QTreeWidgetItem * > const * l) {
  return new QList< QTreeWidgetItem * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_operator_2(QList< QAction * > const * this_ptr, QList< QAction * > const * l) {
  return new QList< QAction * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator_2(QList< QWidget * > const * this_ptr, QList< QWidget * > const * l) {
  return new QList< QWidget * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator_2(QList< QGraphicsWidget * > const * this_ptr, QList< QGraphicsWidget * > const * l) {
  return new QList< QGraphicsWidget * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator_2(QList< QAbstractButton * > const * this_ptr, QList< QAbstractButton * > const * l) {
  return new QList< QAbstractButton * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator_2(QList< QGraphicsItem * > const * this_ptr, QList< QGraphicsItem * > const * l) {
  return new QList< QGraphicsItem * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator_2(QList< QGraphicsTransform * > const * this_ptr, QList< QGraphicsTransform * > const * l) {
  return new QList< QGraphicsTransform * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator_2(QList< QPair< double, QPointF > > const * this_ptr, QList< QPair< double, QPointF > > const * l) {
  return new QList< QPair< double, QPointF > >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_operator_2(QList< QPair< double, double > > const * this_ptr, QList< QPair< double, double > > const * l) {
  return new QList< QPair< double, double > >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator_2(QList< QGraphicsView * > const * this_ptr, QList< QGraphicsView * > const * l) {
  return new QList< QGraphicsView * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_operator_2(QList< QRectF > const * this_ptr, QList< QRectF > const * l) {
  return new QList< QRectF >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator_2(QList< QListWidgetItem * > const * this_ptr, QList< QListWidgetItem * > const * l) {
  return new QList< QListWidgetItem * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator_2(QList< QDockWidget * > const * this_ptr, QList< QDockWidget * > const * l) {
  return new QList< QDockWidget * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator_2(QList< QMdiSubWindow * > const * this_ptr, QList< QMdiSubWindow * > const * l) {
  return new QList< QMdiSubWindow * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator_2(QList< QTextEdit::ExtraSelection > const * this_ptr, QList< QTextEdit::ExtraSelection > const * l) {
  return new QList< QTextEdit::ExtraSelection >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator_2(QList< QScroller * > const * this_ptr, QList< QScroller * > const * l) {
  return new QList< QScroller * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator_2(QList< QTableWidgetSelectionRange > const * this_ptr, QList< QTableWidgetSelectionRange > const * l) {
  return new QList< QTableWidgetSelectionRange >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator_2(QList< QTableWidgetItem * > const * this_ptr, QList< QTableWidgetItem * > const * l) {
  return new QList< QTableWidgetItem * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator_2(QList< QUndoStack * > const * this_ptr, QList< QUndoStack * > const * l) {
  return new QList< QUndoStack * >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator_2(QList< QWizard::WizardButton > const * this_ptr, QList< QWizard::WizardButton > const * l) {
  return new QList< QWizard::WizardButton >(this_ptr->operator+(*l));
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator__5(QList< QGesture * > * this_ptr, QGesture * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator__5(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_operator__5(QList< QAction * > * this_ptr, QAction * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator__5(QList< QWidget * > * this_ptr, QWidget * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator__5(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator__5(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator__5(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator__5(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator__5(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_operator__5(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator__5(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_operator__5(QList< QRectF > * this_ptr, QRectF const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator__5(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator__5(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator__5(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator__5(QList< QTextEdit::ExtraSelection > * this_ptr, QTextEdit::ExtraSelection const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator__5(QList< QScroller * > * this_ptr, QScroller * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator__5(QList< QTableWidgetSelectionRange > * this_ptr, QTableWidgetSelectionRange const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator__5(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator__5(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator__5(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  return &this_ptr->operator+=(*t);
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator__6(QList< QGesture * > * this_ptr, QGesture * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator__6(QList< QTreeWidgetItem * > * this_ptr, QTreeWidgetItem * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_operator__6(QList< QAction * > * this_ptr, QAction * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator__6(QList< QWidget * > * this_ptr, QWidget * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator__6(QList< QGraphicsWidget * > * this_ptr, QGraphicsWidget * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator__6(QList< QAbstractButton * > * this_ptr, QAbstractButton * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator__6(QList< QGraphicsItem * > * this_ptr, QGraphicsItem * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator__6(QList< QGraphicsTransform * > * this_ptr, QGraphicsTransform * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator__6(QList< QPair< double, QPointF > > * this_ptr, QPair< double, QPointF > const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_operator__6(QList< QPair< double, double > > * this_ptr, QPair< double, double > const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator__6(QList< QGraphicsView * > * this_ptr, QGraphicsView * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_operator__6(QList< QRectF > * this_ptr, QRectF const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator__6(QList< QListWidgetItem * > * this_ptr, QListWidgetItem * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator__6(QList< QDockWidget * > * this_ptr, QDockWidget * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator__6(QList< QMdiSubWindow * > * this_ptr, QMdiSubWindow * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator__6(QList< QTextEdit::ExtraSelection > * this_ptr, QTextEdit::ExtraSelection const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator__6(QList< QScroller * > * this_ptr, QScroller * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator__6(QList< QTableWidgetSelectionRange > * this_ptr, QTableWidgetSelectionRange const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator__6(QList< QTableWidgetItem * > * this_ptr, QTableWidgetItem * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator__6(QList< QUndoStack * > * this_ptr, QUndoStack * const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator__6(QList< QWizard::WizardButton > * this_ptr, QWizard::WizardButton const * t) {
  return &this_ptr->operator<<(*t);
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_operator__7(QList< QGesture * > * this_ptr, QList< QGesture * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_operator__7(QList< QTreeWidgetItem * > * this_ptr, QList< QTreeWidgetItem * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_operator__7(QList< QAction * > * this_ptr, QList< QAction * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_operator__7(QList< QWidget * > * this_ptr, QList< QWidget * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_operator__7(QList< QGraphicsWidget * > * this_ptr, QList< QGraphicsWidget * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_operator__7(QList< QAbstractButton * > * this_ptr, QList< QAbstractButton * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_operator__7(QList< QGraphicsItem * > * this_ptr, QList< QGraphicsItem * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_operator__7(QList< QGraphicsTransform * > * this_ptr, QList< QGraphicsTransform * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_operator__7(QList< QPair< double, QPointF > > * this_ptr, QList< QPair< double, QPointF > > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_operator__7(QList< QPair< double, double > > * this_ptr, QList< QPair< double, double > > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_operator__7(QList< QGraphicsView * > * this_ptr, QList< QGraphicsView * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_operator__7(QList< QRectF > * this_ptr, QList< QRectF > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_operator__7(QList< QListWidgetItem * > * this_ptr, QList< QListWidgetItem * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_operator__7(QList< QDockWidget * > * this_ptr, QList< QDockWidget * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_operator__7(QList< QMdiSubWindow * > * this_ptr, QList< QMdiSubWindow * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_operator__7(QList< QTextEdit::ExtraSelection > * this_ptr, QList< QTextEdit::ExtraSelection > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_operator__7(QList< QScroller * > * this_ptr, QList< QScroller * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_operator__7(QList< QTableWidgetSelectionRange > * this_ptr, QList< QTableWidgetSelectionRange > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_operator__7(QList< QTableWidgetItem * > * this_ptr, QList< QTableWidgetItem * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_operator__7(QList< QUndoStack * > * this_ptr, QList< QUndoStack * > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_operator__7(QList< QWizard::WizardButton > * this_ptr, QList< QWizard::WizardButton > const * l) {
  return &this_ptr->operator<<(*l);
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_fromVector(QVector< QRectF > const * vector) {
  return new QList< QRectF >(QList< QRectF >::fromVector(*vector));
}


RITUAL_EXPORT QVector< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_toVector(QList< QRectF > const * this_ptr) {
  return new QVector< QRectF >(this_ptr->toVector());
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash5(QList< QGesture * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash6(QList< QTreeWidgetItem * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash7(QList< QAction * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash8(QList< QWidget * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash9(QList< QGraphicsWidget * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash10(QList< QAbstractButton * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash11(QList< QGraphicsItem * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash12(QList< QGraphicsTransform * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash14(QList< QPair< double, double > > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash15(QList< QGraphicsView * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash17(QList< QListWidgetItem * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash18(QList< QDockWidget * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash19(QList< QMdiSubWindow * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash21(QList< QScroller * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash23(QList< QTableWidgetItem * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash24(QList< QUndoStack * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash25(QList< QWizard::WizardButton > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_45(QList< QGesture * > const * lhs, QList< QGesture * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_46(QList< QTreeWidgetItem * > const * lhs, QList< QTreeWidgetItem * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_47(QList< QAction * > const * lhs, QList< QAction * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_48(QList< QWidget * > const * lhs, QList< QWidget * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_49(QList< QGraphicsWidget * > const * lhs, QList< QGraphicsWidget * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_50(QList< QAbstractButton * > const * lhs, QList< QAbstractButton * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_51(QList< QGraphicsItem * > const * lhs, QList< QGraphicsItem * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_52(QList< QGraphicsTransform * > const * lhs, QList< QGraphicsTransform * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_54(QList< QPair< double, double > > const * lhs, QList< QPair< double, double > > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_55(QList< QGraphicsView * > const * lhs, QList< QGraphicsView * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_57(QList< QListWidgetItem * > const * lhs, QList< QListWidgetItem * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_58(QList< QDockWidget * > const * lhs, QList< QDockWidget * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_59(QList< QMdiSubWindow * > const * lhs, QList< QMdiSubWindow * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_61(QList< QScroller * > const * lhs, QList< QScroller * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_63(QList< QTableWidgetItem * > const * lhs, QList< QTableWidgetItem * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_64(QList< QUndoStack * > const * lhs, QList< QUndoStack * > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_65(QList< QWizard::WizardButton > const * lhs, QList< QWizard::WizardButton > const * rhs) {
  return operator<(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_66(QList< QGesture * > const * lhs, QList< QGesture * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_67(QList< QTreeWidgetItem * > const * lhs, QList< QTreeWidgetItem * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_68(QList< QAction * > const * lhs, QList< QAction * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_69(QList< QWidget * > const * lhs, QList< QWidget * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_70(QList< QGraphicsWidget * > const * lhs, QList< QGraphicsWidget * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_71(QList< QAbstractButton * > const * lhs, QList< QAbstractButton * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_72(QList< QGraphicsItem * > const * lhs, QList< QGraphicsItem * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_73(QList< QGraphicsTransform * > const * lhs, QList< QGraphicsTransform * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_75(QList< QPair< double, double > > const * lhs, QList< QPair< double, double > > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_76(QList< QGraphicsView * > const * lhs, QList< QGraphicsView * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_78(QList< QListWidgetItem * > const * lhs, QList< QListWidgetItem * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_79(QList< QDockWidget * > const * lhs, QList< QDockWidget * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_80(QList< QMdiSubWindow * > const * lhs, QList< QMdiSubWindow * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_82(QList< QScroller * > const * lhs, QList< QScroller * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_84(QList< QTableWidgetItem * > const * lhs, QList< QTableWidgetItem * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_85(QList< QUndoStack * > const * lhs, QList< QUndoStack * > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator_86(QList< QWizard::WizardButton > const * lhs, QList< QWizard::WizardButton > const * rhs) {
  return operator>(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__34(QList< QGesture * > const * lhs, QList< QGesture * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__35(QList< QTreeWidgetItem * > const * lhs, QList< QTreeWidgetItem * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__36(QList< QAction * > const * lhs, QList< QAction * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__37(QList< QWidget * > const * lhs, QList< QWidget * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__38(QList< QGraphicsWidget * > const * lhs, QList< QGraphicsWidget * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__39(QList< QAbstractButton * > const * lhs, QList< QAbstractButton * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__40(QList< QGraphicsItem * > const * lhs, QList< QGraphicsItem * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__41(QList< QGraphicsTransform * > const * lhs, QList< QGraphicsTransform * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__43(QList< QPair< double, double > > const * lhs, QList< QPair< double, double > > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__44(QList< QGraphicsView * > const * lhs, QList< QGraphicsView * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__46(QList< QListWidgetItem * > const * lhs, QList< QListWidgetItem * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__47(QList< QDockWidget * > const * lhs, QList< QDockWidget * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__48(QList< QMdiSubWindow * > const * lhs, QList< QMdiSubWindow * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__50(QList< QScroller * > const * lhs, QList< QScroller * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__52(QList< QTableWidgetItem * > const * lhs, QList< QTableWidgetItem * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__53(QList< QUndoStack * > const * lhs, QList< QUndoStack * > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__54(QList< QWizard::WizardButton > const * lhs, QList< QWizard::WizardButton > const * rhs) {
  return operator<=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__55(QList< QGesture * > const * lhs, QList< QGesture * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__56(QList< QTreeWidgetItem * > const * lhs, QList< QTreeWidgetItem * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__57(QList< QAction * > const * lhs, QList< QAction * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__58(QList< QWidget * > const * lhs, QList< QWidget * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__59(QList< QGraphicsWidget * > const * lhs, QList< QGraphicsWidget * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__60(QList< QAbstractButton * > const * lhs, QList< QAbstractButton * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__61(QList< QGraphicsItem * > const * lhs, QList< QGraphicsItem * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__62(QList< QGraphicsTransform * > const * lhs, QList< QGraphicsTransform * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__64(QList< QPair< double, double > > const * lhs, QList< QPair< double, double > > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__65(QList< QGraphicsView * > const * lhs, QList< QGraphicsView * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__67(QList< QListWidgetItem * > const * lhs, QList< QListWidgetItem * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__68(QList< QDockWidget * > const * lhs, QList< QDockWidget * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__69(QList< QMdiSubWindow * > const * lhs, QList< QMdiSubWindow * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__71(QList< QScroller * > const * lhs, QList< QScroller * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__73(QList< QTableWidgetItem * > const * lhs, QList< QTableWidgetItem * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__74(QList< QUndoStack * > const * lhs, QList< QUndoStack * > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_operator__75(QList< QWizard::WizardButton > const * lhs, QList< QWizard::WizardButton > const * rhs) {
  return operator>=(*lhs, *rhs);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_QMap() {
  return new QMap< Qt::GestureType, bool >();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_QMap() {
  return new QMap< Qt::GestureType, QWidget * >();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat > * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_QMap() {
  return new QMap< QDate, QTextCharFormat >();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_QMap1(QMap< Qt::GestureType, bool > const * other) {
  return new QMap< Qt::GestureType, bool >(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_QMap1(QMap< Qt::GestureType, QWidget * > const * other) {
  return new QMap< Qt::GestureType, QWidget * >(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat > * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_QMap1(QMap< QDate, QTextCharFormat > const * other) {
  return new QMap< QDate, QTextCharFormat >(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_dQMap(QMap< Qt::GestureType, bool > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_dQMap(QMap< Qt::GestureType, QWidget * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_dQMap(QMap< QDate, QTextCharFormat > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMap< Qt::GestureType, bool > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_operator_(QMap< Qt::GestureType, bool > * this_ptr, QMap< Qt::GestureType, bool > const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_operator_(QMap< Qt::GestureType, QWidget * > * this_ptr, QMap< Qt::GestureType, QWidget * > const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat > * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_operator_(QMap< QDate, QTextCharFormat > * this_ptr, QMap< QDate, QTextCharFormat > const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_swap(QMap< Qt::GestureType, bool > * this_ptr, QMap< Qt::GestureType, bool > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_swap(QMap< Qt::GestureType, QWidget * > * this_ptr, QMap< Qt::GestureType, QWidget * > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_swap(QMap< QDate, QTextCharFormat > * this_ptr, QMap< QDate, QTextCharFormat > * other) {
  this_ptr->swap(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_operator__(QMap< Qt::GestureType, bool > const * this_ptr, QMap< Qt::GestureType, bool > const * other) {
  return this_ptr->operator==(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_operator__(QMap< Qt::GestureType, QWidget * > const * this_ptr, QMap< Qt::GestureType, QWidget * > const * other) {
  return this_ptr->operator==(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_operator__(QMap< QDate, QTextCharFormat > const * this_ptr, QMap< QDate, QTextCharFormat > const * other) {
  return this_ptr->operator==(*other);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_size(QMap< Qt::GestureType, bool > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_size(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_size(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_isEmpty(QMap< Qt::GestureType, bool > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_isEmpty(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_isEmpty(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_detach(QMap< Qt::GestureType, bool > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_detach(QMap< Qt::GestureType, QWidget * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_detach(QMap< QDate, QTextCharFormat > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_isDetached(QMap< Qt::GestureType, bool > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_isDetached(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_isDetached(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_setSharable(QMap< Qt::GestureType, bool > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_setSharable(QMap< Qt::GestureType, QWidget * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_setSharable(QMap< QDate, QTextCharFormat > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_isSharedWith(QMap< Qt::GestureType, bool > const * this_ptr, QMap< Qt::GestureType, bool > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_isSharedWith(QMap< Qt::GestureType, QWidget * > const * this_ptr, QMap< Qt::GestureType, QWidget * > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_isSharedWith(QMap< QDate, QTextCharFormat > const * this_ptr, QMap< QDate, QTextCharFormat > const * other) {
  return this_ptr->isSharedWith(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_clear(QMap< Qt::GestureType, bool > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_clear(QMap< Qt::GestureType, QWidget * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_clear(QMap< QDate, QTextCharFormat > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_remove(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key) {
  return this_ptr->remove(*key);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_remove(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key) {
  return this_ptr->remove(*key);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_remove(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key) {
  return this_ptr->remove(*key);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_take(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key) {
  return this_ptr->take(*key);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_take(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key) {
  return this_ptr->take(*key);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_take(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key) {
  return new QTextCharFormat(this_ptr->take(*key));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_contains(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->contains(*key);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_contains(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->contains(*key);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_contains(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return this_ptr->contains(*key);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key(QMap< Qt::GestureType, bool > const * this_ptr, bool const * value, Qt::GestureType const * defaultKey) {
  return this_ptr->key(*value, *defaultKey);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key(QMap< Qt::GestureType, QWidget * > const * this_ptr, QWidget * const * value, Qt::GestureType const * defaultKey) {
  return this_ptr->key(*value, *defaultKey);
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key(QMap< QDate, QTextCharFormat > const * this_ptr, QTextCharFormat const * value, QDate const * defaultKey) {
  return new QDate(this_ptr->key(*value, *defaultKey));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_value(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key, bool const * defaultValue) {
  return this_ptr->value(*key, *defaultValue);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_value(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key, QWidget * const * defaultValue) {
  return this_ptr->value(*key, *defaultValue);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_value(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key, QTextCharFormat const * defaultValue) {
  return new QTextCharFormat(this_ptr->value(*key, *defaultValue));
}


RITUAL_EXPORT bool * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_operator__2(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key) {
  return &this_ptr->operator[](*key);
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_operator__2(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key) {
  return &this_ptr->operator[](*key);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_operator__2(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key) {
  return &this_ptr->operator[](*key);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_operator__3(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->operator[](*key);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_operator__3(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->operator[](*key);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_operator__3(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return new QTextCharFormat(this_ptr->operator[](*key));
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_values(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QList< QWidget * >(this_ptr->values());
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_values1(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return new QList< QWidget * >(this_ptr->values(*key));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_count(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->count(*key);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_count(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->count(*key);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_count(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return this_ptr->count(*key);
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_firstKey(QMap< Qt::GestureType, bool > const * this_ptr) {
  return &this_ptr->firstKey();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_firstKey(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return &this_ptr->firstKey();
}


RITUAL_EXPORT QDate const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_firstKey(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return &this_ptr->firstKey();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_lastKey(QMap< Qt::GestureType, bool > const * this_ptr) {
  return &this_ptr->lastKey();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_lastKey(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return &this_ptr->lastKey();
}


RITUAL_EXPORT QDate const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_lastKey(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return &this_ptr->lastKey();
}


RITUAL_EXPORT bool * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_first(QMap< Qt::GestureType, bool > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_first(QMap< Qt::GestureType, QWidget * > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_first(QMap< QDate, QTextCharFormat > * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT bool const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_first1(QMap< Qt::GestureType, bool > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_first1(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT QTextCharFormat const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_first1(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return &this_ptr->first();
}


RITUAL_EXPORT bool * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_last(QMap< Qt::GestureType, bool > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_last(QMap< Qt::GestureType, QWidget * > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_last(QMap< QDate, QTextCharFormat > * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT bool const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_last1(QMap< Qt::GestureType, bool > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_last1(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QTextCharFormat const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_last1(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return &this_ptr->last();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_iterator() {
  return new QMap< Qt::GestureType, bool >::iterator();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_iterator() {
  return new QMap< Qt::GestureType, QWidget * >::iterator();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_iterator() {
  return new QMap< QDate, QTextCharFormat >::iterator();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_key(QMap< Qt::GestureType, bool >::iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_key(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT QDate const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_key(QMap< QDate, QTextCharFormat >::iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT bool * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_value(QMap< Qt::GestureType, bool >::iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_value(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_value(QMap< QDate, QTextCharFormat >::iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT bool * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator_(QMap< Qt::GestureType, bool >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator_(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator_(QMap< QDate, QTextCharFormat >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT bool * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__(QMap< Qt::GestureType, bool >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QWidget * * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__(QMap< QDate, QTextCharFormat >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__1(QMap< Qt::GestureType, bool >::iterator const * this_ptr, QMap< Qt::GestureType, bool >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__1(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr, QMap< Qt::GestureType, QWidget * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__1(QMap< QDate, QTextCharFormat >::iterator const * this_ptr, QMap< QDate, QTextCharFormat >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__3(QMap< Qt::GestureType, bool >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__3(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__3(QMap< QDate, QTextCharFormat >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__4(QMap< Qt::GestureType, bool >::iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__4(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__4(QMap< QDate, QTextCharFormat >::iterator * this_ptr, int arg1) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__5(QMap< Qt::GestureType, bool >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__5(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__5(QMap< QDate, QTextCharFormat >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__6(QMap< Qt::GestureType, bool >::iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__6(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__6(QMap< QDate, QTextCharFormat >::iterator * this_ptr, int arg1) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator_1(QMap< Qt::GestureType, bool >::iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator_1(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator_1(QMap< QDate, QTextCharFormat >::iterator const * this_ptr, int j) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator_2(QMap< Qt::GestureType, bool >::iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator_2(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator_2(QMap< QDate, QTextCharFormat >::iterator const * this_ptr, int j) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__7(QMap< Qt::GestureType, bool >::iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__7(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__7(QMap< QDate, QTextCharFormat >::iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__8(QMap< Qt::GestureType, bool >::iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__8(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__8(QMap< QDate, QTextCharFormat >::iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator__9(QMap< Qt::GestureType, bool >::iterator const * this_ptr, QMap< Qt::GestureType, bool >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator__9(QMap< Qt::GestureType, QWidget * >::iterator const * this_ptr, QMap< Qt::GestureType, QWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator__9(QMap< QDate, QTextCharFormat >::iterator const * this_ptr, QMap< QDate, QTextCharFormat >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_const_iterator() {
  return new QMap< Qt::GestureType, bool >::const_iterator();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_const_iterator() {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_const_iterator() {
  return new QMap< QDate, QTextCharFormat >::const_iterator();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_const_iterator1(QMap< Qt::GestureType, bool >::iterator const * o) {
  return new QMap< Qt::GestureType, bool >::const_iterator(*o);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_const_iterator1(QMap< Qt::GestureType, QWidget * >::iterator const * o) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(*o);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_const_iterator1(QMap< QDate, QTextCharFormat >::iterator const * o) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(*o);
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_key(QMap< Qt::GestureType, bool >::const_iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_key(QMap< Qt::GestureType, QWidget * >::const_iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT QDate const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_key(QMap< QDate, QTextCharFormat >::const_iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT bool const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_value(QMap< Qt::GestureType, bool >::const_iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_value(QMap< Qt::GestureType, QWidget * >::const_iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT QTextCharFormat const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_value(QMap< QDate, QTextCharFormat >::const_iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT bool const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator_(QMap< Qt::GestureType, bool >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator_(QMap< Qt::GestureType, QWidget * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QTextCharFormat const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator_(QMap< QDate, QTextCharFormat >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT bool const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__(QMap< Qt::GestureType, bool >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QWidget * const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__(QMap< Qt::GestureType, QWidget * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QTextCharFormat const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__(QMap< QDate, QTextCharFormat >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__1(QMap< Qt::GestureType, bool >::const_iterator const * this_ptr, QMap< Qt::GestureType, bool >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__1(QMap< Qt::GestureType, QWidget * >::const_iterator const * this_ptr, QMap< Qt::GestureType, QWidget * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__1(QMap< QDate, QTextCharFormat >::const_iterator const * this_ptr, QMap< QDate, QTextCharFormat >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__3(QMap< Qt::GestureType, bool >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__3(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__3(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__4(QMap< Qt::GestureType, bool >::const_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__4(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__4(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr, int arg1) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__5(QMap< Qt::GestureType, bool >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__5(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__5(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__6(QMap< Qt::GestureType, bool >::const_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__6(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__6(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr, int arg1) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator_1(QMap< Qt::GestureType, bool >::const_iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator_1(QMap< Qt::GestureType, QWidget * >::const_iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator_1(QMap< QDate, QTextCharFormat >::const_iterator const * this_ptr, int j) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator_2(QMap< Qt::GestureType, bool >::const_iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator_2(QMap< Qt::GestureType, QWidget * >::const_iterator const * this_ptr, int j) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator_2(QMap< QDate, QTextCharFormat >::const_iterator const * this_ptr, int j) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__7(QMap< Qt::GestureType, bool >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__7(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__7(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator__8(QMap< Qt::GestureType, bool >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator__8(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator__8(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_key_iterator() {
  return new QMap< Qt::GestureType, bool >::key_iterator();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_key_iterator() {
  return new QMap< Qt::GestureType, QWidget * >::key_iterator();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_key_iterator() {
  return new QMap< QDate, QTextCharFormat >::key_iterator();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_key_iterator1(QMap< Qt::GestureType, bool >::const_iterator const * o) {
  return new QMap< Qt::GestureType, bool >::key_iterator(*o);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_key_iterator1(QMap< Qt::GestureType, QWidget * >::const_iterator const * o) {
  return new QMap< Qt::GestureType, QWidget * >::key_iterator(*o);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_key_iterator1(QMap< QDate, QTextCharFormat >::const_iterator const * o) {
  return new QMap< QDate, QTextCharFormat >::key_iterator(*o);
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator_(QMap< Qt::GestureType, bool >::key_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator_(QMap< Qt::GestureType, QWidget * >::key_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QDate const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator_(QMap< QDate, QTextCharFormat >::key_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator__(QMap< Qt::GestureType, bool >::key_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT Qt::GestureType const * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator__(QMap< Qt::GestureType, QWidget * >::key_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT QDate const * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator__(QMap< QDate, QTextCharFormat >::key_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator__1(QMap< Qt::GestureType, bool >::key_iterator const * this_ptr, QMap< Qt::GestureType, bool >::key_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator__1(QMap< Qt::GestureType, QWidget * >::key_iterator const * this_ptr, QMap< Qt::GestureType, QWidget * >::key_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator__1(QMap< QDate, QTextCharFormat >::key_iterator const * this_ptr, QMap< QDate, QTextCharFormat >::key_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator__3(QMap< Qt::GestureType, bool >::key_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator__3(QMap< Qt::GestureType, QWidget * >::key_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator__3(QMap< QDate, QTextCharFormat >::key_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator__4(QMap< Qt::GestureType, bool >::key_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, bool >::key_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator__4(QMap< Qt::GestureType, QWidget * >::key_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, QWidget * >::key_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator__4(QMap< QDate, QTextCharFormat >::key_iterator * this_ptr, int arg1) {
  return new QMap< QDate, QTextCharFormat >::key_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator__5(QMap< Qt::GestureType, bool >::key_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator__5(QMap< Qt::GestureType, QWidget * >::key_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator__5(QMap< QDate, QTextCharFormat >::key_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator__6(QMap< Qt::GestureType, bool >::key_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, bool >::key_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator__6(QMap< Qt::GestureType, QWidget * >::key_iterator * this_ptr, int arg1) {
  return new QMap< Qt::GestureType, QWidget * >::key_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator__6(QMap< QDate, QTextCharFormat >::key_iterator * this_ptr, int arg1) {
  return new QMap< QDate, QTextCharFormat >::key_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_base(QMap< Qt::GestureType, bool >::key_iterator const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->base());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_base(QMap< Qt::GestureType, QWidget * >::key_iterator const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->base());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_base(QMap< QDate, QTextCharFormat >::key_iterator const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->base());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_begin(QMap< Qt::GestureType, bool > * this_ptr) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_begin(QMap< Qt::GestureType, QWidget * > * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_begin(QMap< QDate, QTextCharFormat > * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_begin1(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_begin1(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_begin1(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_constBegin(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_constBegin(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_constBegin(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_cbegin(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_cbegin(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_cbegin(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_end(QMap< Qt::GestureType, bool > * this_ptr) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->end());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_end(QMap< Qt::GestureType, QWidget * > * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_end(QMap< QDate, QTextCharFormat > * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->end());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_end1(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_end1(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_end1(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_constEnd(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_constEnd(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_constEnd(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_cend(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_cend(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_cend(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_keyBegin(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::key_iterator(this_ptr->keyBegin());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_keyBegin(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::key_iterator(this_ptr->keyBegin());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_keyBegin(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::key_iterator(this_ptr->keyBegin());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_keyEnd(QMap< Qt::GestureType, bool > const * this_ptr) {
  return new QMap< Qt::GestureType, bool >::key_iterator(this_ptr->keyEnd());
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_keyEnd(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return new QMap< Qt::GestureType, QWidget * >::key_iterator(this_ptr->keyEnd());
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_keyEnd(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return new QMap< QDate, QTextCharFormat >::key_iterator(this_ptr->keyEnd());
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_erase(QMap< Qt::GestureType, bool > * this_ptr, QMap< Qt::GestureType, bool >::iterator const * it) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->erase(*it));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_erase(QMap< Qt::GestureType, QWidget * > * this_ptr, QMap< Qt::GestureType, QWidget * >::iterator const * it) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->erase(*it));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_erase(QMap< QDate, QTextCharFormat > * this_ptr, QMap< QDate, QTextCharFormat >::iterator const * it) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->erase(*it));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_count1(QMap< Qt::GestureType, bool > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_count1(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_count1(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_find(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_find(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_find(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_find1(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_find1(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_find1(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_constFind(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->constFind(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_constFind(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->constFind(*key));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_constFind(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->constFind(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_lowerBound(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->lowerBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_lowerBound(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->lowerBound(*key));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_lowerBound(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->lowerBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_lowerBound1(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->lowerBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_lowerBound1(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->lowerBound(*key));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_lowerBound1(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->lowerBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_upperBound(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->upperBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_upperBound(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->upperBound(*key));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_upperBound(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->upperBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_upperBound1(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, bool >::const_iterator(this_ptr->upperBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_upperBound1(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(this_ptr->upperBound(*key));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_upperBound1(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(this_ptr->upperBound(*key));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_insert(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key, bool const * value) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->insert(*key, *value));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_insert(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key, QWidget * const * value) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->insert(*key, *value));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_insert(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key, QTextCharFormat const * value) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->insert(*key, *value));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_insert1(QMap< Qt::GestureType, bool > * this_ptr, QMap< Qt::GestureType, bool >::const_iterator const * pos, Qt::GestureType const * key, bool const * value) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->insert(*pos, *key, *value));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_insert1(QMap< Qt::GestureType, QWidget * > * this_ptr, QMap< Qt::GestureType, QWidget * >::const_iterator const * pos, Qt::GestureType const * key, QWidget * const * value) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->insert(*pos, *key, *value));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_insert1(QMap< QDate, QTextCharFormat > * this_ptr, QMap< QDate, QTextCharFormat >::const_iterator const * pos, QDate const * key, QTextCharFormat const * value) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->insert(*pos, *key, *value));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_insert2(QMap< Qt::GestureType, bool > * this_ptr, QMap< Qt::GestureType, bool > const * map) {
  this_ptr->insert(*map);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_insert2(QMap< Qt::GestureType, QWidget * > * this_ptr, QMap< Qt::GestureType, QWidget * > const * map) {
  this_ptr->insert(*map);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_insert2(QMap< QDate, QTextCharFormat > * this_ptr, QMap< QDate, QTextCharFormat > const * map) {
  this_ptr->insert(*map);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_insertMulti(QMap< Qt::GestureType, bool > * this_ptr, Qt::GestureType const * key, bool const * value) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->insertMulti(*key, *value));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_insertMulti(QMap< Qt::GestureType, QWidget * > * this_ptr, Qt::GestureType const * key, QWidget * const * value) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->insertMulti(*key, *value));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_insertMulti(QMap< QDate, QTextCharFormat > * this_ptr, QDate const * key, QTextCharFormat const * value) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->insertMulti(*key, *value));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_insertMulti1(QMap< Qt::GestureType, bool > * this_ptr, QMap< Qt::GestureType, bool >::const_iterator const * pos, Qt::GestureType const * akey, bool const * avalue) {
  return new QMap< Qt::GestureType, bool >::iterator(this_ptr->insertMulti(*pos, *akey, *avalue));
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_insertMulti1(QMap< Qt::GestureType, QWidget * > * this_ptr, QMap< Qt::GestureType, QWidget * >::const_iterator const * pos, Qt::GestureType const * akey, QWidget * const * avalue) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(this_ptr->insertMulti(*pos, *akey, *avalue));
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_insertMulti1(QMap< QDate, QTextCharFormat > * this_ptr, QMap< QDate, QTextCharFormat >::const_iterator const * pos, QDate const * akey, QTextCharFormat const * avalue) {
  return new QMap< QDate, QTextCharFormat >::iterator(this_ptr->insertMulti(*pos, *akey, *avalue));
}


RITUAL_EXPORT QMap< Qt::GestureType, bool > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_unite(QMap< Qt::GestureType, bool > * this_ptr, QMap< Qt::GestureType, bool > const * other) {
  return &this_ptr->unite(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * > * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_unite(QMap< Qt::GestureType, QWidget * > * this_ptr, QMap< Qt::GestureType, QWidget * > const * other) {
  return &this_ptr->unite(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat > * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_unite(QMap< QDate, QTextCharFormat > * this_ptr, QMap< QDate, QTextCharFormat > const * other) {
  return &this_ptr->unite(*other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_empty(QMap< Qt::GestureType, bool > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_empty(QMap< Qt::GestureType, QWidget * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_empty(QMap< QDate, QTextCharFormat > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * > * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_QHash() {
  return new QHash< int, QItemEditorCreatorBase * >();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_dQHash(QHash< int, QItemEditorCreatorBase * > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_size(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return this_ptr->size();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_isEmpty(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return this_ptr->isEmpty();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_capacity(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return this_ptr->capacity();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_reserve(QHash< int, QItemEditorCreatorBase * > * this_ptr, int size) {
  this_ptr->reserve(size);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_squeeze(QHash< int, QItemEditorCreatorBase * > * this_ptr) {
  this_ptr->squeeze();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_detach(QHash< int, QItemEditorCreatorBase * > * this_ptr) {
  this_ptr->detach();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_isDetached(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return this_ptr->isDetached();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_setSharable(QHash< int, QItemEditorCreatorBase * > * this_ptr, bool sharable) {
  this_ptr->setSharable(sharable);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_clear(QHash< int, QItemEditorCreatorBase * > * this_ptr) {
  this_ptr->clear();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_remove(QHash< int, QItemEditorCreatorBase * > * this_ptr, int const * key) {
  return this_ptr->remove(*key);
}


RITUAL_EXPORT QItemEditorCreatorBase * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_take(QHash< int, QItemEditorCreatorBase * > * this_ptr, int const * key) {
  return this_ptr->take(*key);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_contains(QHash< int, QItemEditorCreatorBase * > const * this_ptr, int const * key) {
  return this_ptr->contains(*key);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key(QHash< int, QItemEditorCreatorBase * > const * this_ptr, QItemEditorCreatorBase * const * value) {
  return this_ptr->key(*value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key1(QHash< int, QItemEditorCreatorBase * > const * this_ptr, QItemEditorCreatorBase * const * value, int const * defaultKey) {
  return this_ptr->key(*value, *defaultKey);
}


RITUAL_EXPORT QItemEditorCreatorBase * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_value(QHash< int, QItemEditorCreatorBase * > const * this_ptr, int const * key) {
  return this_ptr->value(*key);
}


RITUAL_EXPORT QItemEditorCreatorBase * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_value1(QHash< int, QItemEditorCreatorBase * > const * this_ptr, int const * key, QItemEditorCreatorBase * const * defaultValue) {
  return this_ptr->value(*key, *defaultValue);
}


RITUAL_EXPORT QItemEditorCreatorBase * * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_operator__(QHash< int, QItemEditorCreatorBase * > * this_ptr, int const * key) {
  return &this_ptr->operator[](*key);
}


RITUAL_EXPORT QItemEditorCreatorBase * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_operator__1(QHash< int, QItemEditorCreatorBase * > const * this_ptr, int const * key) {
  return this_ptr->operator[](*key);
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_keys(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QList< int >(this_ptr->keys());
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_keys1(QHash< int, QItemEditorCreatorBase * > const * this_ptr, QItemEditorCreatorBase * const * value) {
  return new QList< int >(this_ptr->keys(*value));
}


RITUAL_EXPORT QList< int > * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_uniqueKeys(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QList< int >(this_ptr->uniqueKeys());
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_count(QHash< int, QItemEditorCreatorBase * > const * this_ptr, int const * key) {
  return this_ptr->count(*key);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_iterator() {
  return new QHash< int, QItemEditorCreatorBase * >::iterator();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_iterator1(void * node) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(node);
}


RITUAL_EXPORT int const * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_key(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT QItemEditorCreatorBase * * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_value(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT QItemEditorCreatorBase * * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator_(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QItemEditorCreatorBase * * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__1(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr, QHash< int, QItemEditorCreatorBase * >::iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__3(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__4(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr, int arg1) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__5(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__6(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr, int arg1) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator_1(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr, int j) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator_2(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr, int j) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__7(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__8(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator__9(QHash< int, QItemEditorCreatorBase * >::iterator const * this_ptr, QHash< int, QItemEditorCreatorBase * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_const_iterator() {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_const_iterator1(void * node) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(node);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_const_iterator2(QHash< int, QItemEditorCreatorBase * >::iterator const * o) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(*o);
}


RITUAL_EXPORT int const * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_key(QHash< int, QItemEditorCreatorBase * >::const_iterator const * this_ptr) {
  return &this_ptr->key();
}


RITUAL_EXPORT QItemEditorCreatorBase * const * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_value(QHash< int, QItemEditorCreatorBase * >::const_iterator const * this_ptr) {
  return &this_ptr->value();
}


RITUAL_EXPORT QItemEditorCreatorBase * const * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator_(QHash< int, QItemEditorCreatorBase * >::const_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT QItemEditorCreatorBase * const * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__(QHash< int, QItemEditorCreatorBase * >::const_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__1(QHash< int, QItemEditorCreatorBase * >::const_iterator const * this_ptr, QHash< int, QItemEditorCreatorBase * >::const_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__3(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__4(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr, int arg1) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__5(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__6(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr, int arg1) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator_1(QHash< int, QItemEditorCreatorBase * >::const_iterator const * this_ptr, int j) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->operator+(j));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator_2(QHash< int, QItemEditorCreatorBase * >::const_iterator const * this_ptr, int j) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->operator-(j));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__7(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator+=(j);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator__8(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr, int j) {
  return &this_ptr->operator-=(j);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_key_iterator() {
  return new QHash< int, QItemEditorCreatorBase * >::key_iterator();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_key_iterator1(QHash< int, QItemEditorCreatorBase * >::const_iterator const * o) {
  return new QHash< int, QItemEditorCreatorBase * >::key_iterator(*o);
}


RITUAL_EXPORT int const * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator_(QHash< int, QItemEditorCreatorBase * >::key_iterator const * this_ptr) {
  return &this_ptr->operator*();
}


RITUAL_EXPORT int const * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator__(QHash< int, QItemEditorCreatorBase * >::key_iterator const * this_ptr) {
  return this_ptr->operator->();
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator__1(QHash< int, QItemEditorCreatorBase * >::key_iterator const * this_ptr, QHash< int, QItemEditorCreatorBase * >::key_iterator const * o) {
  return this_ptr->operator==(*o);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator__3(QHash< int, QItemEditorCreatorBase * >::key_iterator * this_ptr) {
  return &this_ptr->operator++();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator__4(QHash< int, QItemEditorCreatorBase * >::key_iterator * this_ptr, int arg1) {
  return new QHash< int, QItemEditorCreatorBase * >::key_iterator(this_ptr->operator++(arg1));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator__5(QHash< int, QItemEditorCreatorBase * >::key_iterator * this_ptr) {
  return &this_ptr->operator--();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator__6(QHash< int, QItemEditorCreatorBase * >::key_iterator * this_ptr, int arg1) {
  return new QHash< int, QItemEditorCreatorBase * >::key_iterator(this_ptr->operator--(arg1));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_base(QHash< int, QItemEditorCreatorBase * >::key_iterator const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->base());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_begin(QHash< int, QItemEditorCreatorBase * > * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->begin());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_begin1(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->begin());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_cbegin(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->cbegin());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_constBegin(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->constBegin());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_end(QHash< int, QItemEditorCreatorBase * > * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->end());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_end1(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->end());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_cend(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->cend());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_constEnd(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->constEnd());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_keyBegin(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::key_iterator(this_ptr->keyBegin());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_keyEnd(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return new QHash< int, QItemEditorCreatorBase * >::key_iterator(this_ptr->keyEnd());
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_erase(QHash< int, QItemEditorCreatorBase * > * this_ptr, QHash< int, QItemEditorCreatorBase * >::iterator const * it) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->erase(*it));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_erase1(QHash< int, QItemEditorCreatorBase * > * this_ptr, QHash< int, QItemEditorCreatorBase * >::const_iterator const * it) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->erase(*it));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_count1(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return this_ptr->count();
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_find(QHash< int, QItemEditorCreatorBase * > * this_ptr, int const * key) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_find1(QHash< int, QItemEditorCreatorBase * > const * this_ptr, int const * key) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->find(*key));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_constFind(QHash< int, QItemEditorCreatorBase * > const * this_ptr, int const * key) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(this_ptr->constFind(*key));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_insert(QHash< int, QItemEditorCreatorBase * > * this_ptr, int const * key, QItemEditorCreatorBase * const * value) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->insert(*key, *value));
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_insertMulti(QHash< int, QItemEditorCreatorBase * > * this_ptr, int const * key, QItemEditorCreatorBase * const * value) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(this_ptr->insertMulti(*key, *value));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_empty(QHash< int, QItemEditorCreatorBase * > const * this_ptr) {
  return this_ptr->empty();
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash26(QHash< int, QItemEditorCreatorBase * > const * key, unsigned int seed) {
  return qHash(*key, seed);
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__76(QDebug const * debug, QList< QGesture * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__77(QDebug const * debug, QList< QTreeWidgetItem * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__78(QDebug const * debug, QList< QAction * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__79(QDebug const * debug, QList< QWidget * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__80(QDebug const * debug, QList< QGraphicsWidget * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__81(QDebug const * debug, QList< QAbstractButton * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__82(QDebug const * debug, QList< QGraphicsItem * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__83(QDebug const * debug, QList< QGraphicsTransform * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__84(QDebug const * debug, QList< QPair< double, QPointF > > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__85(QDebug const * debug, QList< QPair< double, double > > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__86(QDebug const * debug, QList< QGraphicsView * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__87(QDebug const * debug, QList< QRectF > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__88(QDebug const * debug, QList< QListWidgetItem * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__89(QDebug const * debug, QList< QDockWidget * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__90(QDebug const * debug, QList< QMdiSubWindow * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__92(QDebug const * debug, QList< QScroller * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__94(QDebug const * debug, QList< QTableWidgetItem * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__95(QDebug const * debug, QList< QUndoStack * > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__96(QDebug const * debug, QList< QWizard::WizardButton > const * list) {
  return new QDebug(operator<<(*debug, *list));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__97(QDebug const * debug, QVector< void * > const * vec) {
  return new QDebug(operator<<(*debug, *vec));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__98(QDebug const * debug, QVector< QColor > const * vec) {
  return new QDebug(operator<<(*debug, *vec));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__99(QDebug const * debug, QMap< Qt::GestureType, bool > const * map) {
  return new QDebug(operator<<(*debug, *map));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__100(QDebug const * debug, QMap< Qt::GestureType, QWidget * > const * map) {
  return new QDebug(operator<<(*debug, *map));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__101(QDebug const * debug, QMap< QDate, QTextCharFormat > const * map) {
  return new QDebug(operator<<(*debug, *map));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__102(QDebug const * debug, QHash< int, QItemEditorCreatorBase * > const * hash) {
  return new QDebug(operator<<(*debug, *hash));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__103(QDebug const * debug, QPair< double, QPointF > const * pair) {
  return new QDebug(operator<<(*debug, *pair));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__104(QDebug const * debug, QPair< double, double > const * pair) {
  return new QDebug(operator<<(*debug, *pair));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__105(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyle::StateFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__106(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyleOptionFrame::FrameFeature >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__107(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyleOptionButton::ButtonFeature >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__108(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyleOptionTab::CornerWidget >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__109(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyleOptionTab::TabFeature >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__110(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyleOptionToolBar::ToolBarFeature >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__111(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyleOptionViewItem::ViewItemFeature >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__112(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyle::SubControl >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__113(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QAbstractSpinBox::StepEnabledFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__114(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QStyleOptionToolButton::ToolButtonFeature >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__115(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QTreeWidgetItemIterator::IteratorFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__116(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< Qt::Orientation >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__117(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QWidget::RenderFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__118(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< Qt::GestureFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__119(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< Qt::InputMethodHint >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__120(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QSizePolicy::ControlType >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__121(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QAbstractItemView::EditTrigger >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__122(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QColorDialog::ColorDialogOption >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__123(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QDateTimeEdit::Section >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__124(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QDialogButtonBox::StandardButton >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__125(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QFileIconProvider::Option >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__126(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QDockWidget::DockWidgetFeature >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__127(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< Qt::DockWidgetArea >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__128(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QDrawBorderPixmap::DrawingHint >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__129(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QFileDialog::Option >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__130(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QFileSystemModel::Option >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__131(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QFontComboBox::FontFilter >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__132(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QFontDialog::FontDialogOption >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__133(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QPinchGesture::ChangeFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__134(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QGestureRecognizer::ResultFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__135(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QGraphicsItem::GraphicsItemFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__136(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< Qt::TextInteractionFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__137(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QGraphicsEffect::ChangeFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__138(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QGraphicsBlurEffect::BlurHint >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__139(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QGraphicsScene::SceneLayer >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__140(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QGraphicsView::OptimizationFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__141(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QGraphicsView::CacheModeFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__142(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QInputDialog::InputDialogOption >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__143(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QMainWindow::DockOption >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__144(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QMessageBox::StandardButton >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__145(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QTextEdit::AutoFormattingFlag >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__146(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< Qt::ToolBarArea >(flags)));
}


RITUAL_EXPORT QDebug * ctr_qt_widgets_ffi_operator__147(QDebug const * debug, int flags) {
  return new QDebug(operator<<(*debug, QFlags< QWizard::WizardOption >(flags)));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__148(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyle::StateFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__149(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyleOptionFrame::FrameFeature >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__150(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyleOptionButton::ButtonFeature >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__151(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyleOptionTab::CornerWidget >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__152(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyleOptionTab::TabFeature >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__153(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyleOptionToolBar::ToolBarFeature >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__154(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyleOptionViewItem::ViewItemFeature >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__155(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyle::SubControl >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__156(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QAbstractSpinBox::StepEnabledFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__157(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QStyleOptionToolButton::ToolButtonFeature >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__158(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QTreeWidgetItemIterator::IteratorFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__159(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< Qt::Orientation >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__160(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QWidget::RenderFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__161(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< Qt::GestureFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__162(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< Qt::InputMethodHint >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__163(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QSizePolicy::ControlType >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__164(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QAbstractItemView::EditTrigger >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__165(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QColorDialog::ColorDialogOption >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__166(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QDateTimeEdit::Section >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__167(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QDialogButtonBox::StandardButton >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__168(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QFileIconProvider::Option >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__169(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QDockWidget::DockWidgetFeature >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__170(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< Qt::DockWidgetArea >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__171(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QDrawBorderPixmap::DrawingHint >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__172(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QFileDialog::Option >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__173(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QFileSystemModel::Option >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__174(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QFontComboBox::FontFilter >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__175(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QFontDialog::FontDialogOption >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__176(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QPinchGesture::ChangeFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__177(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QGestureRecognizer::ResultFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__178(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QGraphicsItem::GraphicsItemFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__179(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< Qt::TextInteractionFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__180(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QGraphicsEffect::ChangeFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__181(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QGraphicsBlurEffect::BlurHint >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__182(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QGraphicsScene::SceneLayer >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__183(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QGraphicsView::OptimizationFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__184(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QGraphicsView::CacheModeFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__185(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QInputDialog::InputDialogOption >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__186(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QMainWindow::DockOption >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__187(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QMessageBox::StandardButton >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__188(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QTextEdit::AutoFormattingFlag >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__189(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< Qt::ToolBarArea >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__190(QDataStream * s, int e) {
  return &operator<<(*s, QFlags< QWizard::WizardOption >(e));
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__242(QDataStream * s, QList< QPair< double, QPointF > > * l) {
  return &operator>>(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__243(QDataStream * s, QList< QPair< double, double > > * l) {
  return &operator>>(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__245(QDataStream * s, QList< QRectF > * l) {
  return &operator>>(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__254(QDataStream * s, QList< QWizard::WizardButton > * l) {
  return &operator>>(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__255(QDataStream * s, QList< QGesture * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__256(QDataStream * s, QList< QTreeWidgetItem * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__257(QDataStream * s, QList< QAction * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__258(QDataStream * s, QList< QWidget * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__259(QDataStream * s, QList< QGraphicsWidget * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__260(QDataStream * s, QList< QAbstractButton * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__261(QDataStream * s, QList< QGraphicsItem * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__262(QDataStream * s, QList< QGraphicsTransform * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__263(QDataStream * s, QList< QPair< double, QPointF > > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__264(QDataStream * s, QList< QPair< double, double > > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__265(QDataStream * s, QList< QGraphicsView * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__266(QDataStream * s, QList< QRectF > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__267(QDataStream * s, QList< QListWidgetItem * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__268(QDataStream * s, QList< QDockWidget * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__269(QDataStream * s, QList< QMdiSubWindow * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__271(QDataStream * s, QList< QScroller * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__273(QDataStream * s, QList< QTableWidgetItem * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__274(QDataStream * s, QList< QUndoStack * > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__275(QDataStream * s, QList< QWizard::WizardButton > const * l) {
  return &operator<<(*s, *l);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__277(QDataStream * s, QVector< QColor > * v) {
  return &operator>>(*s, *v);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__278(QDataStream * s, QVector< void * > const * v) {
  return &operator<<(*s, *v);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__279(QDataStream * s, QVector< QColor > const * v) {
  return &operator<<(*s, *v);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__281(QDataStream * s, QHash< int, QItemEditorCreatorBase * > const * hash) {
  return &operator<<(*s, *hash);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__282(QDataStream * s, QMap< Qt::GestureType, bool > * map) {
  return &operator>>(*s, *map);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__284(QDataStream * s, QMap< QDate, QTextCharFormat > * map) {
  return &operator>>(*s, *map);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__285(QDataStream * s, QMap< Qt::GestureType, bool > const * map) {
  return &operator<<(*s, *map);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__286(QDataStream * s, QMap< Qt::GestureType, QWidget * > const * map) {
  return &operator<<(*s, *map);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__287(QDataStream * s, QMap< QDate, QTextCharFormat > const * map) {
  return &operator<<(*s, *map);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__288(QDataStream * s, QPair< double, QPointF > * p) {
  return &operator>>(*s, *p);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__289(QDataStream * s, QPair< double, double > * p) {
  return &operator>>(*s, *p);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__290(QDataStream * s, QPair< double, QPointF > const * p) {
  return &operator<<(*s, *p);
}


RITUAL_EXPORT QDataStream * ctr_qt_widgets_ffi_operator__291(QDataStream * s, QPair< double, double > const * p) {
  return &operator<<(*s, *p);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPair_double_QPointF_dQPair(QPair< double, QPointF > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPair_double_double_dQPair(QPair< double, double > * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QPair_double_QPointF_QPair2(QPair< double, QPointF > const * other) {
  return new QPair< double, QPointF >(*other);
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QPair_double_double_QPair2(QPair< double, double > const * other) {
  return new QPair< double, double >(*other);
}


RITUAL_EXPORT QPair< double, QPointF > * ctr_qt_widgets_ffi_QPair_double_QPointF_operator_(QPair< double, QPointF > * this_ptr, QPair< double, QPointF > const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QPair< double, double > * ctr_qt_widgets_ffi_QPair_double_double_operator_(QPair< double, double > * this_ptr, QPair< double, double > const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_MemoryLayout_dMemoryLayout(QList< QGesture * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_MemoryLayout_dMemoryLayout(QList< QTreeWidgetItem * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_MemoryLayout_dMemoryLayout(QList< QAction * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_MemoryLayout_dMemoryLayout(QList< QWidget * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_MemoryLayout_dMemoryLayout(QList< QGraphicsWidget * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_MemoryLayout_dMemoryLayout(QList< QAbstractButton * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_MemoryLayout_dMemoryLayout(QList< QGraphicsItem * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_MemoryLayout_dMemoryLayout(QList< QGraphicsTransform * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_MemoryLayout_dMemoryLayout(QList< QPair< double, QPointF > >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_MemoryLayout_dMemoryLayout(QList< QPair< double, double > >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_MemoryLayout_dMemoryLayout(QList< QGraphicsView * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_MemoryLayout_dMemoryLayout(QList< QRectF >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_MemoryLayout_dMemoryLayout(QList< QListWidgetItem * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_MemoryLayout_dMemoryLayout(QList< QDockWidget * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_MemoryLayout_dMemoryLayout(QList< QMdiSubWindow * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_MemoryLayout_dMemoryLayout(QList< QTextEdit::ExtraSelection >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_MemoryLayout_dMemoryLayout(QList< QScroller * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_MemoryLayout_dMemoryLayout(QList< QTableWidgetSelectionRange >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_MemoryLayout_dMemoryLayout(QList< QTableWidgetItem * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_MemoryLayout_dMemoryLayout(QList< QUndoStack * >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_MemoryLayout_dMemoryLayout(QList< QWizard::WizardButton >::MemoryLayout * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QList< QGesture * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGesture_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QGesture * >::MemoryLayout();
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QTreeWidgetItem * >::MemoryLayout();
}


RITUAL_EXPORT QList< QAction * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QAction_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QAction * >::MemoryLayout();
}


RITUAL_EXPORT QList< QWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QWidget_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QWidget * >::MemoryLayout();
}


RITUAL_EXPORT QList< QGraphicsWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QGraphicsWidget * >::MemoryLayout();
}


RITUAL_EXPORT QList< QAbstractButton * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QAbstractButton * >::MemoryLayout();
}


RITUAL_EXPORT QList< QGraphicsItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QGraphicsItem * >::MemoryLayout();
}


RITUAL_EXPORT QList< QGraphicsTransform * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QGraphicsTransform * >::MemoryLayout();
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::MemoryLayout * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_MemoryLayout_MemoryLayout() {
  return new QList< QPair< double, QPointF > >::MemoryLayout();
}


RITUAL_EXPORT QList< QPair< double, double > >::MemoryLayout * ctr_qt_widgets_ffi_QList_QPair_double_double_MemoryLayout_MemoryLayout() {
  return new QList< QPair< double, double > >::MemoryLayout();
}


RITUAL_EXPORT QList< QGraphicsView * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QGraphicsView * >::MemoryLayout();
}


RITUAL_EXPORT QList< QRectF >::MemoryLayout * ctr_qt_widgets_ffi_QList_QRectF_MemoryLayout_MemoryLayout() {
  return new QList< QRectF >::MemoryLayout();
}


RITUAL_EXPORT QList< QListWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QListWidgetItem * >::MemoryLayout();
}


RITUAL_EXPORT QList< QDockWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QDockWidget * >::MemoryLayout();
}


RITUAL_EXPORT QList< QMdiSubWindow * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QMdiSubWindow * >::MemoryLayout();
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_MemoryLayout_MemoryLayout() {
  return new QList< QTextEdit::ExtraSelection >::MemoryLayout();
}


RITUAL_EXPORT QList< QScroller * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QScroller_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QScroller * >::MemoryLayout();
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_MemoryLayout_MemoryLayout() {
  return new QList< QTableWidgetSelectionRange >::MemoryLayout();
}


RITUAL_EXPORT QList< QTableWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QTableWidgetItem * >::MemoryLayout();
}


RITUAL_EXPORT QList< QUndoStack * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_MemoryLayout_MemoryLayout() {
  return new QList< QUndoStack * >::MemoryLayout();
}


RITUAL_EXPORT QList< QWizard::WizardButton >::MemoryLayout * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_MemoryLayout_MemoryLayout() {
  return new QList< QWizard::WizardButton >::MemoryLayout();
}


RITUAL_EXPORT QList< QGesture * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGesture_ptr_MemoryLayout_MemoryLayout1(QList< QGesture * >::MemoryLayout const * other) {
  return new QList< QGesture * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_MemoryLayout_MemoryLayout1(QList< QTreeWidgetItem * >::MemoryLayout const * other) {
  return new QList< QTreeWidgetItem * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QAction * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QAction_ptr_MemoryLayout_MemoryLayout1(QList< QAction * >::MemoryLayout const * other) {
  return new QList< QAction * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QWidget_ptr_MemoryLayout_MemoryLayout1(QList< QWidget * >::MemoryLayout const * other) {
  return new QList< QWidget * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_MemoryLayout_MemoryLayout1(QList< QGraphicsWidget * >::MemoryLayout const * other) {
  return new QList< QGraphicsWidget * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QAbstractButton * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_MemoryLayout_MemoryLayout1(QList< QAbstractButton * >::MemoryLayout const * other) {
  return new QList< QAbstractButton * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QGraphicsItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_MemoryLayout_MemoryLayout1(QList< QGraphicsItem * >::MemoryLayout const * other) {
  return new QList< QGraphicsItem * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_MemoryLayout_MemoryLayout1(QList< QGraphicsTransform * >::MemoryLayout const * other) {
  return new QList< QGraphicsTransform * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::MemoryLayout * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_MemoryLayout_MemoryLayout1(QList< QPair< double, QPointF > >::MemoryLayout const * other) {
  return new QList< QPair< double, QPointF > >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QPair< double, double > >::MemoryLayout * ctr_qt_widgets_ffi_QList_QPair_double_double_MemoryLayout_MemoryLayout1(QList< QPair< double, double > >::MemoryLayout const * other) {
  return new QList< QPair< double, double > >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QGraphicsView * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_MemoryLayout_MemoryLayout1(QList< QGraphicsView * >::MemoryLayout const * other) {
  return new QList< QGraphicsView * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QRectF >::MemoryLayout * ctr_qt_widgets_ffi_QList_QRectF_MemoryLayout_MemoryLayout1(QList< QRectF >::MemoryLayout const * other) {
  return new QList< QRectF >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QListWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_MemoryLayout_MemoryLayout1(QList< QListWidgetItem * >::MemoryLayout const * other) {
  return new QList< QListWidgetItem * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QDockWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_MemoryLayout_MemoryLayout1(QList< QDockWidget * >::MemoryLayout const * other) {
  return new QList< QDockWidget * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_MemoryLayout_MemoryLayout1(QList< QMdiSubWindow * >::MemoryLayout const * other) {
  return new QList< QMdiSubWindow * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_MemoryLayout_MemoryLayout1(QList< QTextEdit::ExtraSelection >::MemoryLayout const * other) {
  return new QList< QTextEdit::ExtraSelection >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QScroller * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QScroller_ptr_MemoryLayout_MemoryLayout1(QList< QScroller * >::MemoryLayout const * other) {
  return new QList< QScroller * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_MemoryLayout_MemoryLayout1(QList< QTableWidgetSelectionRange >::MemoryLayout const * other) {
  return new QList< QTableWidgetSelectionRange >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_MemoryLayout_MemoryLayout1(QList< QTableWidgetItem * >::MemoryLayout const * other) {
  return new QList< QTableWidgetItem * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QUndoStack * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_MemoryLayout_MemoryLayout1(QList< QUndoStack * >::MemoryLayout const * other) {
  return new QList< QUndoStack * >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::MemoryLayout * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_MemoryLayout_MemoryLayout1(QList< QWizard::WizardButton >::MemoryLayout const * other) {
  return new QList< QWizard::WizardButton >::MemoryLayout(*other);
}


RITUAL_EXPORT QList< QGesture * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGesture_ptr_MemoryLayout_operator_(QList< QGesture * >::MemoryLayout * this_ptr, QList< QGesture * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QTreeWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_MemoryLayout_operator_(QList< QTreeWidgetItem * >::MemoryLayout * this_ptr, QList< QTreeWidgetItem * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QAction * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QAction_ptr_MemoryLayout_operator_(QList< QAction * >::MemoryLayout * this_ptr, QList< QAction * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QWidget_ptr_MemoryLayout_operator_(QList< QWidget * >::MemoryLayout * this_ptr, QList< QWidget * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QGraphicsWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_MemoryLayout_operator_(QList< QGraphicsWidget * >::MemoryLayout * this_ptr, QList< QGraphicsWidget * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QAbstractButton * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_MemoryLayout_operator_(QList< QAbstractButton * >::MemoryLayout * this_ptr, QList< QAbstractButton * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QGraphicsItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_MemoryLayout_operator_(QList< QGraphicsItem * >::MemoryLayout * this_ptr, QList< QGraphicsItem * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QGraphicsTransform * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_MemoryLayout_operator_(QList< QGraphicsTransform * >::MemoryLayout * this_ptr, QList< QGraphicsTransform * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QPair< double, QPointF > >::MemoryLayout * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_MemoryLayout_operator_(QList< QPair< double, QPointF > >::MemoryLayout * this_ptr, QList< QPair< double, QPointF > >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QPair< double, double > >::MemoryLayout * ctr_qt_widgets_ffi_QList_QPair_double_double_MemoryLayout_operator_(QList< QPair< double, double > >::MemoryLayout * this_ptr, QList< QPair< double, double > >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QGraphicsView * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_MemoryLayout_operator_(QList< QGraphicsView * >::MemoryLayout * this_ptr, QList< QGraphicsView * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QRectF >::MemoryLayout * ctr_qt_widgets_ffi_QList_QRectF_MemoryLayout_operator_(QList< QRectF >::MemoryLayout * this_ptr, QList< QRectF >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QListWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_MemoryLayout_operator_(QList< QListWidgetItem * >::MemoryLayout * this_ptr, QList< QListWidgetItem * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QDockWidget * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_MemoryLayout_operator_(QList< QDockWidget * >::MemoryLayout * this_ptr, QList< QDockWidget * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QMdiSubWindow * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_MemoryLayout_operator_(QList< QMdiSubWindow * >::MemoryLayout * this_ptr, QList< QMdiSubWindow * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_MemoryLayout_operator_(QList< QTextEdit::ExtraSelection >::MemoryLayout * this_ptr, QList< QTextEdit::ExtraSelection >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QScroller * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QScroller_ptr_MemoryLayout_operator_(QList< QScroller * >::MemoryLayout * this_ptr, QList< QScroller * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_MemoryLayout_operator_(QList< QTableWidgetSelectionRange >::MemoryLayout * this_ptr, QList< QTableWidgetSelectionRange >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QTableWidgetItem * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_MemoryLayout_operator_(QList< QTableWidgetItem * >::MemoryLayout * this_ptr, QList< QTableWidgetItem * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QUndoStack * >::MemoryLayout * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_MemoryLayout_operator_(QList< QUndoStack * >::MemoryLayout * this_ptr, QList< QUndoStack * >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QList< QWizard::WizardButton >::MemoryLayout * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_MemoryLayout_operator_(QList< QWizard::WizardButton >::MemoryLayout * this_ptr, QList< QWizard::WizardButton >::MemoryLayout const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_iterator_diterator(QList< QGesture * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_iterator_diterator(QList< QTreeWidgetItem * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_iterator_diterator(QList< QAction * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_iterator_diterator(QList< QWidget * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_iterator_diterator(QList< QGraphicsWidget * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_iterator_diterator(QList< QAbstractButton * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_iterator_diterator(QList< QGraphicsItem * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_iterator_diterator(QList< QGraphicsTransform * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_iterator_diterator(QList< QPair< double, QPointF > >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_iterator_diterator(QList< QPair< double, double > >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_iterator_diterator(QList< QGraphicsView * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_iterator_diterator(QList< QRectF >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_iterator_diterator(QList< QListWidgetItem * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_iterator_diterator(QList< QDockWidget * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_iterator_diterator(QList< QMdiSubWindow * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_iterator_diterator(QList< QTextEdit::ExtraSelection >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_iterator_diterator(QList< QScroller * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_iterator_diterator(QList< QTableWidgetSelectionRange >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_iterator_diterator(QList< QTableWidgetItem * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_iterator_diterator(QList< QUndoStack * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_iterator_diterator(QList< QWizard::WizardButton >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGesture_ptr_const_iterator_dconst_iterator(QList< QGesture * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_const_iterator_dconst_iterator(QList< QTreeWidgetItem * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAction_ptr_const_iterator_dconst_iterator(QList< QAction * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWidget_ptr_const_iterator_dconst_iterator(QList< QWidget * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_const_iterator_dconst_iterator(QList< QGraphicsWidget * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_const_iterator_dconst_iterator(QList< QAbstractButton * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_const_iterator_dconst_iterator(QList< QGraphicsItem * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_const_iterator_dconst_iterator(QList< QGraphicsTransform * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_QPointF_const_iterator_dconst_iterator(QList< QPair< double, QPointF > >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QPair_double_double_const_iterator_dconst_iterator(QList< QPair< double, double > >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_const_iterator_dconst_iterator(QList< QGraphicsView * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QRectF_const_iterator_dconst_iterator(QList< QRectF >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_const_iterator_dconst_iterator(QList< QListWidgetItem * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QDockWidget_ptr_const_iterator_dconst_iterator(QList< QDockWidget * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_const_iterator_dconst_iterator(QList< QMdiSubWindow * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_const_iterator_dconst_iterator(QList< QTextEdit::ExtraSelection >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QScroller_ptr_const_iterator_dconst_iterator(QList< QScroller * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_const_iterator_dconst_iterator(QList< QTableWidgetSelectionRange >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_const_iterator_dconst_iterator(QList< QTableWidgetItem * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QUndoStack_ptr_const_iterator_dconst_iterator(QList< QUndoStack * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QList_QWizard_WizardButton_const_iterator_dconst_iterator(QList< QWizard::WizardButton >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_diterator(QMap< Qt::GestureType, bool >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_diterator(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_diterator(QMap< QDate, QTextCharFormat >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_iterator1(QMap< Qt::GestureType, bool >::iterator const * other) {
  return new QMap< Qt::GestureType, bool >::iterator(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_iterator1(QMap< Qt::GestureType, QWidget * >::iterator const * other) {
  return new QMap< Qt::GestureType, QWidget * >::iterator(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_iterator1(QMap< QDate, QTextCharFormat >::iterator const * other) {
  return new QMap< QDate, QTextCharFormat >::iterator(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_iterator_operator_3(QMap< Qt::GestureType, bool >::iterator * this_ptr, QMap< Qt::GestureType, bool >::iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_iterator_operator_3(QMap< Qt::GestureType, QWidget * >::iterator * this_ptr, QMap< Qt::GestureType, QWidget * >::iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_iterator_operator_3(QMap< QDate, QTextCharFormat >::iterator * this_ptr, QMap< QDate, QTextCharFormat >::iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_dconst_iterator(QMap< Qt::GestureType, bool >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_dconst_iterator(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_dconst_iterator(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_const_iterator2(QMap< Qt::GestureType, bool >::const_iterator const * other) {
  return new QMap< Qt::GestureType, bool >::const_iterator(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_const_iterator2(QMap< Qt::GestureType, QWidget * >::const_iterator const * other) {
  return new QMap< Qt::GestureType, QWidget * >::const_iterator(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_const_iterator2(QMap< QDate, QTextCharFormat >::const_iterator const * other) {
  return new QMap< QDate, QTextCharFormat >::const_iterator(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_const_iterator_operator_3(QMap< Qt::GestureType, bool >::const_iterator * this_ptr, QMap< Qt::GestureType, bool >::const_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::const_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_const_iterator_operator_3(QMap< Qt::GestureType, QWidget * >::const_iterator * this_ptr, QMap< Qt::GestureType, QWidget * >::const_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::const_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_const_iterator_operator_3(QMap< QDate, QTextCharFormat >::const_iterator * this_ptr, QMap< QDate, QTextCharFormat >::const_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_dkey_iterator(QMap< Qt::GestureType, bool >::key_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_dkey_iterator(QMap< Qt::GestureType, QWidget * >::key_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_dkey_iterator(QMap< QDate, QTextCharFormat >::key_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_key_iterator2(QMap< Qt::GestureType, bool >::key_iterator const * other) {
  return new QMap< Qt::GestureType, bool >::key_iterator(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_key_iterator2(QMap< Qt::GestureType, QWidget * >::key_iterator const * other) {
  return new QMap< Qt::GestureType, QWidget * >::key_iterator(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_key_iterator2(QMap< QDate, QTextCharFormat >::key_iterator const * other) {
  return new QMap< QDate, QTextCharFormat >::key_iterator(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, bool >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key_iterator_operator_1(QMap< Qt::GestureType, bool >::key_iterator * this_ptr, QMap< Qt::GestureType, bool >::key_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< Qt::GestureType, QWidget * >::key_iterator * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key_iterator_operator_1(QMap< Qt::GestureType, QWidget * >::key_iterator * this_ptr, QMap< Qt::GestureType, QWidget * >::key_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QMap< QDate, QTextCharFormat >::key_iterator * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key_iterator_operator_1(QMap< QDate, QTextCharFormat >::key_iterator * this_ptr, QMap< QDate, QTextCharFormat >::key_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * > * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_QHash1(QHash< int, QItemEditorCreatorBase * > const * other) {
  return new QHash< int, QItemEditorCreatorBase * >(*other);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * > * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_operator_(QHash< int, QItemEditorCreatorBase * > * this_ptr, QHash< int, QItemEditorCreatorBase * > const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_diterator(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_iterator2(QHash< int, QItemEditorCreatorBase * >::iterator const * other) {
  return new QHash< int, QItemEditorCreatorBase * >::iterator(*other);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_iterator_operator_3(QHash< int, QItemEditorCreatorBase * >::iterator * this_ptr, QHash< int, QItemEditorCreatorBase * >::iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_dconst_iterator(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_const_iterator3(QHash< int, QItemEditorCreatorBase * >::const_iterator const * other) {
  return new QHash< int, QItemEditorCreatorBase * >::const_iterator(*other);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::const_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_const_iterator_operator_3(QHash< int, QItemEditorCreatorBase * >::const_iterator * this_ptr, QHash< int, QItemEditorCreatorBase * >::const_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_dkey_iterator(QHash< int, QItemEditorCreatorBase * >::key_iterator * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_key_iterator2(QHash< int, QItemEditorCreatorBase * >::key_iterator const * other) {
  return new QHash< int, QItemEditorCreatorBase * >::key_iterator(*other);
}


RITUAL_EXPORT QHash< int, QItemEditorCreatorBase * >::key_iterator * ctr_qt_widgets_ffi_QHash_int_QItemEditorCreatorBase_ptr_key_iterator_operator_1(QHash< int, QItemEditorCreatorBase * >::key_iterator * this_ptr, QHash< int, QItemEditorCreatorBase * >::key_iterator const * other) {
  return &this_ptr->operator=(*other);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash28(QPair< double, double > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_fill1(QVector< void * > * this_ptr, void * const * t) {
  return &this_ptr->fill(*t);
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_fill1(QVector< QColor > * this_ptr, QColor const * t) {
  return &this_ptr->fill(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_indexOf1(QVector< void * > const * this_ptr, void * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_indexOf1(QVector< QColor > const * this_ptr, QColor const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_void_ptr_lastIndexOf1(QVector< void * > const * this_ptr, void * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QVector_QColor_lastIndexOf1(QVector< QColor > const * this_ptr, QColor const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT QVector< void * > * ctr_qt_widgets_ffi_QVector_void_ptr_mid1(QVector< void * > const * this_ptr, int pos) {
  return new QVector< void * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QVector< QColor > * ctr_qt_widgets_ffi_QVector_QColor_mid1(QVector< QColor > const * this_ptr, int pos) {
  return new QVector< QColor >(this_ptr->mid(pos));
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash29(QVector< void * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_indexOf1(QList< QGesture * > const * this_ptr, QGesture * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_indexOf1(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_indexOf1(QList< QAction * > const * this_ptr, QAction * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_indexOf1(QList< QWidget * > const * this_ptr, QWidget * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_indexOf1(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_indexOf1(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_indexOf1(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_indexOf1(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_indexOf1(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_indexOf1(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_indexOf1(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_indexOf1(QList< QRectF > const * this_ptr, QRectF const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_indexOf1(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_indexOf1(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_indexOf1(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_indexOf1(QList< QScroller * > const * this_ptr, QScroller * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_indexOf1(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_indexOf1(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_indexOf1(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->indexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGesture_ptr_lastIndexOf1(QList< QGesture * > const * this_ptr, QGesture * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_lastIndexOf1(QList< QTreeWidgetItem * > const * this_ptr, QTreeWidgetItem * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAction_ptr_lastIndexOf1(QList< QAction * > const * this_ptr, QAction * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWidget_ptr_lastIndexOf1(QList< QWidget * > const * this_ptr, QWidget * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_lastIndexOf1(QList< QGraphicsWidget * > const * this_ptr, QGraphicsWidget * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_lastIndexOf1(QList< QAbstractButton * > const * this_ptr, QAbstractButton * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_lastIndexOf1(QList< QGraphicsItem * > const * this_ptr, QGraphicsItem * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_lastIndexOf1(QList< QGraphicsTransform * > const * this_ptr, QGraphicsTransform * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_QPointF_lastIndexOf1(QList< QPair< double, QPointF > > const * this_ptr, QPair< double, QPointF > const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QPair_double_double_lastIndexOf1(QList< QPair< double, double > > const * this_ptr, QPair< double, double > const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_lastIndexOf1(QList< QGraphicsView * > const * this_ptr, QGraphicsView * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QRectF_lastIndexOf1(QList< QRectF > const * this_ptr, QRectF const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_lastIndexOf1(QList< QListWidgetItem * > const * this_ptr, QListWidgetItem * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QDockWidget_ptr_lastIndexOf1(QList< QDockWidget * > const * this_ptr, QDockWidget * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_lastIndexOf1(QList< QMdiSubWindow * > const * this_ptr, QMdiSubWindow * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QScroller_ptr_lastIndexOf1(QList< QScroller * > const * this_ptr, QScroller * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_lastIndexOf1(QList< QTableWidgetItem * > const * this_ptr, QTableWidgetItem * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QUndoStack_ptr_lastIndexOf1(QList< QUndoStack * > const * this_ptr, QUndoStack * const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QList_QWizard_WizardButton_lastIndexOf1(QList< QWizard::WizardButton > const * this_ptr, QWizard::WizardButton const * t) {
  return this_ptr->lastIndexOf(*t);
}


RITUAL_EXPORT QList< QGesture * > * ctr_qt_widgets_ffi_QList_QGesture_ptr_mid1(QList< QGesture * > const * this_ptr, int pos) {
  return new QList< QGesture * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QList_QTreeWidgetItem_ptr_mid1(QList< QTreeWidgetItem * > const * this_ptr, int pos) {
  return new QList< QTreeWidgetItem * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QAction * > * ctr_qt_widgets_ffi_QList_QAction_ptr_mid1(QList< QAction * > const * this_ptr, int pos) {
  return new QList< QAction * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QWidget * > * ctr_qt_widgets_ffi_QList_QWidget_ptr_mid1(QList< QWidget * > const * this_ptr, int pos) {
  return new QList< QWidget * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QGraphicsWidget * > * ctr_qt_widgets_ffi_QList_QGraphicsWidget_ptr_mid1(QList< QGraphicsWidget * > const * this_ptr, int pos) {
  return new QList< QGraphicsWidget * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QAbstractButton * > * ctr_qt_widgets_ffi_QList_QAbstractButton_ptr_mid1(QList< QAbstractButton * > const * this_ptr, int pos) {
  return new QList< QAbstractButton * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QList_QGraphicsItem_ptr_mid1(QList< QGraphicsItem * > const * this_ptr, int pos) {
  return new QList< QGraphicsItem * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QGraphicsTransform * > * ctr_qt_widgets_ffi_QList_QGraphicsTransform_ptr_mid1(QList< QGraphicsTransform * > const * this_ptr, int pos) {
  return new QList< QGraphicsTransform * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QPair< double, QPointF > > * ctr_qt_widgets_ffi_QList_QPair_double_QPointF_mid1(QList< QPair< double, QPointF > > const * this_ptr, int pos) {
  return new QList< QPair< double, QPointF > >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QPair< double, double > > * ctr_qt_widgets_ffi_QList_QPair_double_double_mid1(QList< QPair< double, double > > const * this_ptr, int pos) {
  return new QList< QPair< double, double > >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QGraphicsView * > * ctr_qt_widgets_ffi_QList_QGraphicsView_ptr_mid1(QList< QGraphicsView * > const * this_ptr, int pos) {
  return new QList< QGraphicsView * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QRectF > * ctr_qt_widgets_ffi_QList_QRectF_mid1(QList< QRectF > const * this_ptr, int pos) {
  return new QList< QRectF >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QListWidgetItem * > * ctr_qt_widgets_ffi_QList_QListWidgetItem_ptr_mid1(QList< QListWidgetItem * > const * this_ptr, int pos) {
  return new QList< QListWidgetItem * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QDockWidget * > * ctr_qt_widgets_ffi_QList_QDockWidget_ptr_mid1(QList< QDockWidget * > const * this_ptr, int pos) {
  return new QList< QDockWidget * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QList_QMdiSubWindow_ptr_mid1(QList< QMdiSubWindow * > const * this_ptr, int pos) {
  return new QList< QMdiSubWindow * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QTextEdit::ExtraSelection > * ctr_qt_widgets_ffi_QList_QTextEdit_ExtraSelection_mid1(QList< QTextEdit::ExtraSelection > const * this_ptr, int pos) {
  return new QList< QTextEdit::ExtraSelection >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QScroller * > * ctr_qt_widgets_ffi_QList_QScroller_ptr_mid1(QList< QScroller * > const * this_ptr, int pos) {
  return new QList< QScroller * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QTableWidgetSelectionRange > * ctr_qt_widgets_ffi_QList_QTableWidgetSelectionRange_mid1(QList< QTableWidgetSelectionRange > const * this_ptr, int pos) {
  return new QList< QTableWidgetSelectionRange >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QTableWidgetItem * > * ctr_qt_widgets_ffi_QList_QTableWidgetItem_ptr_mid1(QList< QTableWidgetItem * > const * this_ptr, int pos) {
  return new QList< QTableWidgetItem * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QUndoStack * > * ctr_qt_widgets_ffi_QList_QUndoStack_ptr_mid1(QList< QUndoStack * > const * this_ptr, int pos) {
  return new QList< QUndoStack * >(this_ptr->mid(pos));
}


RITUAL_EXPORT QList< QWizard::WizardButton > * ctr_qt_widgets_ffi_QList_QWizard_WizardButton_mid1(QList< QWizard::WizardButton > const * this_ptr, int pos) {
  return new QList< QWizard::WizardButton >(this_ptr->mid(pos));
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash31(QList< QGesture * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash32(QList< QTreeWidgetItem * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash33(QList< QAction * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash34(QList< QWidget * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash35(QList< QGraphicsWidget * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash36(QList< QAbstractButton * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash37(QList< QGraphicsItem * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash38(QList< QGraphicsTransform * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash40(QList< QPair< double, double > > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash41(QList< QGraphicsView * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash43(QList< QListWidgetItem * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash44(QList< QDockWidget * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash45(QList< QMdiSubWindow * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash47(QList< QScroller * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash49(QList< QTableWidgetItem * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash50(QList< QUndoStack * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash51(QList< QWizard::WizardButton > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_key1(QMap< Qt::GestureType, bool > const * this_ptr, bool const * value) {
  return this_ptr->key(*value);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_key1(QMap< Qt::GestureType, QWidget * > const * this_ptr, QWidget * const * value) {
  return this_ptr->key(*value);
}


RITUAL_EXPORT QDate * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_key1(QMap< QDate, QTextCharFormat > const * this_ptr, QTextCharFormat const * value) {
  return new QDate(this_ptr->key(*value));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMap_Qt_GestureType_bool_value1(QMap< Qt::GestureType, bool > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->value(*key);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMap_Qt_GestureType_QWidget_ptr_value1(QMap< Qt::GestureType, QWidget * > const * this_ptr, Qt::GestureType const * key) {
  return this_ptr->value(*key);
}


RITUAL_EXPORT QTextCharFormat * ctr_qt_widgets_ffi_QMap_QDate_QTextCharFormat_value1(QMap< QDate, QTextCharFormat > const * this_ptr, QDate const * key) {
  return new QTextCharFormat(this_ptr->value(*key));
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash52(QHash< int, QItemEditorCreatorBase * > const * key) {
  return qHash(*key);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_qHash53(QSizePolicy const * key) {
  return qHash(*key);
}


RITUAL_EXPORT QSizePolicy * ctr_qt_widgets_ffi_QSizePolicy_QSizePolicy3(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical) {
  return new QSizePolicy(horizontal, vertical);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_QWidget2(QWidget * parent) {
  return new QWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render2(QWidget * this_ptr, QPaintDevice * target, QPoint const * targetOffset, QRegion const * sourceRegion) {
  this_ptr->render(target, *targetOffset, *sourceRegion);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render3(QWidget * this_ptr, QPaintDevice * target, QPoint const * targetOffset) {
  this_ptr->render(target, *targetOffset);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render4(QWidget * this_ptr, QPaintDevice * target) {
  this_ptr->render(target);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render5(QWidget * this_ptr, QPainter * painter, QPoint const * targetOffset, QRegion const * sourceRegion) {
  this_ptr->render(painter, *targetOffset, *sourceRegion);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render6(QWidget * this_ptr, QPainter * painter, QPoint const * targetOffset) {
  this_ptr->render(painter, *targetOffset);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_render7(QWidget * this_ptr, QPainter * painter) {
  this_ptr->render(painter);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QWidget_grab1(QWidget * this_ptr) {
  return new QPixmap(this_ptr->grab());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_grabGesture1(QWidget * this_ptr, Qt::GestureType type) {
  this_ptr->grabGesture(type);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QWidget_grabShortcut1(QWidget * this_ptr, QKeySequence const * key) {
  return this_ptr->grabShortcut(*key);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setShortcutEnabled1(QWidget * this_ptr, int id) {
  this_ptr->setShortcutEnabled(id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setShortcutAutoRepeat1(QWidget * this_ptr, int id) {
  this_ptr->setShortcutAutoRepeat(id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setWindowFlag1(QWidget * this_ptr, Qt::WindowType arg1) {
  this_ptr->setWindowFlag(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWidget_setAttribute1(QWidget * this_ptr, Qt::WidgetAttribute arg1) {
  this_ptr->setAttribute(arg1);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_createWindowContainer1(QWindow * window, QWidget * parent) {
  return QWidget::createWindowContainer(window, parent);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QWidget_createWindowContainer2(QWindow * window) {
  return QWidget::createWindowContainer(window);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractButton_animateClick1(QAbstractButton * this_ptr) {
  this_ptr->animateClick();
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_QSlider_QSlider3(Qt::Orientation orientation) {
  return new QSlider(orientation);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawItemText1(QStyle const * this_ptr, QPainter * painter, QRect const * rect, int flags, QPalette const * pal, bool enabled, QString const * text) {
  this_ptr->drawItemText(painter, *rect, flags, *pal, enabled, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawPrimitive1(QStyle const * this_ptr, QStyle::PrimitiveElement pe, QStyleOption const * opt, QPainter * p) {
  this_ptr->drawPrimitive(pe, opt, p);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawControl1(QStyle const * this_ptr, QStyle::ControlElement element, QStyleOption const * opt, QPainter * p) {
  this_ptr->drawControl(element, opt, p);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_subElementRect1(QStyle const * this_ptr, QStyle::SubElement subElement, QStyleOption const * option) {
  return new QRect(this_ptr->subElementRect(subElement, option));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStyle_drawComplexControl1(QStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPainter * p) {
  this_ptr->drawComplexControl(cc, opt, p);
}


RITUAL_EXPORT QStyle::SubControl ctr_qt_widgets_ffi_QStyle_hitTestComplexControl1(QStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPoint const * pt) {
  return this_ptr->hitTestComplexControl(cc, opt, *pt);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QStyle_subControlRect1(QStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QStyle::SubControl sc) {
  return new QRect(this_ptr->subControlRect(cc, opt, sc));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_pixelMetric1(QStyle const * this_ptr, QStyle::PixelMetric metric, QStyleOption const * option) {
  return this_ptr->pixelMetric(metric, option);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_pixelMetric2(QStyle const * this_ptr, QStyle::PixelMetric metric) {
  return this_ptr->pixelMetric(metric);
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QStyle_sizeFromContents1(QStyle const * this_ptr, QStyle::ContentsType ct, QStyleOption const * opt, QSize const * contentsSize) {
  return new QSize(this_ptr->sizeFromContents(ct, opt, *contentsSize));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_styleHint1(QStyle const * this_ptr, QStyle::StyleHint stylehint, QStyleOption const * opt, QWidget const * widget) {
  return this_ptr->styleHint(stylehint, opt, widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_styleHint2(QStyle const * this_ptr, QStyle::StyleHint stylehint, QStyleOption const * opt) {
  return this_ptr->styleHint(stylehint, opt);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_styleHint3(QStyle const * this_ptr, QStyle::StyleHint stylehint) {
  return this_ptr->styleHint(stylehint);
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QStyle_standardPixmap1(QStyle const * this_ptr, QStyle::StandardPixmap standardPixmap, QStyleOption const * opt) {
  return new QPixmap(this_ptr->standardPixmap(standardPixmap, opt));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QStyle_standardPixmap2(QStyle const * this_ptr, QStyle::StandardPixmap standardPixmap) {
  return new QPixmap(this_ptr->standardPixmap(standardPixmap));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyle_standardIcon1(QStyle const * this_ptr, QStyle::StandardPixmap standardIcon, QStyleOption const * option) {
  return new QIcon(this_ptr->standardIcon(standardIcon, option));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QStyle_standardIcon2(QStyle const * this_ptr, QStyle::StandardPixmap standardIcon) {
  return new QIcon(this_ptr->standardIcon(standardIcon));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_sliderPositionFromValue1(int min, int max, int val, int space) {
  return QStyle::sliderPositionFromValue(min, max, val, space);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_sliderValueFromPosition1(int min, int max, int pos, int space) {
  return QStyle::sliderValueFromPosition(min, max, pos, space);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_layoutSpacing1(QStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, QStyleOption const * option) {
  return this_ptr->layoutSpacing(control1, control2, orientation, option);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_layoutSpacing2(QStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation) {
  return this_ptr->layoutSpacing(control1, control2, orientation);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_combinedLayoutSpacing1(QStyle const * this_ptr, int controls1, int controls2, Qt::Orientation orientation, QStyleOption * option) {
  return this_ptr->combinedLayoutSpacing(QFlags< QSizePolicy::ControlType >(controls1), QFlags< QSizePolicy::ControlType >(controls2), orientation, option);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStyle_combinedLayoutSpacing2(QStyle const * this_ptr, int controls1, int controls2, Qt::Orientation orientation) {
  return this_ptr->combinedLayoutSpacing(QFlags< QSizePolicy::ControlType >(controls1), QFlags< QSizePolicy::ControlType >(controls2), orientation);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTabWidget_setCornerWidget1(QTabWidget * this_ptr, QWidget * w) {
  this_ptr->setCornerWidget(w);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QTabWidget_cornerWidget1(QTabWidget const * this_ptr) {
  return this_ptr->cornerWidget();
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_QRubberBand_QRubberBand3(QRubberBand::Shape arg1) {
  return new QRubberBand(arg1);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_QFrame_QFrame2(QWidget * parent) {
  return new QFrame(parent);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_QStyleOption_QStyleOption3(int version) {
  return new QStyleOption(version);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_QStyleOptionComplex_QStyleOptionComplex3(int version) {
  return new QStyleOptionComplex(version);
}


RITUAL_EXPORT QStyleHintReturn * ctr_qt_widgets_ffi_QStyleHintReturn_QStyleHintReturn3(int version) {
  return new QStyleHintReturn(version);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QAbstractItemView_scrollTo1(QAbstractItemView * this_ptr, QModelIndex const * index) {
  this_ptr->scrollTo(*index);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_QAccessibleWidget_QAccessibleWidget2(QWidget * o, QAccessible::Role r) {
  return new QAccessibleWidget(o, r);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_QAccessibleWidget_QAccessibleWidget3(QWidget * o) {
  return new QAccessibleWidget(o);
}


RITUAL_EXPORT QVector< QPair< QAccessibleInterface *, QFlags< QAccessible::RelationFlag > > > * ctr_qt_widgets_ffi_QAccessibleWidget_relations1(QAccessibleWidget const * this_ptr) {
  return new QVector< QPair< QAccessibleInterface *, QFlags< QAccessible::RelationFlag > > >(this_ptr->relations());
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QAction_QAction4(QString const * text) {
  return new QAction(*text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QAction_QAction5(QIcon const * icon, QString const * text) {
  return new QAction(*icon, *text);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QAction_showStatusText1(QAction * this_ptr) {
  return this_ptr->showStatusText();
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_QApplication_QApplication2(int * argc, char * * argv) {
  return new QApplication(*argc, argv);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setPalette1(QPalette const * arg1) {
  QApplication::setPalette(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setFont1(QFont const * arg1) {
  QApplication::setFont(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_alert1(QWidget * widget) {
  QApplication::alert(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QApplication_setEffectEnabled1(Qt::UIEffect arg1) {
  QApplication::setEffectEnabled(arg1);
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_QSpacerItem_QSpacerItem3(int w, int h, QSizePolicy::Policy hData) {
  return new QSpacerItem(w, h, hData);
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_QSpacerItem_QSpacerItem4(int w, int h) {
  return new QSpacerItem(w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpacerItem_changeSize1(QSpacerItem * this_ptr, int w, int h, QSizePolicy::Policy hData) {
  this_ptr->changeSize(w, h, hData);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSpacerItem_changeSize2(QSpacerItem * this_ptr, int w, int h) {
  this_ptr->changeSize(w, h);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_QLayout_replaceWidget1(QLayout * this_ptr, QWidget * from, QWidget * to) {
  return this_ptr->replaceWidget(from, to);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addWidget3(QGridLayout * this_ptr, QWidget * arg1, int row, int column) {
  this_ptr->addWidget(arg1, row, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addWidget4(QGridLayout * this_ptr, QWidget * arg1, int row, int column, int rowSpan, int columnSpan) {
  this_ptr->addWidget(arg1, row, column, rowSpan, columnSpan);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addLayout2(QGridLayout * this_ptr, QLayout * arg1, int row, int column) {
  this_ptr->addLayout(arg1, row, column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addLayout3(QGridLayout * this_ptr, QLayout * arg1, int row, int column, int rowSpan, int columnSpan) {
  this_ptr->addLayout(arg1, row, column, rowSpan, columnSpan);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addItem1(QGridLayout * this_ptr, QLayoutItem * item, int row, int column, int rowSpan, int columnSpan) {
  this_ptr->addItem(item, row, column, rowSpan, columnSpan);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addItem2(QGridLayout * this_ptr, QLayoutItem * item, int row, int column, int rowSpan) {
  this_ptr->addItem(item, row, column, rowSpan);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGridLayout_addItem3(QGridLayout * this_ptr, QLayoutItem * item, int row, int column) {
  this_ptr->addItem(item, row, column);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_QBoxLayout_QBoxLayout2(QBoxLayout::Direction arg1) {
  return new QBoxLayout(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addStretch1(QBoxLayout * this_ptr) {
  this_ptr->addStretch();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addWidget1(QBoxLayout * this_ptr, QWidget * arg1, int stretch) {
  this_ptr->addWidget(arg1, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addWidget2(QBoxLayout * this_ptr, QWidget * arg1) {
  this_ptr->addWidget(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_addLayout1(QBoxLayout * this_ptr, QLayout * layout) {
  this_ptr->addLayout(layout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertStretch1(QBoxLayout * this_ptr, int index) {
  this_ptr->insertStretch(index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertWidget1(QBoxLayout * this_ptr, int index, QWidget * widget, int stretch) {
  this_ptr->insertWidget(index, widget, stretch);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertWidget2(QBoxLayout * this_ptr, int index, QWidget * widget) {
  this_ptr->insertWidget(index, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QBoxLayout_insertLayout1(QBoxLayout * this_ptr, int index, QLayout * layout) {
  this_ptr->insertLayout(index, layout);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QButtonGroup_addButton1(QButtonGroup * this_ptr, QAbstractButton * arg1) {
  this_ptr->addButton(arg1);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_QCheckBox_QCheckBox3(QString const * text) {
  return new QCheckBox(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCheckBox_setTristate1(QCheckBox * this_ptr) {
  this_ptr->setTristate();
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_QDialog_QDialog2(QWidget * parent) {
  return new QDialog(parent);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_QColorDialog_QColorDialog3(QColor const * initial) {
  return new QColorDialog(*initial);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColorDialog_setOption1(QColorDialog * this_ptr, QColorDialog::ColorDialogOption option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_getColor1(QColor const * initial, QWidget * parent, QString const * title) {
  return new QColor(QColorDialog::getColor(*initial, parent, *title));
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_getColor2(QColor const * initial, QWidget * parent) {
  return new QColor(QColorDialog::getColor(*initial, parent));
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_getColor3(QColor const * initial) {
  return new QColor(QColorDialog::getColor(*initial));
}


RITUAL_EXPORT QColor * ctr_qt_widgets_ffi_QColorDialog_getColor4() {
  return new QColor(QColorDialog::getColor());
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_QColorDialog_getRgba1(unsigned int rgba, bool * ok) {
  return QColorDialog::getRgba(rgba, ok);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_QColorDialog_getRgba2(unsigned int rgba) {
  return QColorDialog::getRgba(rgba);
}


RITUAL_EXPORT unsigned int ctr_qt_widgets_ffi_QColorDialog_getRgba3() {
  return QColorDialog::getRgba();
}


RITUAL_EXPORT QColormap * ctr_qt_widgets_ffi_QColormap_instance1() {
  return new QColormap(QColormap::instance());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QColumnView_scrollTo1(QColumnView * this_ptr, QModelIndex const * index) {
  this_ptr->scrollTo(*index);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_findText1(QComboBox const * this_ptr, QString const * text) {
  return this_ptr->findText(*text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_findData1(QComboBox const * this_ptr, QVariant const * data, int role) {
  return this_ptr->findData(*data, role);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QComboBox_findData2(QComboBox const * this_ptr, QVariant const * data) {
  return this_ptr->findData(*data);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QComboBox_currentData1(QComboBox const * this_ptr) {
  return new QVariant(this_ptr->currentData());
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QComboBox_itemData1(QComboBox const * this_ptr, int index) {
  return new QVariant(this_ptr->itemData(index));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_addItem2(QComboBox * this_ptr, QString const * text) {
  this_ptr->addItem(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_addItem3(QComboBox * this_ptr, QIcon const * icon, QString const * text) {
  this_ptr->addItem(*icon, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_insertItem2(QComboBox * this_ptr, int index, QString const * text) {
  this_ptr->insertItem(index, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_insertItem3(QComboBox * this_ptr, int index, QIcon const * icon, QString const * text) {
  this_ptr->insertItem(index, *icon, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QComboBox_setItemData1(QComboBox * this_ptr, int index, QVariant const * value) {
  this_ptr->setItemData(index, *value);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QPushButton_QPushButton4(QString const * text) {
  return new QPushButton(*text);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_QPushButton_QPushButton5(QIcon const * icon, QString const * text) {
  return new QPushButton(*icon, *text);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_QCommandLinkButton_QCommandLinkButton4(QString const * text) {
  return new QCommandLinkButton(*text);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_QCommandLinkButton_QCommandLinkButton5(QString const * text, QString const * description) {
  return new QCommandLinkButton(*text, *description);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_drawPrimitive1(QCommonStyle const * this_ptr, QStyle::PrimitiveElement pe, QStyleOption const * opt, QPainter * p) {
  this_ptr->drawPrimitive(pe, opt, p);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_drawControl1(QCommonStyle const * this_ptr, QStyle::ControlElement element, QStyleOption const * opt, QPainter * p) {
  this_ptr->drawControl(element, opt, p);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QCommonStyle_subElementRect1(QCommonStyle const * this_ptr, QStyle::SubElement r, QStyleOption const * opt) {
  return new QRect(this_ptr->subElementRect(r, opt));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCommonStyle_drawComplexControl1(QCommonStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPainter * p) {
  this_ptr->drawComplexControl(cc, opt, p);
}


RITUAL_EXPORT QStyle::SubControl ctr_qt_widgets_ffi_QCommonStyle_hitTestComplexControl1(QCommonStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QPoint const * pt) {
  return this_ptr->hitTestComplexControl(cc, opt, *pt);
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QCommonStyle_subControlRect1(QCommonStyle const * this_ptr, QStyle::ComplexControl cc, QStyleOptionComplex const * opt, QStyle::SubControl sc) {
  return new QRect(this_ptr->subControlRect(cc, opt, sc));
}


RITUAL_EXPORT QSize * ctr_qt_widgets_ffi_QCommonStyle_sizeFromContents1(QCommonStyle const * this_ptr, QStyle::ContentsType ct, QStyleOption const * opt, QSize const * contentsSize) {
  return new QSize(this_ptr->sizeFromContents(ct, opt, *contentsSize));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_pixelMetric1(QCommonStyle const * this_ptr, QStyle::PixelMetric m, QStyleOption const * opt) {
  return this_ptr->pixelMetric(m, opt);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_pixelMetric2(QCommonStyle const * this_ptr, QStyle::PixelMetric m) {
  return this_ptr->pixelMetric(m);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_styleHint1(QCommonStyle const * this_ptr, QStyle::StyleHint sh, QStyleOption const * opt, QWidget const * w) {
  return this_ptr->styleHint(sh, opt, w);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_styleHint2(QCommonStyle const * this_ptr, QStyle::StyleHint sh, QStyleOption const * opt) {
  return this_ptr->styleHint(sh, opt);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_styleHint3(QCommonStyle const * this_ptr, QStyle::StyleHint sh) {
  return this_ptr->styleHint(sh);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QCommonStyle_standardIcon1(QCommonStyle const * this_ptr, QStyle::StandardPixmap standardIcon, QStyleOption const * opt) {
  return new QIcon(this_ptr->standardIcon(standardIcon, opt));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QCommonStyle_standardIcon2(QCommonStyle const * this_ptr, QStyle::StandardPixmap standardIcon) {
  return new QIcon(this_ptr->standardIcon(standardIcon));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QCommonStyle_standardPixmap1(QCommonStyle const * this_ptr, QStyle::StandardPixmap sp, QStyleOption const * opt) {
  return new QPixmap(this_ptr->standardPixmap(sp, opt));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QCommonStyle_standardPixmap2(QCommonStyle const * this_ptr, QStyle::StandardPixmap sp) {
  return new QPixmap(this_ptr->standardPixmap(sp));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_layoutSpacing1(QCommonStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, QStyleOption const * option) {
  return this_ptr->layoutSpacing(control1, control2, orientation, option);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QCommonStyle_layoutSpacing2(QCommonStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation) {
  return this_ptr->layoutSpacing(control1, control2, orientation);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QCompleter_QCompleter4(QAbstractItemModel * model) {
  return new QCompleter(model);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_QCompleter_QCompleter5(QStringList const * completions) {
  return new QCompleter(*completions);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QCompleter_complete1(QCompleter * this_ptr) {
  this_ptr->complete();
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit5(QDateTime const * dt) {
  return new QDateTimeEdit(*dt);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit6(QDate const * d) {
  return new QDateTimeEdit(*d);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_QDateTimeEdit_QDateTimeEdit7(QTime const * t) {
  return new QDateTimeEdit(*t);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_QTimeEdit_QTimeEdit4(QTime const * time) {
  return new QTimeEdit(*time);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_QDateEdit_QDateEdit4(QDate const * date) {
  return new QDateEdit(*date);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDesktopWidget_screenNumber2(QDesktopWidget const * this_ptr) {
  return this_ptr->screenNumber();
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QDesktopWidget_screen1(QDesktopWidget * this_ptr) {
  return this_ptr->screen();
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_screenGeometry3(QDesktopWidget const * this_ptr) {
  return new QRect(this_ptr->screenGeometry());
}


RITUAL_EXPORT QRect * ctr_qt_widgets_ffi_QDesktopWidget_availableGeometry3(QDesktopWidget const * this_ptr) {
  return new QRect(this_ptr->availableGeometry());
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox5(Qt::Orientation orientation) {
  return new QDialogButtonBox(orientation);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox6(int buttons) {
  return new QDialogButtonBox(QFlags< QDialogButtonBox::StandardButton >(buttons));
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_QDialogButtonBox_QDialogButtonBox7(int buttons, Qt::Orientation orientation) {
  return new QDialogButtonBox(QFlags< QDialogButtonBox::StandardButton >(buttons), orientation);
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_QDirModel_QDirModel3(QStringList const * nameFilters, int filters, int sort) {
  return new QDirModel(*nameFilters, QFlags< QDir::Filter >(filters), QFlags< QDir::SortFlag >(sort));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QDirModel_index2(QDirModel const * this_ptr, int row, int column) {
  return new QModelIndex(this_ptr->index(row, column));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_rowCount1(QDirModel const * this_ptr) {
  return this_ptr->rowCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QDirModel_columnCount1(QDirModel const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QDirModel_data1(QDirModel const * this_ptr, QModelIndex const * index) {
  return new QVariant(this_ptr->data(*index));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_setData1(QDirModel * this_ptr, QModelIndex const * index, QVariant const * value) {
  return this_ptr->setData(*index, *value);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QDirModel_headerData1(QDirModel const * this_ptr, int section, Qt::Orientation orientation) {
  return new QVariant(this_ptr->headerData(section, orientation));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QDirModel_hasChildren1(QDirModel const * this_ptr) {
  return this_ptr->hasChildren();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_sort1(QDirModel * this_ptr, int column) {
  this_ptr->sort(column);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QDirModel_index3(QDirModel const * this_ptr, QString const * path) {
  return new QModelIndex(this_ptr->index(*path));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QDirModel_refresh1(QDirModel * this_ptr) {
  this_ptr->refresh();
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QDockWidget_QDockWidget3(QString const * title, QWidget * parent) {
  return new QDockWidget(*title, parent);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QDockWidget_QDockWidget4(QString const * title) {
  return new QDockWidget(*title);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_QDockWidget_QDockWidget5(QWidget * parent) {
  return new QDockWidget(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine2(QPainter * p, int x1, int y1, int x2, int y2, QPalette const * pal, bool sunken, int lineWidth) {
  qDrawShadeLine(p, x1, y1, x2, y2, *pal, sunken, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine3(QPainter * p, int x1, int y1, int x2, int y2, QPalette const * pal, bool sunken) {
  qDrawShadeLine(p, x1, y1, x2, y2, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine4(QPainter * p, int x1, int y1, int x2, int y2, QPalette const * pal) {
  qDrawShadeLine(p, x1, y1, x2, y2, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine5(QPainter * p, QPoint const * p1, QPoint const * p2, QPalette const * pal, bool sunken, int lineWidth) {
  qDrawShadeLine(p, *p1, *p2, *pal, sunken, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine6(QPainter * p, QPoint const * p1, QPoint const * p2, QPalette const * pal, bool sunken) {
  qDrawShadeLine(p, *p1, *p2, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeLine7(QPainter * p, QPoint const * p1, QPoint const * p2, QPalette const * pal) {
  qDrawShadeLine(p, *p1, *p2, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect2(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken, int lineWidth, int midLineWidth) {
  qDrawShadeRect(p, x, y, w, h, *pal, sunken, lineWidth, midLineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect3(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken, int lineWidth) {
  qDrawShadeRect(p, x, y, w, h, *pal, sunken, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect4(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken) {
  qDrawShadeRect(p, x, y, w, h, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect5(QPainter * p, int x, int y, int w, int h, QPalette const * pal) {
  qDrawShadeRect(p, x, y, w, h, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect6(QPainter * p, QRect const * r, QPalette const * pal, bool sunken, int lineWidth, int midLineWidth) {
  qDrawShadeRect(p, *r, *pal, sunken, lineWidth, midLineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect7(QPainter * p, QRect const * r, QPalette const * pal, bool sunken, int lineWidth) {
  qDrawShadeRect(p, *r, *pal, sunken, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect8(QPainter * p, QRect const * r, QPalette const * pal, bool sunken) {
  qDrawShadeRect(p, *r, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadeRect9(QPainter * p, QRect const * r, QPalette const * pal) {
  qDrawShadeRect(p, *r, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel2(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken, int lineWidth) {
  qDrawShadePanel(p, x, y, w, h, *pal, sunken, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel3(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken) {
  qDrawShadePanel(p, x, y, w, h, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel4(QPainter * p, int x, int y, int w, int h, QPalette const * pal) {
  qDrawShadePanel(p, x, y, w, h, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel5(QPainter * p, QRect const * r, QPalette const * pal, bool sunken, int lineWidth) {
  qDrawShadePanel(p, *r, *pal, sunken, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel6(QPainter * p, QRect const * r, QPalette const * pal, bool sunken) {
  qDrawShadePanel(p, *r, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawShadePanel7(QPainter * p, QRect const * r, QPalette const * pal) {
  qDrawShadePanel(p, *r, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinButton2(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken) {
  qDrawWinButton(p, x, y, w, h, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinButton3(QPainter * p, int x, int y, int w, int h, QPalette const * pal) {
  qDrawWinButton(p, x, y, w, h, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinButton4(QPainter * p, QRect const * r, QPalette const * pal, bool sunken) {
  qDrawWinButton(p, *r, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinButton5(QPainter * p, QRect const * r, QPalette const * pal) {
  qDrawWinButton(p, *r, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinPanel2(QPainter * p, int x, int y, int w, int h, QPalette const * pal, bool sunken) {
  qDrawWinPanel(p, x, y, w, h, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinPanel3(QPainter * p, int x, int y, int w, int h, QPalette const * pal) {
  qDrawWinPanel(p, x, y, w, h, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinPanel4(QPainter * p, QRect const * r, QPalette const * pal, bool sunken) {
  qDrawWinPanel(p, *r, *pal, sunken);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawWinPanel5(QPainter * p, QRect const * r, QPalette const * pal) {
  qDrawWinPanel(p, *r, *pal);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawPlainRect2(QPainter * p, int x, int y, int w, int h, QColor const * arg6, int lineWidth) {
  qDrawPlainRect(p, x, y, w, h, *arg6, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawPlainRect3(QPainter * p, int x, int y, int w, int h, QColor const * arg6) {
  qDrawPlainRect(p, x, y, w, h, *arg6);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawPlainRect4(QPainter * p, QRect const * r, QColor const * arg3, int lineWidth) {
  qDrawPlainRect(p, *r, *arg3, lineWidth);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawPlainRect5(QPainter * p, QRect const * r, QColor const * arg3) {
  qDrawPlainRect(p, *r, *arg3);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawBorderPixmap2(QPainter * painter, QRect const * targetRect, QMargins const * targetMargins, QPixmap const * pixmap, QRect const * sourceRect, QMargins const * sourceMargins, QTileRules const * rules) {
  qDrawBorderPixmap(painter, *targetRect, *targetMargins, *pixmap, *sourceRect, *sourceMargins, *rules);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_qDrawBorderPixmap3(QPainter * painter, QRect const * targetRect, QMargins const * targetMargins, QPixmap const * pixmap, QRect const * sourceRect, QMargins const * sourceMargins) {
  qDrawBorderPixmap(painter, *targetRect, *targetMargins, *pixmap, *sourceRect, *sourceMargins);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_QFileDialog_QFileDialog3(QWidget * parent, QString const * caption, QString const * directory) {
  return new QFileDialog(parent, *caption, *directory);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_QFileDialog_QFileDialog4(QWidget * parent, QString const * caption) {
  return new QFileDialog(parent, *caption);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_QFileDialog_QFileDialog5(QWidget * parent) {
  return new QFileDialog(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_setOption1(QFileDialog * this_ptr, QFileDialog::Option option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getOpenFileName1(QWidget * parent, QString const * caption, QString const * dir, QString const * filter, QString * selectedFilter) {
  return new QString(QFileDialog::getOpenFileName(parent, *caption, *dir, *filter, selectedFilter));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getOpenFileName2(QWidget * parent, QString const * caption, QString const * dir, QString const * filter) {
  return new QString(QFileDialog::getOpenFileName(parent, *caption, *dir, *filter));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getOpenFileName3(QWidget * parent, QString const * caption, QString const * dir) {
  return new QString(QFileDialog::getOpenFileName(parent, *caption, *dir));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getOpenFileName4(QWidget * parent, QString const * caption) {
  return new QString(QFileDialog::getOpenFileName(parent, *caption));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getOpenFileName5(QWidget * parent) {
  return new QString(QFileDialog::getOpenFileName(parent));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getOpenFileName6() {
  return new QString(QFileDialog::getOpenFileName());
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl1(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter, int options) {
  return new QUrl(QFileDialog::getOpenFileUrl(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl2(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter) {
  return new QUrl(QFileDialog::getOpenFileUrl(parent, *caption, *dir, *filter, selectedFilter));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl3(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter) {
  return new QUrl(QFileDialog::getOpenFileUrl(parent, *caption, *dir, *filter));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl4(QWidget * parent, QString const * caption, QUrl const * dir) {
  return new QUrl(QFileDialog::getOpenFileUrl(parent, *caption, *dir));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl5(QWidget * parent, QString const * caption) {
  return new QUrl(QFileDialog::getOpenFileUrl(parent, *caption));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl6(QWidget * parent) {
  return new QUrl(QFileDialog::getOpenFileUrl(parent));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrl7() {
  return new QUrl(QFileDialog::getOpenFileUrl());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getSaveFileName1(QWidget * parent, QString const * caption, QString const * dir, QString const * filter, QString * selectedFilter) {
  return new QString(QFileDialog::getSaveFileName(parent, *caption, *dir, *filter, selectedFilter));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getSaveFileName2(QWidget * parent, QString const * caption, QString const * dir, QString const * filter) {
  return new QString(QFileDialog::getSaveFileName(parent, *caption, *dir, *filter));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getSaveFileName3(QWidget * parent, QString const * caption, QString const * dir) {
  return new QString(QFileDialog::getSaveFileName(parent, *caption, *dir));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getSaveFileName4(QWidget * parent, QString const * caption) {
  return new QString(QFileDialog::getSaveFileName(parent, *caption));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getSaveFileName5(QWidget * parent) {
  return new QString(QFileDialog::getSaveFileName(parent));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getSaveFileName6() {
  return new QString(QFileDialog::getSaveFileName());
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl1(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter, int options) {
  return new QUrl(QFileDialog::getSaveFileUrl(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl2(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter) {
  return new QUrl(QFileDialog::getSaveFileUrl(parent, *caption, *dir, *filter, selectedFilter));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl3(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter) {
  return new QUrl(QFileDialog::getSaveFileUrl(parent, *caption, *dir, *filter));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl4(QWidget * parent, QString const * caption, QUrl const * dir) {
  return new QUrl(QFileDialog::getSaveFileUrl(parent, *caption, *dir));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl5(QWidget * parent, QString const * caption) {
  return new QUrl(QFileDialog::getSaveFileUrl(parent, *caption));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl6(QWidget * parent) {
  return new QUrl(QFileDialog::getSaveFileUrl(parent));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getSaveFileUrl7() {
  return new QUrl(QFileDialog::getSaveFileUrl());
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectory1(QWidget * parent, QString const * caption, QString const * dir) {
  return new QString(QFileDialog::getExistingDirectory(parent, *caption, *dir));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectory2(QWidget * parent, QString const * caption) {
  return new QString(QFileDialog::getExistingDirectory(parent, *caption));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectory3(QWidget * parent) {
  return new QString(QFileDialog::getExistingDirectory(parent));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectory4() {
  return new QString(QFileDialog::getExistingDirectory());
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectoryUrl1(QWidget * parent, QString const * caption, QUrl const * dir, int options) {
  return new QUrl(QFileDialog::getExistingDirectoryUrl(parent, *caption, *dir, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectoryUrl2(QWidget * parent, QString const * caption, QUrl const * dir) {
  return new QUrl(QFileDialog::getExistingDirectoryUrl(parent, *caption, *dir));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectoryUrl3(QWidget * parent, QString const * caption) {
  return new QUrl(QFileDialog::getExistingDirectoryUrl(parent, *caption));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectoryUrl4(QWidget * parent) {
  return new QUrl(QFileDialog::getExistingDirectoryUrl(parent));
}


RITUAL_EXPORT QUrl * ctr_qt_widgets_ffi_QFileDialog_getExistingDirectoryUrl5() {
  return new QUrl(QFileDialog::getExistingDirectoryUrl());
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_getOpenFileNames1(QWidget * parent, QString const * caption, QString const * dir, QString const * filter, QString * selectedFilter) {
  return new QStringList(QFileDialog::getOpenFileNames(parent, *caption, *dir, *filter, selectedFilter));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_getOpenFileNames2(QWidget * parent, QString const * caption, QString const * dir, QString const * filter) {
  return new QStringList(QFileDialog::getOpenFileNames(parent, *caption, *dir, *filter));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_getOpenFileNames3(QWidget * parent, QString const * caption, QString const * dir) {
  return new QStringList(QFileDialog::getOpenFileNames(parent, *caption, *dir));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_getOpenFileNames4(QWidget * parent, QString const * caption) {
  return new QStringList(QFileDialog::getOpenFileNames(parent, *caption));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_getOpenFileNames5(QWidget * parent) {
  return new QStringList(QFileDialog::getOpenFileNames(parent));
}


RITUAL_EXPORT QStringList * ctr_qt_widgets_ffi_QFileDialog_getOpenFileNames6() {
  return new QStringList(QFileDialog::getOpenFileNames());
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls1(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter, int options) {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls(parent, *caption, *dir, *filter, selectedFilter, QFlags< QFileDialog::Option >(options)));
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls2(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter, QString * selectedFilter) {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls(parent, *caption, *dir, *filter, selectedFilter));
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls3(QWidget * parent, QString const * caption, QUrl const * dir, QString const * filter) {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls(parent, *caption, *dir, *filter));
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls4(QWidget * parent, QString const * caption, QUrl const * dir) {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls(parent, *caption, *dir));
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls5(QWidget * parent, QString const * caption) {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls(parent, *caption));
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls6(QWidget * parent) {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls(parent));
}


RITUAL_EXPORT QList< QUrl > * ctr_qt_widgets_ffi_QFileDialog_getOpenFileUrls7() {
  return new QList< QUrl >(QFileDialog::getOpenFileUrls());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileDialog_saveFileContent1(QByteArray const * fileContent) {
  QFileDialog::saveFileContent(*fileContent);
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_index2(QFileSystemModel const * this_ptr, int row, int column) {
  return new QModelIndex(this_ptr->index(row, column));
}


RITUAL_EXPORT QModelIndex * ctr_qt_widgets_ffi_QFileSystemModel_index3(QFileSystemModel const * this_ptr, QString const * path) {
  return new QModelIndex(this_ptr->index(*path));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_hasChildren1(QFileSystemModel const * this_ptr) {
  return this_ptr->hasChildren();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_rowCount1(QFileSystemModel const * this_ptr) {
  return this_ptr->rowCount();
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QFileSystemModel_columnCount1(QFileSystemModel const * this_ptr) {
  return this_ptr->columnCount();
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QFileSystemModel_myComputer1(QFileSystemModel const * this_ptr) {
  return new QVariant(this_ptr->myComputer());
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QFileSystemModel_data1(QFileSystemModel const * this_ptr, QModelIndex const * index) {
  return new QVariant(this_ptr->data(*index));
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QFileSystemModel_setData1(QFileSystemModel * this_ptr, QModelIndex const * index, QVariant const * value) {
  return this_ptr->setData(*index, *value);
}


RITUAL_EXPORT QVariant * ctr_qt_widgets_ffi_QFileSystemModel_headerData1(QFileSystemModel const * this_ptr, int section, Qt::Orientation orientation) {
  return new QVariant(this_ptr->headerData(section, orientation));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_sort1(QFileSystemModel * this_ptr, int column) {
  this_ptr->sort(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFileSystemModel_setOption1(QFileSystemModel * this_ptr, QFileSystemModel::Option option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_QFontDialog_QFontDialog3(QFont const * initial) {
  return new QFontDialog(*initial);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QFontDialog_setOption1(QFontDialog * this_ptr, QFontDialog::FontDialogOption option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_getFont2(bool * ok) {
  return new QFont(QFontDialog::getFont(ok));
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_getFont3(bool * ok, QFont const * initial, QWidget * parent, QString const * title) {
  return new QFont(QFontDialog::getFont(ok, *initial, parent, *title));
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_getFont4(bool * ok, QFont const * initial, QWidget * parent) {
  return new QFont(QFontDialog::getFont(ok, *initial, parent));
}


RITUAL_EXPORT QFont * ctr_qt_widgets_ffi_QFontDialog_getFont5(bool * ok, QFont const * initial) {
  return new QFont(QFontDialog::getFont(ok, *initial));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setFlag1(QGraphicsItem * this_ptr, QGraphicsItem::GraphicsItemFlag flag) {
  this_ptr->setFlag(flag);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setCacheMode1(QGraphicsItem * this_ptr, QGraphicsItem::CacheMode mode) {
  this_ptr->setCacheMode(mode);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isBlockedByModalPanel1(QGraphicsItem const * this_ptr) {
  return this_ptr->isBlockedByModalPanel();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setFocus1(QGraphicsItem * this_ptr) {
  this_ptr->setFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ensureVisible2(QGraphicsItem * this_ptr, QRectF const * rect, int xmargin) {
  this_ptr->ensureVisible(*rect, xmargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ensureVisible3(QGraphicsItem * this_ptr, QRectF const * rect) {
  this_ptr->ensureVisible(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ensureVisible4(QGraphicsItem * this_ptr) {
  this_ptr->ensureVisible();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ensureVisible5(QGraphicsItem * this_ptr, double x, double y, double w, double h, int xmargin) {
  this_ptr->ensureVisible(x, y, w, h, xmargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_ensureVisible6(QGraphicsItem * this_ptr, double x, double y, double w, double h) {
  this_ptr->ensureVisible(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setMatrix1(QGraphicsItem * this_ptr, QMatrix const * matrix) {
  this_ptr->setMatrix(*matrix);
}


RITUAL_EXPORT QTransform * ctr_qt_widgets_ffi_QGraphicsItem_itemTransform1(QGraphicsItem const * this_ptr, QGraphicsItem const * other) {
  return new QTransform(this_ptr->itemTransform(other));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_setTransform1(QGraphicsItem * this_ptr, QTransform const * matrix) {
  this_ptr->setTransform(*matrix);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_collidesWithItem1(QGraphicsItem const * this_ptr, QGraphicsItem const * other) {
  return this_ptr->collidesWithItem(other);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_collidesWithPath1(QGraphicsItem const * this_ptr, QPainterPath const * path) {
  return this_ptr->collidesWithPath(*path);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsItem_collidingItems1(QGraphicsItem const * this_ptr) {
  return new QList< QGraphicsItem * >(this_ptr->collidingItems());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QGraphicsItem_isObscured2(QGraphicsItem const * this_ptr) {
  return this_ptr->isObscured();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_paint1(QGraphicsItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_update2(QGraphicsItem * this_ptr) {
  this_ptr->update();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItem_scroll1(QGraphicsItem * this_ptr, double dx, double dy) {
  this_ptr->scroll(dx, dy);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsObject_grabGesture1(QGraphicsObject * this_ptr, Qt::GestureType type) {
  this_ptr->grabGesture(type);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_QGraphicsPathItem_QGraphicsPathItem3(QPainterPath const * path) {
  return new QGraphicsPathItem(*path);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPathItem_paint1(QGraphicsPathItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsRectItem_QGraphicsRectItem4(QRectF const * rect) {
  return new QGraphicsRectItem(*rect);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsRectItem_QGraphicsRectItem5(double x, double y, double w, double h) {
  return new QGraphicsRectItem(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsRectItem_paint1(QGraphicsRectItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsEllipseItem_QGraphicsEllipseItem4(QRectF const * rect) {
  return new QGraphicsEllipseItem(*rect);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsEllipseItem_QGraphicsEllipseItem5(double x, double y, double w, double h) {
  return new QGraphicsEllipseItem(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsEllipseItem_paint1(QGraphicsEllipseItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_QGraphicsPolygonItem_QGraphicsPolygonItem3(QPolygonF const * polygon) {
  return new QGraphicsPolygonItem(*polygon);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsPolygonItem_paint1(QGraphicsPolygonItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsLineItem_QGraphicsLineItem4(QLineF const * line) {
  return new QGraphicsLineItem(*line);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsLineItem_QGraphicsLineItem5(double x1, double y1, double x2, double y2) {
  return new QGraphicsLineItem(x1, y1, x2, y2);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLineItem_paint1(QGraphicsLineItem * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT QGraphicsPixmapItem * ctr_qt_widgets_ffi_QGraphicsPixmapItem_QGraphicsPixmapItem3(QPixmap const * pixmap) {
  return new QGraphicsPixmapItem(*pixmap);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_QGraphicsTextItem_QGraphicsTextItem3(QString const * text) {
  return new QGraphicsTextItem(*text);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_QGraphicsSimpleTextItem_QGraphicsSimpleTextItem3(QString const * text) {
  return new QGraphicsSimpleTextItem(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsItemGroup_paint1(QGraphicsItemGroup * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLayoutItem_setSizePolicy2(QGraphicsLayoutItem * this_ptr, QSizePolicy::Policy hPolicy, QSizePolicy::Policy vPolicy) {
  this_ptr->setSizePolicy(hPolicy, vPolicy);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsLayoutItem_effectiveSizeHint1(QGraphicsLayoutItem const * this_ptr, Qt::SizeHint which) {
  return new QSizeF(this_ptr->effectiveSizeHint(which));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsAnchorLayout_addAnchors1(QGraphicsAnchorLayout * this_ptr, QGraphicsLayoutItem * firstItem, QGraphicsLayoutItem * secondItem) {
  this_ptr->addAnchors(firstItem, secondItem);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_addItem2(QGraphicsGridLayout * this_ptr, QGraphicsLayoutItem * item, int row, int column, int rowSpan, int columnSpan) {
  this_ptr->addItem(item, row, column, rowSpan, columnSpan);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsGridLayout_addItem3(QGraphicsGridLayout * this_ptr, QGraphicsLayoutItem * item, int row, int column) {
  this_ptr->addItem(item, row, column);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsGridLayout_sizeHint1(QGraphicsGridLayout const * this_ptr, Qt::SizeHint which) {
  return new QSizeF(this_ptr->sizeHint(which));
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_QGraphicsLinearLayout_QGraphicsLinearLayout3(Qt::Orientation orientation) {
  return new QGraphicsLinearLayout(orientation);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_addStretch1(QGraphicsLinearLayout * this_ptr) {
  this_ptr->addStretch();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_insertStretch1(QGraphicsLinearLayout * this_ptr, int index) {
  this_ptr->insertStretch(index);
}


RITUAL_EXPORT QSizeF * ctr_qt_widgets_ffi_QGraphicsLinearLayout_sizeHint1(QGraphicsLinearLayout const * this_ptr, Qt::SizeHint which) {
  return new QSizeF(this_ptr->sizeHint(which));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsLinearLayout_dump1(QGraphicsLinearLayout const * this_ptr) {
  this_ptr->dump();
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_QGraphicsWidget_QGraphicsWidget2(QGraphicsItem * parent) {
  return new QGraphicsWidget(parent);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QGraphicsWidget_grabShortcut1(QGraphicsWidget * this_ptr, QKeySequence const * sequence) {
  return this_ptr->grabShortcut(*sequence);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setShortcutEnabled1(QGraphicsWidget * this_ptr, int id) {
  this_ptr->setShortcutEnabled(id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setShortcutAutoRepeat1(QGraphicsWidget * this_ptr, int id) {
  this_ptr->setShortcutAutoRepeat(id);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_setAttribute1(QGraphicsWidget * this_ptr, Qt::WidgetAttribute attribute) {
  this_ptr->setAttribute(attribute);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_paint1(QGraphicsWidget * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paint(painter, option);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsWidget_paintWindowFrame1(QGraphicsWidget * this_ptr, QPainter * painter, QStyleOptionGraphicsItem const * option) {
  this_ptr->paintWindowFrame(painter, option);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_QGraphicsProxyWidget_QGraphicsProxyWidget2(QGraphicsItem * parent) {
  return new QGraphicsProxyWidget(parent);
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsScene_QGraphicsScene4(QRectF const * sceneRect) {
  return new QGraphicsScene(*sceneRect);
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_QGraphicsScene_QGraphicsScene5(double x, double y, double width, double height) {
  return new QGraphicsScene(x, y, width, height);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_render1(QGraphicsScene * this_ptr, QPainter * painter, QRectF const * target, QRectF const * source) {
  this_ptr->render(painter, *target, *source);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_render2(QGraphicsScene * this_ptr, QPainter * painter, QRectF const * target) {
  this_ptr->render(painter, *target);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_render3(QGraphicsScene * this_ptr, QPainter * painter) {
  this_ptr->render(painter);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items6(QGraphicsScene const * this_ptr) {
  return new QList< QGraphicsItem * >(this_ptr->items());
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items7(QGraphicsScene const * this_ptr, QPointF const * pos, Qt::ItemSelectionMode mode, Qt::SortOrder order) {
  return new QList< QGraphicsItem * >(this_ptr->items(*pos, mode, order));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items8(QGraphicsScene const * this_ptr, QPointF const * pos, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(*pos, mode));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items9(QGraphicsScene const * this_ptr, QPointF const * pos) {
  return new QList< QGraphicsItem * >(this_ptr->items(*pos));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items10(QGraphicsScene const * this_ptr, QRectF const * rect, Qt::ItemSelectionMode mode, Qt::SortOrder order) {
  return new QList< QGraphicsItem * >(this_ptr->items(*rect, mode, order));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items11(QGraphicsScene const * this_ptr, QRectF const * rect, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(*rect, mode));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items12(QGraphicsScene const * this_ptr, QRectF const * rect) {
  return new QList< QGraphicsItem * >(this_ptr->items(*rect));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items13(QGraphicsScene const * this_ptr, QPolygonF const * polygon, Qt::ItemSelectionMode mode, Qt::SortOrder order) {
  return new QList< QGraphicsItem * >(this_ptr->items(*polygon, mode, order));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items14(QGraphicsScene const * this_ptr, QPolygonF const * polygon, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(*polygon, mode));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items15(QGraphicsScene const * this_ptr, QPolygonF const * polygon) {
  return new QList< QGraphicsItem * >(this_ptr->items(*polygon));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items16(QGraphicsScene const * this_ptr, QPainterPath const * path, Qt::ItemSelectionMode mode, Qt::SortOrder order) {
  return new QList< QGraphicsItem * >(this_ptr->items(*path, mode, order));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items17(QGraphicsScene const * this_ptr, QPainterPath const * path, Qt::ItemSelectionMode mode) {
  return new QList< QGraphicsItem * >(this_ptr->items(*path, mode));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items18(QGraphicsScene const * this_ptr, QPainterPath const * path) {
  return new QList< QGraphicsItem * >(this_ptr->items(*path));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_collidingItems1(QGraphicsScene const * this_ptr, QGraphicsItem const * item) {
  return new QList< QGraphicsItem * >(this_ptr->collidingItems(item));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsScene_items19(QGraphicsScene const * this_ptr, double x, double y, double w, double h, Qt::ItemSelectionMode mode, Qt::SortOrder order) {
  return new QList< QGraphicsItem * >(this_ptr->items(x, y, w, h, mode, order));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSelectionArea3(QGraphicsScene * this_ptr, QPainterPath const * path, Qt::ItemSelectionMode mode) {
  this_ptr->setSelectionArea(*path, mode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSelectionArea4(QGraphicsScene * this_ptr, QPainterPath const * path) {
  this_ptr->setSelectionArea(*path);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSelectionArea5(QGraphicsScene * this_ptr, QPainterPath const * path, Qt::ItemSelectionOperation selectionOperation, Qt::ItemSelectionMode mode) {
  this_ptr->setSelectionArea(*path, selectionOperation, mode);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setSelectionArea6(QGraphicsScene * this_ptr, QPainterPath const * path, Qt::ItemSelectionOperation selectionOperation) {
  this_ptr->setSelectionArea(*path, selectionOperation);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsScene_addEllipse2(QGraphicsScene * this_ptr, QRectF const * rect, QPen const * pen) {
  return this_ptr->addEllipse(*rect, *pen);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsScene_addEllipse3(QGraphicsScene * this_ptr, QRectF const * rect) {
  return this_ptr->addEllipse(*rect);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsScene_addLine2(QGraphicsScene * this_ptr, QLineF const * line) {
  return this_ptr->addLine(*line);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_QGraphicsScene_addPath1(QGraphicsScene * this_ptr, QPainterPath const * path, QPen const * pen) {
  return this_ptr->addPath(*path, *pen);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_QGraphicsScene_addPath2(QGraphicsScene * this_ptr, QPainterPath const * path) {
  return this_ptr->addPath(*path);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_QGraphicsScene_addPolygon1(QGraphicsScene * this_ptr, QPolygonF const * polygon, QPen const * pen) {
  return this_ptr->addPolygon(*polygon, *pen);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_QGraphicsScene_addPolygon2(QGraphicsScene * this_ptr, QPolygonF const * polygon) {
  return this_ptr->addPolygon(*polygon);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsScene_addRect2(QGraphicsScene * this_ptr, QRectF const * rect, QPen const * pen) {
  return this_ptr->addRect(*rect, *pen);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsScene_addRect3(QGraphicsScene * this_ptr, QRectF const * rect) {
  return this_ptr->addRect(*rect);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_QGraphicsScene_addText1(QGraphicsScene * this_ptr, QString const * text) {
  return this_ptr->addText(*text);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_QGraphicsScene_addSimpleText1(QGraphicsScene * this_ptr, QString const * text) {
  return this_ptr->addSimpleText(*text);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_QGraphicsScene_addWidget1(QGraphicsScene * this_ptr, QWidget * widget) {
  return this_ptr->addWidget(widget);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsScene_addEllipse4(QGraphicsScene * this_ptr, double x, double y, double w, double h, QPen const * pen) {
  return this_ptr->addEllipse(x, y, w, h, *pen);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_QGraphicsScene_addEllipse5(QGraphicsScene * this_ptr, double x, double y, double w, double h) {
  return this_ptr->addEllipse(x, y, w, h);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_QGraphicsScene_addLine3(QGraphicsScene * this_ptr, double x1, double y1, double x2, double y2) {
  return this_ptr->addLine(x1, y1, x2, y2);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsScene_addRect4(QGraphicsScene * this_ptr, double x, double y, double w, double h, QPen const * pen) {
  return this_ptr->addRect(x, y, w, h, *pen);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_QGraphicsScene_addRect5(QGraphicsScene * this_ptr, double x, double y, double w, double h) {
  return this_ptr->addRect(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setFocusItem1(QGraphicsScene * this_ptr, QGraphicsItem * item) {
  this_ptr->setFocusItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_setFocus1(QGraphicsScene * this_ptr) {
  this_ptr->setFocus();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_invalidate2(QGraphicsScene * this_ptr, double x, double y, double w, double h) {
  this_ptr->invalidate(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_update2(QGraphicsScene * this_ptr) {
  this_ptr->update();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_invalidate3(QGraphicsScene * this_ptr, QRectF const * rect) {
  this_ptr->invalidate(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsScene_invalidate4(QGraphicsScene * this_ptr) {
  this_ptr->invalidate();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_ensureVisible1(QScrollArea * this_ptr, int x, int y, int xmargin) {
  this_ptr->ensureVisible(x, y, xmargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_ensureVisible2(QScrollArea * this_ptr, int x, int y) {
  this_ptr->ensureVisible(x, y);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_ensureWidgetVisible1(QScrollArea * this_ptr, QWidget * childWidget, int xmargin) {
  this_ptr->ensureWidgetVisible(childWidget, xmargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QScrollArea_ensureWidgetVisible2(QScrollArea * this_ptr, QWidget * childWidget) {
  this_ptr->ensureWidgetVisible(childWidget);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_QGraphicsView_QGraphicsView3(QGraphicsScene * scene) {
  return new QGraphicsView(scene);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setRenderHint1(QGraphicsView * this_ptr, QPainter::RenderHint hint) {
  this_ptr->setRenderHint(hint);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setOptimizationFlag1(QGraphicsView * this_ptr, QGraphicsView::OptimizationFlag flag) {
  this_ptr->setOptimizationFlag(flag);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setMatrix1(QGraphicsView * this_ptr, QMatrix const * matrix) {
  this_ptr->setMatrix(*matrix);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_setTransform1(QGraphicsView * this_ptr, QTransform const * matrix) {
  this_ptr->setTransform(*matrix);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible3(QGraphicsView * this_ptr, QRectF const * rect, int xmargin) {
  this_ptr->ensureVisible(*rect, xmargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible4(QGraphicsView * this_ptr, QRectF const * rect) {
  this_ptr->ensureVisible(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible5(QGraphicsView * this_ptr, double x, double y, double w, double h, int xmargin) {
  this_ptr->ensureVisible(x, y, w, h, xmargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible6(QGraphicsView * this_ptr, double x, double y, double w, double h) {
  this_ptr->ensureVisible(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible7(QGraphicsView * this_ptr, QGraphicsItem const * item, int xmargin) {
  this_ptr->ensureVisible(item, xmargin);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_ensureVisible8(QGraphicsView * this_ptr, QGraphicsItem const * item) {
  this_ptr->ensureVisible(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_fitInView3(QGraphicsView * this_ptr, QRectF const * rect) {
  this_ptr->fitInView(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_fitInView4(QGraphicsView * this_ptr, double x, double y, double w, double h) {
  this_ptr->fitInView(x, y, w, h);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_fitInView5(QGraphicsView * this_ptr, QGraphicsItem const * item) {
  this_ptr->fitInView(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_render1(QGraphicsView * this_ptr, QPainter * painter, QRectF const * target, QRect const * source) {
  this_ptr->render(painter, *target, *source);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_render2(QGraphicsView * this_ptr, QPainter * painter, QRectF const * target) {
  this_ptr->render(painter, *target);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_render3(QGraphicsView * this_ptr, QPainter * painter) {
  this_ptr->render(painter);
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items7(QGraphicsView const * this_ptr, QRect const * rect) {
  return new QList< QGraphicsItem * >(this_ptr->items(*rect));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items8(QGraphicsView const * this_ptr, int x, int y, int w, int h) {
  return new QList< QGraphicsItem * >(this_ptr->items(x, y, w, h));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items9(QGraphicsView const * this_ptr, QPolygon const * polygon) {
  return new QList< QGraphicsItem * >(this_ptr->items(*polygon));
}


RITUAL_EXPORT QList< QGraphicsItem * > * ctr_qt_widgets_ffi_QGraphicsView_items10(QGraphicsView const * this_ptr, QPainterPath const * path) {
  return new QList< QGraphicsItem * >(this_ptr->items(*path));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_invalidateScene1(QGraphicsView * this_ptr, QRectF const * rect) {
  this_ptr->invalidateScene(*rect);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QGraphicsView_invalidateScene2(QGraphicsView * this_ptr) {
  this_ptr->invalidateScene();
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_QGroupBox_QGroupBox3(QString const * title) {
  return new QGroupBox(*title);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_QHeaderView_QHeaderView2(Qt::Orientation orientation) {
  return new QHeaderView(orientation);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_QLineEdit_QLineEdit3(QString const * arg1) {
  return new QLineEdit(*arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_cursorForward1(QLineEdit * this_ptr, bool mark) {
  this_ptr->cursorForward(mark);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QLineEdit_cursorBackward1(QLineEdit * this_ptr, bool mark) {
  this_ptr->cursorBackward(mark);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_QInputDialog_QInputDialog2(QWidget * parent) {
  return new QInputDialog(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QInputDialog_setOption1(QInputDialog * this_ptr, QInputDialog::InputDialogOption option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getText1(QWidget * parent, QString const * title, QString const * label, QLineEdit::EchoMode echo, QString const * text, bool * ok, int flags) {
  return new QString(QInputDialog::getText(parent, *title, *label, echo, *text, ok, QFlags< Qt::WindowType >(flags)));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getText2(QWidget * parent, QString const * title, QString const * label, QLineEdit::EchoMode echo, QString const * text, bool * ok) {
  return new QString(QInputDialog::getText(parent, *title, *label, echo, *text, ok));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getText3(QWidget * parent, QString const * title, QString const * label, QLineEdit::EchoMode echo, QString const * text) {
  return new QString(QInputDialog::getText(parent, *title, *label, echo, *text));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getText4(QWidget * parent, QString const * title, QString const * label, QLineEdit::EchoMode echo) {
  return new QString(QInputDialog::getText(parent, *title, *label, echo));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getText5(QWidget * parent, QString const * title, QString const * label) {
  return new QString(QInputDialog::getText(parent, *title, *label));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getMultiLineText1(QWidget * parent, QString const * title, QString const * label, QString const * text, bool * ok, int flags) {
  return new QString(QInputDialog::getMultiLineText(parent, *title, *label, *text, ok, QFlags< Qt::WindowType >(flags)));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getMultiLineText2(QWidget * parent, QString const * title, QString const * label, QString const * text, bool * ok) {
  return new QString(QInputDialog::getMultiLineText(parent, *title, *label, *text, ok));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getMultiLineText3(QWidget * parent, QString const * title, QString const * label, QString const * text) {
  return new QString(QInputDialog::getMultiLineText(parent, *title, *label, *text));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getMultiLineText4(QWidget * parent, QString const * title, QString const * label) {
  return new QString(QInputDialog::getMultiLineText(parent, *title, *label));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getItem1(QWidget * parent, QString const * title, QString const * label, QStringList const * items, int current, bool editable, bool * ok, int flags) {
  return new QString(QInputDialog::getItem(parent, *title, *label, *items, current, editable, ok, QFlags< Qt::WindowType >(flags)));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getItem2(QWidget * parent, QString const * title, QString const * label, QStringList const * items, int current, bool editable, bool * ok) {
  return new QString(QInputDialog::getItem(parent, *title, *label, *items, current, editable, ok));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getItem3(QWidget * parent, QString const * title, QString const * label, QStringList const * items, int current, bool editable) {
  return new QString(QInputDialog::getItem(parent, *title, *label, *items, current, editable));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getItem4(QWidget * parent, QString const * title, QString const * label, QStringList const * items, int current) {
  return new QString(QInputDialog::getItem(parent, *title, *label, *items, current));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QInputDialog_getItem5(QWidget * parent, QString const * title, QString const * label, QStringList const * items) {
  return new QString(QInputDialog::getItem(parent, *title, *label, *items));
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_getInt1(QWidget * parent, QString const * title, QString const * label, int value, int minValue, int maxValue, int step, bool * ok) {
  return QInputDialog::getInt(parent, *title, *label, value, minValue, maxValue, step, ok);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_getInt2(QWidget * parent, QString const * title, QString const * label, int value, int minValue, int maxValue, int step) {
  return QInputDialog::getInt(parent, *title, *label, value, minValue, maxValue, step);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_getInt3(QWidget * parent, QString const * title, QString const * label, int value, int minValue, int maxValue) {
  return QInputDialog::getInt(parent, *title, *label, value, minValue, maxValue);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_getInt4(QWidget * parent, QString const * title, QString const * label, int value, int minValue) {
  return QInputDialog::getInt(parent, *title, *label, value, minValue);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_getInt5(QWidget * parent, QString const * title, QString const * label, int value) {
  return QInputDialog::getInt(parent, *title, *label, value);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QInputDialog_getInt6(QWidget * parent, QString const * title, QString const * label) {
  return QInputDialog::getInt(parent, *title, *label);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble2(QWidget * parent, QString const * title, QString const * label, double value, double minValue, double maxValue, int decimals, bool * ok) {
  return QInputDialog::getDouble(parent, *title, *label, value, minValue, maxValue, decimals, ok);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble3(QWidget * parent, QString const * title, QString const * label, double value, double minValue, double maxValue, int decimals) {
  return QInputDialog::getDouble(parent, *title, *label, value, minValue, maxValue, decimals);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble4(QWidget * parent, QString const * title, QString const * label, double value, double minValue, double maxValue) {
  return QInputDialog::getDouble(parent, *title, *label, value, minValue, maxValue);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble5(QWidget * parent, QString const * title, QString const * label, double value, double minValue) {
  return QInputDialog::getDouble(parent, *title, *label, value, minValue);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble6(QWidget * parent, QString const * title, QString const * label, double value) {
  return QInputDialog::getDouble(parent, *title, *label, value);
}


RITUAL_EXPORT double ctr_qt_widgets_ffi_QInputDialog_getDouble7(QWidget * parent, QString const * title, QString const * label) {
  return QInputDialog::getDouble(parent, *title, *label);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_QKeyEventTransition_QKeyEventTransition3(QObject * object, QEvent::Type type, int key) {
  return new QKeyEventTransition(object, type, key);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_QKeySequenceEdit_QKeySequenceEdit3(QKeySequence const * keySequence) {
  return new QKeySequenceEdit(*keySequence);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_QLabel_QLabel3(QWidget * parent) {
  return new QLabel(parent);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_QLabel_QLabel4(QString const * text, QWidget * parent) {
  return new QLabel(*text, parent);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_QLabel_QLabel5(QString const * text) {
  return new QLabel(*text);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_QLCDNumber_QLCDNumber3(unsigned int numDigits) {
  return new QLCDNumber(numDigits);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListView_scrollTo1(QListView * this_ptr, QModelIndex const * index) {
  this_ptr->scrollTo(*index);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem5(QListWidget * listview) {
  return new QListWidgetItem(listview);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem6(QString const * text, QListWidget * listview) {
  return new QListWidgetItem(*text, listview);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem7(QString const * text) {
  return new QListWidgetItem(*text);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem8(QIcon const * icon, QString const * text, QListWidget * listview) {
  return new QListWidgetItem(*icon, *text, listview);
}


RITUAL_EXPORT QListWidgetItem * ctr_qt_widgets_ffi_QListWidgetItem_QListWidgetItem9(QIcon const * icon, QString const * text) {
  return new QListWidgetItem(*icon, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_sortItems1(QListWidget * this_ptr) {
  this_ptr->sortItems();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QListWidget_scrollToItem1(QListWidget * this_ptr, QListWidgetItem const * item) {
  this_ptr->scrollToItem(item);
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_QMainWindow_QMainWindow2(QWidget * parent) {
  return new QMainWindow(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMainWindow_addToolBarBreak1(QMainWindow * this_ptr) {
  this_ptr->addToolBarBreak();
}


RITUAL_EXPORT QByteArray * ctr_qt_widgets_ffi_QMainWindow_saveState1(QMainWindow const * this_ptr) {
  return new QByteArray(this_ptr->saveState());
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QMainWindow_restoreState1(QMainWindow * this_ptr, QByteArray const * state) {
  return this_ptr->restoreState(*state);
}


RITUAL_EXPORT QList< QMdiSubWindow * > * ctr_qt_widgets_ffi_QMdiArea_subWindowList1(QMdiArea const * this_ptr) {
  return new QList< QMdiSubWindow * >(this_ptr->subWindowList());
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QMdiArea_addSubWindow1(QMdiArea * this_ptr, QWidget * widget) {
  return this_ptr->addSubWindow(widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiArea_setOption1(QMdiArea * this_ptr, QMdiArea::AreaOption option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_QMdiSubWindow_QMdiSubWindow2(QWidget * parent) {
  return new QMdiSubWindow(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMdiSubWindow_setOption1(QMdiSubWindow * this_ptr, QMdiSubWindow::SubWindowOption option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_QMenu_QMenu3(QString const * title) {
  return new QMenu(*title);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addAction4(QMenu * this_ptr, QString const * text, QObject const * receiver, char const * member) {
  return this_ptr->addAction(*text, receiver, member);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_addAction5(QMenu * this_ptr, QIcon const * icon, QString const * text, QObject const * receiver, char const * member) {
  return this_ptr->addAction(*icon, *text, receiver, member);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenu_popup1(QMenu * this_ptr, QPoint const * pos) {
  this_ptr->popup(*pos);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_exec3(QMenu * this_ptr, QPoint const * pos) {
  return this_ptr->exec(*pos);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_exec4(QList< QAction * > const * actions, QPoint const * pos, QAction * at) {
  return QMenu::exec(*actions, *pos, at);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QMenu_exec5(QList< QAction * > const * actions, QPoint const * pos) {
  return QMenu::exec(*actions, *pos);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMenuBar_setCornerWidget1(QMenuBar * this_ptr, QWidget * w) {
  this_ptr->setCornerWidget(w);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_QMenuBar_cornerWidget1(QMenuBar const * this_ptr) {
  return this_ptr->cornerWidget();
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox4(QMessageBox::Icon icon, QString const * title, QString const * text, int buttons, QWidget * parent) {
  return new QMessageBox(icon, *title, *text, QFlags< QMessageBox::StandardButton >(buttons), parent);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox5(QMessageBox::Icon icon, QString const * title, QString const * text, int buttons) {
  return new QMessageBox(icon, *title, *text, QFlags< QMessageBox::StandardButton >(buttons));
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox6(QMessageBox::Icon icon, QString const * title, QString const * text) {
  return new QMessageBox(icon, *title, *text);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_information4(QWidget * parent, QString const * title, QString const * text, int buttons) {
  return QMessageBox::information(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons));
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_information5(QWidget * parent, QString const * title, QString const * text) {
  return QMessageBox::information(parent, *title, *text);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_question4(QWidget * parent, QString const * title, QString const * text, int buttons) {
  return QMessageBox::question(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons));
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_question5(QWidget * parent, QString const * title, QString const * text) {
  return QMessageBox::question(parent, *title, *text);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_warning4(QWidget * parent, QString const * title, QString const * text, int buttons) {
  return QMessageBox::warning(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons));
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_warning5(QWidget * parent, QString const * title, QString const * text) {
  return QMessageBox::warning(parent, *title, *text);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_critical4(QWidget * parent, QString const * title, QString const * text, int buttons) {
  return QMessageBox::critical(parent, *title, *text, QFlags< QMessageBox::StandardButton >(buttons));
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_critical5(QWidget * parent, QString const * title, QString const * text) {
  return QMessageBox::critical(parent, *title, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QMessageBox_aboutQt1(QWidget * parent) {
  QMessageBox::aboutQt(parent);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox7(QString const * title, QString const * text, QMessageBox::Icon icon, int button0, int button1, int button2, QWidget * parent) {
  return new QMessageBox(*title, *text, icon, button0, button1, button2, parent);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_QMessageBox_QMessageBox8(QString const * title, QString const * text, QMessageBox::Icon icon, int button0, int button1, int button2) {
  return new QMessageBox(*title, *text, icon, button0, button1, button2);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information6(QWidget * parent, QString const * title, QString const * text, int button0, int button1) {
  return QMessageBox::information(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information7(QWidget * parent, QString const * title, QString const * text, int button0) {
  return QMessageBox::information(parent, *title, *text, button0);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information8(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber) {
  return QMessageBox::information(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information9(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text) {
  return QMessageBox::information(parent, *title, *text, *button0Text, *button1Text, *button2Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information10(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text) {
  return QMessageBox::information(parent, *title, *text, *button0Text, *button1Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_information11(QWidget * parent, QString const * title, QString const * text, QString const * button0Text) {
  return QMessageBox::information(parent, *title, *text, *button0Text);
}


RITUAL_EXPORT QMessageBox::StandardButton ctr_qt_widgets_ffi_QMessageBox_information12(QWidget * parent, QString const * title, QString const * text, QMessageBox::StandardButton button0) {
  return QMessageBox::information(parent, *title, *text, button0);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question6(QWidget * parent, QString const * title, QString const * text, int button0, int button1) {
  return QMessageBox::question(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question7(QWidget * parent, QString const * title, QString const * text, int button0) {
  return QMessageBox::question(parent, *title, *text, button0);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question8(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber) {
  return QMessageBox::question(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question9(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text) {
  return QMessageBox::question(parent, *title, *text, *button0Text, *button1Text, *button2Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question10(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text) {
  return QMessageBox::question(parent, *title, *text, *button0Text, *button1Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_question11(QWidget * parent, QString const * title, QString const * text, QString const * button0Text) {
  return QMessageBox::question(parent, *title, *text, *button0Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning6(QWidget * parent, QString const * title, QString const * text, int button0, int button1) {
  return QMessageBox::warning(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning7(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber) {
  return QMessageBox::warning(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning8(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text) {
  return QMessageBox::warning(parent, *title, *text, *button0Text, *button1Text, *button2Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning9(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text) {
  return QMessageBox::warning(parent, *title, *text, *button0Text, *button1Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_warning10(QWidget * parent, QString const * title, QString const * text, QString const * button0Text) {
  return QMessageBox::warning(parent, *title, *text, *button0Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical6(QWidget * parent, QString const * title, QString const * text, int button0, int button1) {
  return QMessageBox::critical(parent, *title, *text, button0, button1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical7(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text, int defaultButtonNumber) {
  return QMessageBox::critical(parent, *title, *text, *button0Text, *button1Text, *button2Text, defaultButtonNumber);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical8(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text, QString const * button2Text) {
  return QMessageBox::critical(parent, *title, *text, *button0Text, *button1Text, *button2Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical9(QWidget * parent, QString const * title, QString const * text, QString const * button0Text, QString const * button1Text) {
  return QMessageBox::critical(parent, *title, *text, *button0Text, *button1Text);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QMessageBox_critical10(QWidget * parent, QString const * title, QString const * text, QString const * button0Text) {
  return QMessageBox::critical(parent, *title, *text, *button0Text);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_QMouseEventTransition_QMouseEventTransition3(QObject * object, QEvent::Type type, Qt::MouseButton button) {
  return new QMouseEventTransition(object, type, button);
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_QOpenGLWidget_QOpenGLWidget2(QWidget * parent) {
  return new QOpenGLWidget(parent);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_QTextEdit_QTextEdit3(QString const * text) {
  return new QTextEdit(*text);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_find3(QTextEdit * this_ptr, QString const * exp) {
  return this_ptr->find(*exp);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_find4(QTextEdit * this_ptr, QRegExp const * exp) {
  return this_ptr->find(*exp);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTextEdit_find5(QTextEdit * this_ptr, QRegularExpression const * exp) {
  return this_ptr->find(*exp);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_QTextEdit_toMarkdown1(QTextEdit const * this_ptr) {
  return new QString(this_ptr->toMarkdown());
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_moveCursor1(QTextEdit * this_ptr, QTextCursor::MoveOperation operation) {
  this_ptr->moveCursor(operation);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_zoomIn1(QTextEdit * this_ptr) {
  this_ptr->zoomIn();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTextEdit_zoomOut1(QTextEdit * this_ptr) {
  this_ptr->zoomOut();
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_QPlainTextEdit_QPlainTextEdit3(QString const * text) {
  return new QPlainTextEdit(*text);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_find3(QPlainTextEdit * this_ptr, QString const * exp) {
  return this_ptr->find(*exp);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_find4(QPlainTextEdit * this_ptr, QRegExp const * exp) {
  return this_ptr->find(*exp);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QPlainTextEdit_find5(QPlainTextEdit * this_ptr, QRegularExpression const * exp) {
  return this_ptr->find(*exp);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_moveCursor1(QPlainTextEdit * this_ptr, QTextCursor::MoveOperation operation) {
  this_ptr->moveCursor(operation);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_zoomIn1(QPlainTextEdit * this_ptr) {
  this_ptr->zoomIn();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QPlainTextEdit_zoomOut1(QPlainTextEdit * this_ptr) {
  this_ptr->zoomOut();
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_QProgressDialog_QProgressDialog3(QWidget * parent) {
  return new QProgressDialog(parent);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_QProgressDialog_QProgressDialog4(QString const * labelText, QString const * cancelButtonText, int minimum, int maximum, QWidget * parent) {
  return new QProgressDialog(*labelText, *cancelButtonText, minimum, maximum, parent);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_QProgressDialog_QProgressDialog5(QString const * labelText, QString const * cancelButtonText, int minimum, int maximum) {
  return new QProgressDialog(*labelText, *cancelButtonText, minimum, maximum);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawPrimitive1(QProxyStyle const * this_ptr, QStyle::PrimitiveElement element, QStyleOption const * option, QPainter * painter) {
  this_ptr->drawPrimitive(element, option, painter);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawControl1(QProxyStyle const * this_ptr, QStyle::ControlElement element, QStyleOption const * option, QPainter * painter) {
  this_ptr->drawControl(element, option, painter);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawComplexControl1(QProxyStyle const * this_ptr, QStyle::ComplexControl control, QStyleOptionComplex const * option, QPainter * painter) {
  this_ptr->drawComplexControl(control, option, painter);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QProxyStyle_drawItemText1(QProxyStyle const * this_ptr, QPainter * painter, QRect const * rect, int flags, QPalette const * pal, bool enabled, QString const * text) {
  this_ptr->drawItemText(painter, *rect, flags, *pal, enabled, *text);
}


RITUAL_EXPORT QStyle::SubControl ctr_qt_widgets_ffi_QProxyStyle_hitTestComplexControl1(QProxyStyle const * this_ptr, QStyle::ComplexControl control, QStyleOptionComplex const * option, QPoint const * pos) {
  return this_ptr->hitTestComplexControl(control, option, *pos);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_styleHint1(QProxyStyle const * this_ptr, QStyle::StyleHint hint, QStyleOption const * option, QWidget const * widget) {
  return this_ptr->styleHint(hint, option, widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_styleHint2(QProxyStyle const * this_ptr, QStyle::StyleHint hint, QStyleOption const * option) {
  return this_ptr->styleHint(hint, option);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_styleHint3(QProxyStyle const * this_ptr, QStyle::StyleHint hint) {
  return this_ptr->styleHint(hint);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_pixelMetric1(QProxyStyle const * this_ptr, QStyle::PixelMetric metric, QStyleOption const * option) {
  return this_ptr->pixelMetric(metric, option);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_pixelMetric2(QProxyStyle const * this_ptr, QStyle::PixelMetric metric) {
  return this_ptr->pixelMetric(metric);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_layoutSpacing1(QProxyStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, QStyleOption const * option) {
  return this_ptr->layoutSpacing(control1, control2, orientation, option);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QProxyStyle_layoutSpacing2(QProxyStyle const * this_ptr, QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation) {
  return this_ptr->layoutSpacing(control1, control2, orientation);
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QProxyStyle_standardIcon1(QProxyStyle const * this_ptr, QStyle::StandardPixmap standardIcon, QStyleOption const * option) {
  return new QIcon(this_ptr->standardIcon(standardIcon, option));
}


RITUAL_EXPORT QIcon * ctr_qt_widgets_ffi_QProxyStyle_standardIcon2(QProxyStyle const * this_ptr, QStyle::StandardPixmap standardIcon) {
  return new QIcon(this_ptr->standardIcon(standardIcon));
}


RITUAL_EXPORT QPixmap * ctr_qt_widgets_ffi_QProxyStyle_standardPixmap1(QProxyStyle const * this_ptr, QStyle::StandardPixmap standardPixmap, QStyleOption const * opt) {
  return new QPixmap(this_ptr->standardPixmap(standardPixmap, opt));
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_QRadioButton_QRadioButton3(QString const * text) {
  return new QRadioButton(*text);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_QScrollBar_QScrollBar3(Qt::Orientation arg1) {
  return new QScrollBar(arg1);
}


RITUAL_EXPORT Qt::GestureType ctr_qt_widgets_ffi_QScroller_grabGesture1(QObject * target) {
  return QScroller::grabGesture(target);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QScroller_handleInput1(QScroller * this_ptr, QScroller::Input input, QPointF const * position) {
  return this_ptr->handleInput(input, *position);
}


RITUAL_EXPORT QShortcut * ctr_qt_widgets_ffi_QShortcut_QShortcut4(QKeySequence const * key, QWidget * parent, char const * member, char const * ambiguousMember) {
  return new QShortcut(*key, parent, member, ambiguousMember);
}


RITUAL_EXPORT QShortcut * ctr_qt_widgets_ffi_QShortcut_QShortcut5(QKeySequence const * key, QWidget * parent, char const * member) {
  return new QShortcut(*key, parent, member);
}


RITUAL_EXPORT QShortcut * ctr_qt_widgets_ffi_QShortcut_QShortcut6(QKeySequence const * key, QWidget * parent) {
  return new QShortcut(*key, parent);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen4(QPixmap const * pixmap) {
  return new QSplashScreen(*pixmap);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen5(QScreen * screen, QPixmap const * pixmap) {
  return new QSplashScreen(screen, *pixmap);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen6(QScreen * screen) {
  return new QSplashScreen(screen);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen7(QWidget * parent, QPixmap const * pixmap) {
  return new QSplashScreen(parent, *pixmap);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_QSplashScreen_QSplashScreen8(QWidget * parent) {
  return new QSplashScreen(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_showMessage1(QSplashScreen * this_ptr, QString const * message, int alignment) {
  this_ptr->showMessage(*message, alignment);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplashScreen_showMessage2(QSplashScreen * this_ptr, QString const * message) {
  this_ptr->showMessage(*message);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_QSplitter_QSplitter3(Qt::Orientation arg1) {
  return new QSplitter(arg1);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSplitter_setOpaqueResize1(QSplitter * this_ptr) {
  this_ptr->setOpaqueResize();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_addWidget1(QStatusBar * this_ptr, QWidget * widget) {
  this_ptr->addWidget(widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStatusBar_insertWidget1(QStatusBar * this_ptr, int index, QWidget * widget) {
  return this_ptr->insertWidget(index, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_addPermanentWidget1(QStatusBar * this_ptr, QWidget * widget) {
  this_ptr->addPermanentWidget(widget);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_QStatusBar_insertPermanentWidget1(QStatusBar * this_ptr, int index, QWidget * widget) {
  return this_ptr->insertPermanentWidget(index, widget);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStatusBar_showMessage1(QStatusBar * this_ptr, QString const * text) {
  this_ptr->showMessage(*text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QStylePainter_drawItemText1(QStylePainter * this_ptr, QRect const * r, int flags, QPalette const * pal, bool enabled, QString const * text) {
  this_ptr->drawItemText(*r, flags, *pal, enabled, *text);
}


RITUAL_EXPORT QSystemTrayIcon * ctr_qt_widgets_ffi_QSystemTrayIcon_QSystemTrayIcon3(QIcon const * icon) {
  return new QSystemTrayIcon(*icon);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_showMessage2(QSystemTrayIcon * this_ptr, QString const * title, QString const * msg, QIcon const * icon) {
  this_ptr->showMessage(*title, *msg, *icon);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_showMessage3(QSystemTrayIcon * this_ptr, QString const * title, QString const * msg, QSystemTrayIcon::MessageIcon icon) {
  this_ptr->showMessage(*title, *msg, icon);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QSystemTrayIcon_showMessage4(QSystemTrayIcon * this_ptr, QString const * title, QString const * msg) {
  this_ptr->showMessage(*title, *msg);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableView_scrollTo1(QTableView * this_ptr, QModelIndex const * index) {
  this_ptr->scrollTo(*index);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_QTableWidgetItem5(QString const * text) {
  return new QTableWidgetItem(*text);
}


RITUAL_EXPORT QTableWidgetItem * ctr_qt_widgets_ffi_QTableWidgetItem_QTableWidgetItem6(QIcon const * icon, QString const * text) {
  return new QTableWidgetItem(*icon, *text);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_QTableWidget_QTableWidget3(int rows, int columns) {
  return new QTableWidget(rows, columns);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_sortItems1(QTableWidget * this_ptr, int column) {
  this_ptr->sortItems(column);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTableWidget_scrollToItem1(QTableWidget * this_ptr, QTableWidgetItem const * item) {
  this_ptr->scrollToItem(item);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_QToolBar_QToolBar3(QString const * title) {
  return new QToolBar(*title);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_QToolBox_QToolBox2(QWidget * parent) {
  return new QToolBox(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QToolTip_showText3(QPoint const * pos, QString const * text) {
  QToolTip::showText(*pos, *text);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_scrollTo1(QTreeView * this_ptr, QModelIndex const * index) {
  this_ptr->scrollTo(*index);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_dataChanged1(QTreeView * this_ptr, QModelIndex const * topLeft, QModelIndex const * bottomRight) {
  this_ptr->dataChanged(*topLeft, *bottomRight);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeView_expandRecursively1(QTreeView * this_ptr, QModelIndex const * index) {
  this_ptr->expandRecursively(*index);
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_QTreeWidgetItemIterator4(QTreeWidget * widget) {
  return new QTreeWidgetItemIterator(widget);
}


RITUAL_EXPORT QTreeWidgetItemIterator * ctr_qt_widgets_ffi_QTreeWidgetItemIterator_QTreeWidgetItemIterator5(QTreeWidgetItem * item) {
  return new QTreeWidgetItemIterator(item);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem10(QStringList const * strings) {
  return new QTreeWidgetItem(*strings);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem11(QTreeWidget * treeview) {
  return new QTreeWidgetItem(treeview);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem12(QTreeWidget * treeview, QStringList const * strings) {
  return new QTreeWidgetItem(treeview, *strings);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem13(QTreeWidget * treeview, QTreeWidgetItem * after) {
  return new QTreeWidgetItem(treeview, after);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem14(QTreeWidgetItem * parent) {
  return new QTreeWidgetItem(parent);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem15(QTreeWidgetItem * parent, QStringList const * strings) {
  return new QTreeWidgetItem(parent, *strings);
}


RITUAL_EXPORT QTreeWidgetItem * ctr_qt_widgets_ffi_QTreeWidgetItem_QTreeWidgetItem16(QTreeWidgetItem * parent, QTreeWidgetItem * after) {
  return new QTreeWidgetItem(parent, after);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_editItem1(QTreeWidget * this_ptr, QTreeWidgetItem * item) {
  this_ptr->editItem(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_openPersistentEditor1(QTreeWidget * this_ptr, QTreeWidgetItem * item) {
  this_ptr->openPersistentEditor(item);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_closePersistentEditor1(QTreeWidget * this_ptr, QTreeWidgetItem * item) {
  this_ptr->closePersistentEditor(item);
}


RITUAL_EXPORT bool ctr_qt_widgets_ffi_QTreeWidget_isPersistentEditorOpen1(QTreeWidget const * this_ptr, QTreeWidgetItem * item) {
  return this_ptr->isPersistentEditorOpen(item);
}


RITUAL_EXPORT QList< QTreeWidgetItem * > * ctr_qt_widgets_ffi_QTreeWidget_findItems1(QTreeWidget const * this_ptr, QString const * text, int flags) {
  return new QList< QTreeWidgetItem * >(this_ptr->findItems(*text, QFlags< Qt::MatchFlag >(flags)));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QTreeWidget_scrollToItem1(QTreeWidget * this_ptr, QTreeWidgetItem const * item) {
  this_ptr->scrollToItem(item);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoGroup_createUndoAction1(QUndoGroup const * this_ptr, QObject * parent) {
  return this_ptr->createUndoAction(parent);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoGroup_createRedoAction1(QUndoGroup const * this_ptr, QObject * parent) {
  return this_ptr->createRedoAction(parent);
}


RITUAL_EXPORT QUndoCommand * ctr_qt_widgets_ffi_QUndoCommand_QUndoCommand3(QString const * text) {
  return new QUndoCommand(*text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoStack_createUndoAction1(QUndoStack const * this_ptr, QObject * parent) {
  return this_ptr->createUndoAction(parent);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QUndoStack_createRedoAction1(QUndoStack const * this_ptr, QObject * parent) {
  return this_ptr->createRedoAction(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QUndoStack_setActive1(QUndoStack * this_ptr) {
  this_ptr->setActive();
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_QUndoView_QUndoView4(QUndoStack * stack) {
  return new QUndoView(stack);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_QUndoView_QUndoView5(QUndoGroup * group) {
  return new QUndoView(group);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWhatsThis_showText1(QPoint const * pos, QString const * text) {
  QWhatsThis::showText(*pos, *text);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_QWhatsThis_createAction1() {
  return QWhatsThis::createAction();
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_QWizard_QWizard2(QWidget * parent) {
  return new QWizard(parent);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_QWizard_setOption1(QWizard * this_ptr, QWizard::WizardOption option) {
  this_ptr->setOption(option);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr(QObject * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr(QWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_dynamic_cast_QWidget_ptr(QObject * ptr) {
  return dynamic_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr1(QPaintDevice * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr(QWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_dynamic_cast_QWidget_ptr1(QPaintDevice * ptr) {
  return dynamic_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr(QWidget * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr2(QAbstractButton * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_dynamic_cast_QAbstractButton_ptr(QWidget * ptr) {
  return dynamic_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr1(QObject * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr1(QAbstractButton * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_dynamic_cast_QAbstractButton_ptr1(QObject * ptr) {
  return dynamic_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr2(QPaintDevice * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr1(QAbstractButton * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_dynamic_cast_QAbstractButton_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr(QWidget * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr3(QAbstractSpinBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QAbstractSpinBox_ptr(QWidget * ptr) {
  return dynamic_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr1(QObject * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr2(QAbstractSpinBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QAbstractSpinBox_ptr1(QObject * ptr) {
  return dynamic_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr2(QPaintDevice * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr2(QAbstractSpinBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QAbstractSpinBox_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_static_cast_QAbstractSlider_ptr(QWidget * ptr) {
  return static_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr4(QAbstractSlider * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_dynamic_cast_QAbstractSlider_ptr(QWidget * ptr) {
  return dynamic_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_static_cast_QAbstractSlider_ptr1(QObject * ptr) {
  return static_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr3(QAbstractSlider * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_dynamic_cast_QAbstractSlider_ptr1(QObject * ptr) {
  return dynamic_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_static_cast_QAbstractSlider_ptr2(QPaintDevice * ptr) {
  return static_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr3(QAbstractSlider * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_dynamic_cast_QAbstractSlider_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_static_cast_QSlider_ptr(QAbstractSlider * ptr) {
  return static_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_static_cast_QAbstractSlider_ptr3(QSlider * ptr) {
  return static_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_dynamic_cast_QSlider_ptr(QAbstractSlider * ptr) {
  return dynamic_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_static_cast_QSlider_ptr1(QWidget * ptr) {
  return static_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr5(QSlider * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_dynamic_cast_QSlider_ptr1(QWidget * ptr) {
  return dynamic_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_static_cast_QSlider_ptr2(QObject * ptr) {
  return static_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr4(QSlider * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_dynamic_cast_QSlider_ptr2(QObject * ptr) {
  return dynamic_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_static_cast_QSlider_ptr3(QPaintDevice * ptr) {
  return static_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr4(QSlider * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QSlider * ctr_qt_widgets_ffi_dynamic_cast_QSlider_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QSlider * >(ptr);
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_static_cast_QStyle_ptr(QObject * ptr) {
  return static_cast< QStyle * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr5(QStyle * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_dynamic_cast_QStyle_ptr(QObject * ptr) {
  return dynamic_cast< QStyle * >(ptr);
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_static_cast_QTabBar_ptr(QWidget * ptr) {
  return static_cast< QTabBar * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr6(QTabBar * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_dynamic_cast_QTabBar_ptr(QWidget * ptr) {
  return dynamic_cast< QTabBar * >(ptr);
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_static_cast_QTabBar_ptr1(QObject * ptr) {
  return static_cast< QTabBar * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr6(QTabBar * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_dynamic_cast_QTabBar_ptr1(QObject * ptr) {
  return dynamic_cast< QTabBar * >(ptr);
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_static_cast_QTabBar_ptr2(QPaintDevice * ptr) {
  return static_cast< QTabBar * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr5(QTabBar * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTabBar * ctr_qt_widgets_ffi_dynamic_cast_QTabBar_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QTabBar * >(ptr);
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_static_cast_QTabWidget_ptr(QWidget * ptr) {
  return static_cast< QTabWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr7(QTabWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_dynamic_cast_QTabWidget_ptr(QWidget * ptr) {
  return dynamic_cast< QTabWidget * >(ptr);
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_static_cast_QTabWidget_ptr1(QObject * ptr) {
  return static_cast< QTabWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr7(QTabWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_dynamic_cast_QTabWidget_ptr1(QObject * ptr) {
  return dynamic_cast< QTabWidget * >(ptr);
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_static_cast_QTabWidget_ptr2(QPaintDevice * ptr) {
  return static_cast< QTabWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr6(QTabWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTabWidget * ctr_qt_widgets_ffi_dynamic_cast_QTabWidget_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QTabWidget * >(ptr);
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_static_cast_QRubberBand_ptr(QWidget * ptr) {
  return static_cast< QRubberBand * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr8(QRubberBand * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_dynamic_cast_QRubberBand_ptr(QWidget * ptr) {
  return dynamic_cast< QRubberBand * >(ptr);
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_static_cast_QRubberBand_ptr1(QObject * ptr) {
  return static_cast< QRubberBand * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr8(QRubberBand * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_dynamic_cast_QRubberBand_ptr1(QObject * ptr) {
  return dynamic_cast< QRubberBand * >(ptr);
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_static_cast_QRubberBand_ptr2(QPaintDevice * ptr) {
  return static_cast< QRubberBand * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr7(QRubberBand * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QRubberBand * ctr_qt_widgets_ffi_dynamic_cast_QRubberBand_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QRubberBand * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr(QWidget * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr9(QFrame * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_dynamic_cast_QFrame_ptr(QWidget * ptr) {
  return dynamic_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr1(QObject * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr9(QFrame * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_dynamic_cast_QFrame_ptr1(QObject * ptr) {
  return dynamic_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr2(QPaintDevice * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr8(QFrame * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_dynamic_cast_QFrame_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QStyleOptionFocusRect * ctr_qt_widgets_ffi_static_cast_QStyleOptionFocusRect_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionFocusRect * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr(QStyleOptionFocusRect * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionFrame * ctr_qt_widgets_ffi_static_cast_QStyleOptionFrame_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionFrame * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr1(QStyleOptionFrame * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionTabWidgetFrame * ctr_qt_widgets_ffi_static_cast_QStyleOptionTabWidgetFrame_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionTabWidgetFrame * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr2(QStyleOptionTabWidgetFrame * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionTabBarBase * ctr_qt_widgets_ffi_static_cast_QStyleOptionTabBarBase_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionTabBarBase * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr3(QStyleOptionTabBarBase * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionHeader * ctr_qt_widgets_ffi_static_cast_QStyleOptionHeader_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionHeader * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr4(QStyleOptionHeader * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionButton * ctr_qt_widgets_ffi_static_cast_QStyleOptionButton_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionButton * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr5(QStyleOptionButton * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionTab * ctr_qt_widgets_ffi_static_cast_QStyleOptionTab_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionTab * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr6(QStyleOptionTab * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionTabV4 * ctr_qt_widgets_ffi_static_cast_QStyleOptionTabV4_ptr(QStyleOptionTab * ptr) {
  return static_cast< QStyleOptionTabV4 * >(ptr);
}


RITUAL_EXPORT QStyleOptionTab * ctr_qt_widgets_ffi_static_cast_QStyleOptionTab_ptr1(QStyleOptionTabV4 * ptr) {
  return static_cast< QStyleOptionTab * >(ptr);
}


RITUAL_EXPORT QStyleOptionTabV4 * ctr_qt_widgets_ffi_static_cast_QStyleOptionTabV4_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionTabV4 * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr7(QStyleOptionTabV4 * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionToolBar * ctr_qt_widgets_ffi_static_cast_QStyleOptionToolBar_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionToolBar * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr8(QStyleOptionToolBar * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionProgressBar * ctr_qt_widgets_ffi_static_cast_QStyleOptionProgressBar_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionProgressBar * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr9(QStyleOptionProgressBar * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionMenuItem * ctr_qt_widgets_ffi_static_cast_QStyleOptionMenuItem_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionMenuItem * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr10(QStyleOptionMenuItem * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionDockWidget * ctr_qt_widgets_ffi_static_cast_QStyleOptionDockWidget_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionDockWidget * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr11(QStyleOptionDockWidget * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionViewItem * ctr_qt_widgets_ffi_static_cast_QStyleOptionViewItem_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionViewItem * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr12(QStyleOptionViewItem * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionToolBox * ctr_qt_widgets_ffi_static_cast_QStyleOptionToolBox_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionToolBox * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr13(QStyleOptionToolBox * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionRubberBand * ctr_qt_widgets_ffi_static_cast_QStyleOptionRubberBand_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionRubberBand * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr14(QStyleOptionRubberBand * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr15(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionSlider * ctr_qt_widgets_ffi_static_cast_QStyleOptionSlider_ptr(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOptionSlider * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr1(QStyleOptionSlider * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOptionSlider * ctr_qt_widgets_ffi_static_cast_QStyleOptionSlider_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionSlider * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr16(QStyleOptionSlider * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionSpinBox * ctr_qt_widgets_ffi_static_cast_QStyleOptionSpinBox_ptr(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOptionSpinBox * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr2(QStyleOptionSpinBox * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOptionSpinBox * ctr_qt_widgets_ffi_static_cast_QStyleOptionSpinBox_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionSpinBox * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr17(QStyleOptionSpinBox * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionToolButton * ctr_qt_widgets_ffi_static_cast_QStyleOptionToolButton_ptr(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOptionToolButton * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr3(QStyleOptionToolButton * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOptionToolButton * ctr_qt_widgets_ffi_static_cast_QStyleOptionToolButton_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionToolButton * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr18(QStyleOptionToolButton * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionComboBox * ctr_qt_widgets_ffi_static_cast_QStyleOptionComboBox_ptr(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOptionComboBox * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr4(QStyleOptionComboBox * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOptionComboBox * ctr_qt_widgets_ffi_static_cast_QStyleOptionComboBox_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionComboBox * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr19(QStyleOptionComboBox * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionTitleBar * ctr_qt_widgets_ffi_static_cast_QStyleOptionTitleBar_ptr(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOptionTitleBar * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr5(QStyleOptionTitleBar * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOptionTitleBar * ctr_qt_widgets_ffi_static_cast_QStyleOptionTitleBar_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionTitleBar * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr20(QStyleOptionTitleBar * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionGroupBox * ctr_qt_widgets_ffi_static_cast_QStyleOptionGroupBox_ptr(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOptionGroupBox * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr6(QStyleOptionGroupBox * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOptionGroupBox * ctr_qt_widgets_ffi_static_cast_QStyleOptionGroupBox_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionGroupBox * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr21(QStyleOptionGroupBox * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionSizeGrip * ctr_qt_widgets_ffi_static_cast_QStyleOptionSizeGrip_ptr(QStyleOptionComplex * ptr) {
  return static_cast< QStyleOptionSizeGrip * >(ptr);
}


RITUAL_EXPORT QStyleOptionComplex * ctr_qt_widgets_ffi_static_cast_QStyleOptionComplex_ptr7(QStyleOptionSizeGrip * ptr) {
  return static_cast< QStyleOptionComplex * >(ptr);
}


RITUAL_EXPORT QStyleOptionSizeGrip * ctr_qt_widgets_ffi_static_cast_QStyleOptionSizeGrip_ptr1(QStyleOption * ptr) {
  return static_cast< QStyleOptionSizeGrip * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr22(QStyleOptionSizeGrip * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleOptionGraphicsItem * ctr_qt_widgets_ffi_static_cast_QStyleOptionGraphicsItem_ptr(QStyleOption * ptr) {
  return static_cast< QStyleOptionGraphicsItem * >(ptr);
}


RITUAL_EXPORT QStyleOption * ctr_qt_widgets_ffi_static_cast_QStyleOption_ptr23(QStyleOptionGraphicsItem * ptr) {
  return static_cast< QStyleOption * >(ptr);
}


RITUAL_EXPORT QStyleHintReturnMask * ctr_qt_widgets_ffi_static_cast_QStyleHintReturnMask_ptr(QStyleHintReturn * ptr) {
  return static_cast< QStyleHintReturnMask * >(ptr);
}


RITUAL_EXPORT QStyleHintReturn * ctr_qt_widgets_ffi_static_cast_QStyleHintReturn_ptr(QStyleHintReturnMask * ptr) {
  return static_cast< QStyleHintReturn * >(ptr);
}


RITUAL_EXPORT QStyleHintReturnVariant * ctr_qt_widgets_ffi_static_cast_QStyleHintReturnVariant_ptr(QStyleHintReturn * ptr) {
  return static_cast< QStyleHintReturnVariant * >(ptr);
}


RITUAL_EXPORT QStyleHintReturn * ctr_qt_widgets_ffi_static_cast_QStyleHintReturn_ptr1(QStyleHintReturnVariant * ptr) {
  return static_cast< QStyleHintReturn * >(ptr);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_static_cast_QAbstractItemDelegate_ptr(QObject * ptr) {
  return static_cast< QAbstractItemDelegate * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr10(QAbstractItemDelegate * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_dynamic_cast_QAbstractItemDelegate_ptr(QObject * ptr) {
  return dynamic_cast< QAbstractItemDelegate * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr(QFrame * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr3(QAbstractScrollArea * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QAbstractScrollArea_ptr(QFrame * ptr) {
  return dynamic_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr1(QWidget * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr10(QAbstractScrollArea * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QAbstractScrollArea_ptr1(QWidget * ptr) {
  return dynamic_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr2(QObject * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr11(QAbstractScrollArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QAbstractScrollArea_ptr2(QObject * ptr) {
  return dynamic_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr3(QPaintDevice * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr9(QAbstractScrollArea * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QAbstractScrollArea_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr(QAbstractScrollArea * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr4(QAbstractItemView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_dynamic_cast_QAbstractItemView_ptr(QAbstractScrollArea * ptr) {
  return dynamic_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr1(QFrame * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr4(QAbstractItemView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_dynamic_cast_QAbstractItemView_ptr1(QFrame * ptr) {
  return dynamic_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr2(QWidget * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr11(QAbstractItemView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_dynamic_cast_QAbstractItemView_ptr2(QWidget * ptr) {
  return dynamic_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr3(QObject * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr12(QAbstractItemView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_dynamic_cast_QAbstractItemView_ptr3(QObject * ptr) {
  return dynamic_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr4(QPaintDevice * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr10(QAbstractItemView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_dynamic_cast_QAbstractItemView_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_static_cast_QAccessibleWidget_ptr(QAccessibleObject * ptr) {
  return static_cast< QAccessibleWidget * >(ptr);
}


RITUAL_EXPORT QAccessibleObject * ctr_qt_widgets_ffi_static_cast_QAccessibleObject_ptr(QAccessibleWidget * ptr) {
  return static_cast< QAccessibleObject * >(ptr);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_dynamic_cast_QAccessibleWidget_ptr(QAccessibleObject * ptr) {
  return dynamic_cast< QAccessibleWidget * >(ptr);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_static_cast_QAccessibleWidget_ptr1(QAccessibleInterface * ptr) {
  return static_cast< QAccessibleWidget * >(ptr);
}


RITUAL_EXPORT QAccessibleInterface * ctr_qt_widgets_ffi_static_cast_QAccessibleInterface_ptr(QAccessibleWidget * ptr) {
  return static_cast< QAccessibleInterface * >(ptr);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_dynamic_cast_QAccessibleWidget_ptr1(QAccessibleInterface * ptr) {
  return dynamic_cast< QAccessibleWidget * >(ptr);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_static_cast_QAccessibleWidget_ptr2(QAccessibleActionInterface * ptr) {
  return static_cast< QAccessibleWidget * >(ptr);
}


RITUAL_EXPORT QAccessibleActionInterface * ctr_qt_widgets_ffi_static_cast_QAccessibleActionInterface_ptr(QAccessibleWidget * ptr) {
  return static_cast< QAccessibleActionInterface * >(ptr);
}


RITUAL_EXPORT QAccessibleWidget * ctr_qt_widgets_ffi_dynamic_cast_QAccessibleWidget_ptr2(QAccessibleActionInterface * ptr) {
  return dynamic_cast< QAccessibleWidget * >(ptr);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_static_cast_QAction_ptr(QObject * ptr) {
  return static_cast< QAction * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr13(QAction * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_dynamic_cast_QAction_ptr(QObject * ptr) {
  return dynamic_cast< QAction * >(ptr);
}


RITUAL_EXPORT QActionGroup * ctr_qt_widgets_ffi_static_cast_QActionGroup_ptr(QObject * ptr) {
  return static_cast< QActionGroup * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr14(QActionGroup * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QActionGroup * ctr_qt_widgets_ffi_dynamic_cast_QActionGroup_ptr(QObject * ptr) {
  return dynamic_cast< QActionGroup * >(ptr);
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_static_cast_QApplication_ptr(QGuiApplication * ptr) {
  return static_cast< QApplication * >(ptr);
}


RITUAL_EXPORT QGuiApplication * ctr_qt_widgets_ffi_static_cast_QGuiApplication_ptr(QApplication * ptr) {
  return static_cast< QGuiApplication * >(ptr);
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_dynamic_cast_QApplication_ptr(QGuiApplication * ptr) {
  return dynamic_cast< QApplication * >(ptr);
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_static_cast_QApplication_ptr1(QCoreApplication * ptr) {
  return static_cast< QApplication * >(ptr);
}


RITUAL_EXPORT QCoreApplication * ctr_qt_widgets_ffi_static_cast_QCoreApplication_ptr(QApplication * ptr) {
  return static_cast< QCoreApplication * >(ptr);
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_dynamic_cast_QApplication_ptr1(QCoreApplication * ptr) {
  return dynamic_cast< QApplication * >(ptr);
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_static_cast_QApplication_ptr2(QObject * ptr) {
  return static_cast< QApplication * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr15(QApplication * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QApplication * ctr_qt_widgets_ffi_dynamic_cast_QApplication_ptr2(QObject * ptr) {
  return dynamic_cast< QApplication * >(ptr);
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_static_cast_QSpacerItem_ptr(QLayoutItem * ptr) {
  return static_cast< QSpacerItem * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr(QSpacerItem * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QSpacerItem * ctr_qt_widgets_ffi_dynamic_cast_QSpacerItem_ptr(QLayoutItem * ptr) {
  return dynamic_cast< QSpacerItem * >(ptr);
}


RITUAL_EXPORT QWidgetItem * ctr_qt_widgets_ffi_static_cast_QWidgetItem_ptr(QLayoutItem * ptr) {
  return static_cast< QWidgetItem * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr1(QWidgetItem * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QWidgetItem * ctr_qt_widgets_ffi_dynamic_cast_QWidgetItem_ptr(QLayoutItem * ptr) {
  return dynamic_cast< QWidgetItem * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr(QObject * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr16(QLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_dynamic_cast_QLayout_ptr(QObject * ptr) {
  return dynamic_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr1(QLayoutItem * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr2(QLayout * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_dynamic_cast_QLayout_ptr1(QLayoutItem * ptr) {
  return dynamic_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_static_cast_QGridLayout_ptr(QLayout * ptr) {
  return static_cast< QGridLayout * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr2(QGridLayout * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_dynamic_cast_QGridLayout_ptr(QLayout * ptr) {
  return dynamic_cast< QGridLayout * >(ptr);
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_static_cast_QGridLayout_ptr1(QObject * ptr) {
  return static_cast< QGridLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr17(QGridLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_dynamic_cast_QGridLayout_ptr1(QObject * ptr) {
  return dynamic_cast< QGridLayout * >(ptr);
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_static_cast_QGridLayout_ptr2(QLayoutItem * ptr) {
  return static_cast< QGridLayout * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr3(QGridLayout * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QGridLayout * ctr_qt_widgets_ffi_dynamic_cast_QGridLayout_ptr2(QLayoutItem * ptr) {
  return dynamic_cast< QGridLayout * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_static_cast_QBoxLayout_ptr(QLayout * ptr) {
  return static_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr3(QBoxLayout * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QBoxLayout_ptr(QLayout * ptr) {
  return dynamic_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_static_cast_QBoxLayout_ptr1(QObject * ptr) {
  return static_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr18(QBoxLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QBoxLayout_ptr1(QObject * ptr) {
  return dynamic_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_static_cast_QBoxLayout_ptr2(QLayoutItem * ptr) {
  return static_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr4(QBoxLayout * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QBoxLayout_ptr2(QLayoutItem * ptr) {
  return dynamic_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_static_cast_QHBoxLayout_ptr(QBoxLayout * ptr) {
  return static_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_static_cast_QBoxLayout_ptr3(QHBoxLayout * ptr) {
  return static_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QHBoxLayout_ptr(QBoxLayout * ptr) {
  return dynamic_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_static_cast_QHBoxLayout_ptr1(QLayout * ptr) {
  return static_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr4(QHBoxLayout * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QHBoxLayout_ptr1(QLayout * ptr) {
  return dynamic_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_static_cast_QHBoxLayout_ptr2(QObject * ptr) {
  return static_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr19(QHBoxLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QHBoxLayout_ptr2(QObject * ptr) {
  return dynamic_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_static_cast_QHBoxLayout_ptr3(QLayoutItem * ptr) {
  return static_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr5(QHBoxLayout * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QHBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QHBoxLayout_ptr3(QLayoutItem * ptr) {
  return dynamic_cast< QHBoxLayout * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_static_cast_QVBoxLayout_ptr(QBoxLayout * ptr) {
  return static_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QBoxLayout * ctr_qt_widgets_ffi_static_cast_QBoxLayout_ptr4(QVBoxLayout * ptr) {
  return static_cast< QBoxLayout * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QVBoxLayout_ptr(QBoxLayout * ptr) {
  return dynamic_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_static_cast_QVBoxLayout_ptr1(QLayout * ptr) {
  return static_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr5(QVBoxLayout * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QVBoxLayout_ptr1(QLayout * ptr) {
  return dynamic_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_static_cast_QVBoxLayout_ptr2(QObject * ptr) {
  return static_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr20(QVBoxLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QVBoxLayout_ptr2(QObject * ptr) {
  return dynamic_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_static_cast_QVBoxLayout_ptr3(QLayoutItem * ptr) {
  return static_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr6(QVBoxLayout * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QVBoxLayout * ctr_qt_widgets_ffi_dynamic_cast_QVBoxLayout_ptr3(QLayoutItem * ptr) {
  return dynamic_cast< QVBoxLayout * >(ptr);
}


RITUAL_EXPORT QButtonGroup * ctr_qt_widgets_ffi_static_cast_QButtonGroup_ptr(QObject * ptr) {
  return static_cast< QButtonGroup * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr21(QButtonGroup * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QButtonGroup * ctr_qt_widgets_ffi_dynamic_cast_QButtonGroup_ptr(QObject * ptr) {
  return dynamic_cast< QButtonGroup * >(ptr);
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_static_cast_QCalendarWidget_ptr(QWidget * ptr) {
  return static_cast< QCalendarWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr12(QCalendarWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_dynamic_cast_QCalendarWidget_ptr(QWidget * ptr) {
  return dynamic_cast< QCalendarWidget * >(ptr);
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_static_cast_QCalendarWidget_ptr1(QObject * ptr) {
  return static_cast< QCalendarWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr22(QCalendarWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_dynamic_cast_QCalendarWidget_ptr1(QObject * ptr) {
  return dynamic_cast< QCalendarWidget * >(ptr);
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_static_cast_QCalendarWidget_ptr2(QPaintDevice * ptr) {
  return static_cast< QCalendarWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr11(QCalendarWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QCalendarWidget * ctr_qt_widgets_ffi_dynamic_cast_QCalendarWidget_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QCalendarWidget * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_static_cast_QCheckBox_ptr(QAbstractButton * ptr) {
  return static_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr3(QCheckBox * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_dynamic_cast_QCheckBox_ptr(QAbstractButton * ptr) {
  return dynamic_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_static_cast_QCheckBox_ptr1(QWidget * ptr) {
  return static_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr13(QCheckBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_dynamic_cast_QCheckBox_ptr1(QWidget * ptr) {
  return dynamic_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_static_cast_QCheckBox_ptr2(QObject * ptr) {
  return static_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr23(QCheckBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_dynamic_cast_QCheckBox_ptr2(QObject * ptr) {
  return dynamic_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_static_cast_QCheckBox_ptr3(QPaintDevice * ptr) {
  return static_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr12(QCheckBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QCheckBox * ctr_qt_widgets_ffi_dynamic_cast_QCheckBox_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QCheckBox * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr(QWidget * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr14(QDialog * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_dynamic_cast_QDialog_ptr(QWidget * ptr) {
  return dynamic_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr1(QObject * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr24(QDialog * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_dynamic_cast_QDialog_ptr1(QObject * ptr) {
  return dynamic_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr2(QPaintDevice * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr13(QDialog * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_dynamic_cast_QDialog_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_static_cast_QColorDialog_ptr(QDialog * ptr) {
  return static_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr3(QColorDialog * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_dynamic_cast_QColorDialog_ptr(QDialog * ptr) {
  return dynamic_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_static_cast_QColorDialog_ptr1(QWidget * ptr) {
  return static_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr15(QColorDialog * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_dynamic_cast_QColorDialog_ptr1(QWidget * ptr) {
  return dynamic_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_static_cast_QColorDialog_ptr2(QObject * ptr) {
  return static_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr25(QColorDialog * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_dynamic_cast_QColorDialog_ptr2(QObject * ptr) {
  return dynamic_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_static_cast_QColorDialog_ptr3(QPaintDevice * ptr) {
  return static_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr14(QColorDialog * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QColorDialog * ctr_qt_widgets_ffi_dynamic_cast_QColorDialog_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QColorDialog * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_static_cast_QColumnView_ptr(QAbstractItemView * ptr) {
  return static_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr5(QColumnView * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_dynamic_cast_QColumnView_ptr(QAbstractItemView * ptr) {
  return dynamic_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_static_cast_QColumnView_ptr1(QAbstractScrollArea * ptr) {
  return static_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr5(QColumnView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_dynamic_cast_QColumnView_ptr1(QAbstractScrollArea * ptr) {
  return dynamic_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_static_cast_QColumnView_ptr2(QFrame * ptr) {
  return static_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr5(QColumnView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_dynamic_cast_QColumnView_ptr2(QFrame * ptr) {
  return dynamic_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_static_cast_QColumnView_ptr3(QWidget * ptr) {
  return static_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr16(QColumnView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_dynamic_cast_QColumnView_ptr3(QWidget * ptr) {
  return dynamic_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_static_cast_QColumnView_ptr4(QObject * ptr) {
  return static_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr26(QColumnView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_dynamic_cast_QColumnView_ptr4(QObject * ptr) {
  return dynamic_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_static_cast_QColumnView_ptr5(QPaintDevice * ptr) {
  return static_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr15(QColumnView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QColumnView * ctr_qt_widgets_ffi_dynamic_cast_QColumnView_ptr5(QPaintDevice * ptr) {
  return dynamic_cast< QColumnView * >(ptr);
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_static_cast_QComboBox_ptr(QWidget * ptr) {
  return static_cast< QComboBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr17(QComboBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_dynamic_cast_QComboBox_ptr(QWidget * ptr) {
  return dynamic_cast< QComboBox * >(ptr);
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_static_cast_QComboBox_ptr1(QObject * ptr) {
  return static_cast< QComboBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr27(QComboBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_dynamic_cast_QComboBox_ptr1(QObject * ptr) {
  return dynamic_cast< QComboBox * >(ptr);
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_static_cast_QComboBox_ptr2(QPaintDevice * ptr) {
  return static_cast< QComboBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr16(QComboBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_dynamic_cast_QComboBox_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QComboBox * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_static_cast_QPushButton_ptr(QAbstractButton * ptr) {
  return static_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr4(QPushButton * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_dynamic_cast_QPushButton_ptr(QAbstractButton * ptr) {
  return dynamic_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_static_cast_QPushButton_ptr1(QWidget * ptr) {
  return static_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr18(QPushButton * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_dynamic_cast_QPushButton_ptr1(QWidget * ptr) {
  return dynamic_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_static_cast_QPushButton_ptr2(QObject * ptr) {
  return static_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr28(QPushButton * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_dynamic_cast_QPushButton_ptr2(QObject * ptr) {
  return dynamic_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_static_cast_QPushButton_ptr3(QPaintDevice * ptr) {
  return static_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr17(QPushButton * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_dynamic_cast_QPushButton_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_static_cast_QCommandLinkButton_ptr(QPushButton * ptr) {
  return static_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QPushButton * ctr_qt_widgets_ffi_static_cast_QPushButton_ptr4(QCommandLinkButton * ptr) {
  return static_cast< QPushButton * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_dynamic_cast_QCommandLinkButton_ptr(QPushButton * ptr) {
  return dynamic_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_static_cast_QCommandLinkButton_ptr1(QAbstractButton * ptr) {
  return static_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr5(QCommandLinkButton * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_dynamic_cast_QCommandLinkButton_ptr1(QAbstractButton * ptr) {
  return dynamic_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_static_cast_QCommandLinkButton_ptr2(QWidget * ptr) {
  return static_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr19(QCommandLinkButton * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_dynamic_cast_QCommandLinkButton_ptr2(QWidget * ptr) {
  return dynamic_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_static_cast_QCommandLinkButton_ptr3(QObject * ptr) {
  return static_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr29(QCommandLinkButton * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_dynamic_cast_QCommandLinkButton_ptr3(QObject * ptr) {
  return dynamic_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_static_cast_QCommandLinkButton_ptr4(QPaintDevice * ptr) {
  return static_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr18(QCommandLinkButton * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QCommandLinkButton * ctr_qt_widgets_ffi_dynamic_cast_QCommandLinkButton_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QCommandLinkButton * >(ptr);
}


RITUAL_EXPORT QCommonStyle * ctr_qt_widgets_ffi_static_cast_QCommonStyle_ptr(QStyle * ptr) {
  return static_cast< QCommonStyle * >(ptr);
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_static_cast_QStyle_ptr1(QCommonStyle * ptr) {
  return static_cast< QStyle * >(ptr);
}


RITUAL_EXPORT QCommonStyle * ctr_qt_widgets_ffi_dynamic_cast_QCommonStyle_ptr(QStyle * ptr) {
  return dynamic_cast< QCommonStyle * >(ptr);
}


RITUAL_EXPORT QCommonStyle * ctr_qt_widgets_ffi_static_cast_QCommonStyle_ptr1(QObject * ptr) {
  return static_cast< QCommonStyle * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr30(QCommonStyle * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QCommonStyle * ctr_qt_widgets_ffi_dynamic_cast_QCommonStyle_ptr1(QObject * ptr) {
  return dynamic_cast< QCommonStyle * >(ptr);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_static_cast_QCompleter_ptr(QObject * ptr) {
  return static_cast< QCompleter * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr31(QCompleter * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QCompleter * ctr_qt_widgets_ffi_dynamic_cast_QCompleter_ptr(QObject * ptr) {
  return dynamic_cast< QCompleter * >(ptr);
}


RITUAL_EXPORT QDataWidgetMapper * ctr_qt_widgets_ffi_static_cast_QDataWidgetMapper_ptr(QObject * ptr) {
  return static_cast< QDataWidgetMapper * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr32(QDataWidgetMapper * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDataWidgetMapper * ctr_qt_widgets_ffi_dynamic_cast_QDataWidgetMapper_ptr(QObject * ptr) {
  return dynamic_cast< QDataWidgetMapper * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_static_cast_QDateTimeEdit_ptr(QAbstractSpinBox * ptr) {
  return static_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr3(QDateTimeEdit * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateTimeEdit_ptr(QAbstractSpinBox * ptr) {
  return dynamic_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_static_cast_QDateTimeEdit_ptr1(QWidget * ptr) {
  return static_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr20(QDateTimeEdit * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateTimeEdit_ptr1(QWidget * ptr) {
  return dynamic_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_static_cast_QDateTimeEdit_ptr2(QObject * ptr) {
  return static_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr33(QDateTimeEdit * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateTimeEdit_ptr2(QObject * ptr) {
  return dynamic_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_static_cast_QDateTimeEdit_ptr3(QPaintDevice * ptr) {
  return static_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr19(QDateTimeEdit * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateTimeEdit_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_static_cast_QTimeEdit_ptr(QDateTimeEdit * ptr) {
  return static_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_static_cast_QDateTimeEdit_ptr4(QTimeEdit * ptr) {
  return static_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QTimeEdit_ptr(QDateTimeEdit * ptr) {
  return dynamic_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_static_cast_QTimeEdit_ptr1(QAbstractSpinBox * ptr) {
  return static_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr4(QTimeEdit * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QTimeEdit_ptr1(QAbstractSpinBox * ptr) {
  return dynamic_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_static_cast_QTimeEdit_ptr2(QWidget * ptr) {
  return static_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr21(QTimeEdit * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QTimeEdit_ptr2(QWidget * ptr) {
  return dynamic_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_static_cast_QTimeEdit_ptr3(QObject * ptr) {
  return static_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr34(QTimeEdit * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QTimeEdit_ptr3(QObject * ptr) {
  return dynamic_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_static_cast_QTimeEdit_ptr4(QPaintDevice * ptr) {
  return static_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr20(QTimeEdit * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTimeEdit * ctr_qt_widgets_ffi_dynamic_cast_QTimeEdit_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QTimeEdit * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_static_cast_QDateEdit_ptr(QDateTimeEdit * ptr) {
  return static_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QDateTimeEdit * ctr_qt_widgets_ffi_static_cast_QDateTimeEdit_ptr5(QDateEdit * ptr) {
  return static_cast< QDateTimeEdit * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateEdit_ptr(QDateTimeEdit * ptr) {
  return dynamic_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_static_cast_QDateEdit_ptr1(QAbstractSpinBox * ptr) {
  return static_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr5(QDateEdit * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateEdit_ptr1(QAbstractSpinBox * ptr) {
  return dynamic_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_static_cast_QDateEdit_ptr2(QWidget * ptr) {
  return static_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr22(QDateEdit * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateEdit_ptr2(QWidget * ptr) {
  return dynamic_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_static_cast_QDateEdit_ptr3(QObject * ptr) {
  return static_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr35(QDateEdit * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateEdit_ptr3(QObject * ptr) {
  return dynamic_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_static_cast_QDateEdit_ptr4(QPaintDevice * ptr) {
  return static_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr21(QDateEdit * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDateEdit * ctr_qt_widgets_ffi_dynamic_cast_QDateEdit_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QDateEdit * >(ptr);
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_static_cast_QDesktopWidget_ptr(QWidget * ptr) {
  return static_cast< QDesktopWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr23(QDesktopWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_dynamic_cast_QDesktopWidget_ptr(QWidget * ptr) {
  return dynamic_cast< QDesktopWidget * >(ptr);
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_static_cast_QDesktopWidget_ptr1(QObject * ptr) {
  return static_cast< QDesktopWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr36(QDesktopWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_dynamic_cast_QDesktopWidget_ptr1(QObject * ptr) {
  return dynamic_cast< QDesktopWidget * >(ptr);
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_static_cast_QDesktopWidget_ptr2(QPaintDevice * ptr) {
  return static_cast< QDesktopWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr22(QDesktopWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDesktopWidget * ctr_qt_widgets_ffi_dynamic_cast_QDesktopWidget_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QDesktopWidget * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_static_cast_QDial_ptr(QAbstractSlider * ptr) {
  return static_cast< QDial * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_static_cast_QAbstractSlider_ptr4(QDial * ptr) {
  return static_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_dynamic_cast_QDial_ptr(QAbstractSlider * ptr) {
  return dynamic_cast< QDial * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_static_cast_QDial_ptr1(QWidget * ptr) {
  return static_cast< QDial * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr24(QDial * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_dynamic_cast_QDial_ptr1(QWidget * ptr) {
  return dynamic_cast< QDial * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_static_cast_QDial_ptr2(QObject * ptr) {
  return static_cast< QDial * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr37(QDial * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_dynamic_cast_QDial_ptr2(QObject * ptr) {
  return dynamic_cast< QDial * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_static_cast_QDial_ptr3(QPaintDevice * ptr) {
  return static_cast< QDial * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr23(QDial * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDial * ctr_qt_widgets_ffi_dynamic_cast_QDial_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QDial * >(ptr);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_static_cast_QDialogButtonBox_ptr(QWidget * ptr) {
  return static_cast< QDialogButtonBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr25(QDialogButtonBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_dynamic_cast_QDialogButtonBox_ptr(QWidget * ptr) {
  return dynamic_cast< QDialogButtonBox * >(ptr);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_static_cast_QDialogButtonBox_ptr1(QObject * ptr) {
  return static_cast< QDialogButtonBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr38(QDialogButtonBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_dynamic_cast_QDialogButtonBox_ptr1(QObject * ptr) {
  return dynamic_cast< QDialogButtonBox * >(ptr);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_static_cast_QDialogButtonBox_ptr2(QPaintDevice * ptr) {
  return static_cast< QDialogButtonBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr24(QDialogButtonBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDialogButtonBox * ctr_qt_widgets_ffi_dynamic_cast_QDialogButtonBox_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QDialogButtonBox * >(ptr);
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_static_cast_QDirModel_ptr(QAbstractItemModel * ptr) {
  return static_cast< QDirModel * >(ptr);
}


RITUAL_EXPORT QAbstractItemModel * ctr_qt_widgets_ffi_static_cast_QAbstractItemModel_ptr(QDirModel * ptr) {
  return static_cast< QAbstractItemModel * >(ptr);
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_dynamic_cast_QDirModel_ptr(QAbstractItemModel * ptr) {
  return dynamic_cast< QDirModel * >(ptr);
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_static_cast_QDirModel_ptr1(QObject * ptr) {
  return static_cast< QDirModel * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr39(QDirModel * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDirModel * ctr_qt_widgets_ffi_dynamic_cast_QDirModel_ptr1(QObject * ptr) {
  return dynamic_cast< QDirModel * >(ptr);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_static_cast_QDockWidget_ptr(QWidget * ptr) {
  return static_cast< QDockWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr26(QDockWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_dynamic_cast_QDockWidget_ptr(QWidget * ptr) {
  return dynamic_cast< QDockWidget * >(ptr);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_static_cast_QDockWidget_ptr1(QObject * ptr) {
  return static_cast< QDockWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr40(QDockWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_dynamic_cast_QDockWidget_ptr1(QObject * ptr) {
  return dynamic_cast< QDockWidget * >(ptr);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_static_cast_QDockWidget_ptr2(QPaintDevice * ptr) {
  return static_cast< QDockWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr25(QDockWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDockWidget * ctr_qt_widgets_ffi_dynamic_cast_QDockWidget_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QDockWidget * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_static_cast_QErrorMessage_ptr(QDialog * ptr) {
  return static_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr4(QErrorMessage * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_dynamic_cast_QErrorMessage_ptr(QDialog * ptr) {
  return dynamic_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_static_cast_QErrorMessage_ptr1(QWidget * ptr) {
  return static_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr27(QErrorMessage * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_dynamic_cast_QErrorMessage_ptr1(QWidget * ptr) {
  return dynamic_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_static_cast_QErrorMessage_ptr2(QObject * ptr) {
  return static_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr41(QErrorMessage * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_dynamic_cast_QErrorMessage_ptr2(QObject * ptr) {
  return dynamic_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_static_cast_QErrorMessage_ptr3(QPaintDevice * ptr) {
  return static_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr26(QErrorMessage * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QErrorMessage * ctr_qt_widgets_ffi_dynamic_cast_QErrorMessage_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QErrorMessage * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_static_cast_QFileDialog_ptr(QDialog * ptr) {
  return static_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr5(QFileDialog * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_dynamic_cast_QFileDialog_ptr(QDialog * ptr) {
  return dynamic_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_static_cast_QFileDialog_ptr1(QWidget * ptr) {
  return static_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr28(QFileDialog * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_dynamic_cast_QFileDialog_ptr1(QWidget * ptr) {
  return dynamic_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_static_cast_QFileDialog_ptr2(QObject * ptr) {
  return static_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr42(QFileDialog * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_dynamic_cast_QFileDialog_ptr2(QObject * ptr) {
  return dynamic_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_static_cast_QFileDialog_ptr3(QPaintDevice * ptr) {
  return static_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr27(QFileDialog * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QFileDialog * ctr_qt_widgets_ffi_dynamic_cast_QFileDialog_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QFileDialog * >(ptr);
}


RITUAL_EXPORT QFileSystemModel * ctr_qt_widgets_ffi_static_cast_QFileSystemModel_ptr(QAbstractItemModel * ptr) {
  return static_cast< QFileSystemModel * >(ptr);
}


RITUAL_EXPORT QAbstractItemModel * ctr_qt_widgets_ffi_static_cast_QAbstractItemModel_ptr1(QFileSystemModel * ptr) {
  return static_cast< QAbstractItemModel * >(ptr);
}


RITUAL_EXPORT QFileSystemModel * ctr_qt_widgets_ffi_dynamic_cast_QFileSystemModel_ptr(QAbstractItemModel * ptr) {
  return dynamic_cast< QFileSystemModel * >(ptr);
}


RITUAL_EXPORT QFileSystemModel * ctr_qt_widgets_ffi_static_cast_QFileSystemModel_ptr1(QObject * ptr) {
  return static_cast< QFileSystemModel * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr43(QFileSystemModel * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QFileSystemModel * ctr_qt_widgets_ffi_dynamic_cast_QFileSystemModel_ptr1(QObject * ptr) {
  return dynamic_cast< QFileSystemModel * >(ptr);
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_static_cast_QFocusFrame_ptr(QWidget * ptr) {
  return static_cast< QFocusFrame * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr29(QFocusFrame * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_dynamic_cast_QFocusFrame_ptr(QWidget * ptr) {
  return dynamic_cast< QFocusFrame * >(ptr);
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_static_cast_QFocusFrame_ptr1(QObject * ptr) {
  return static_cast< QFocusFrame * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr44(QFocusFrame * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_dynamic_cast_QFocusFrame_ptr1(QObject * ptr) {
  return dynamic_cast< QFocusFrame * >(ptr);
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_static_cast_QFocusFrame_ptr2(QPaintDevice * ptr) {
  return static_cast< QFocusFrame * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr28(QFocusFrame * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QFocusFrame * ctr_qt_widgets_ffi_dynamic_cast_QFocusFrame_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QFocusFrame * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_static_cast_QFontComboBox_ptr(QComboBox * ptr) {
  return static_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QComboBox * ctr_qt_widgets_ffi_static_cast_QComboBox_ptr3(QFontComboBox * ptr) {
  return static_cast< QComboBox * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_dynamic_cast_QFontComboBox_ptr(QComboBox * ptr) {
  return dynamic_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_static_cast_QFontComboBox_ptr1(QWidget * ptr) {
  return static_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr30(QFontComboBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_dynamic_cast_QFontComboBox_ptr1(QWidget * ptr) {
  return dynamic_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_static_cast_QFontComboBox_ptr2(QObject * ptr) {
  return static_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr45(QFontComboBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_dynamic_cast_QFontComboBox_ptr2(QObject * ptr) {
  return dynamic_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_static_cast_QFontComboBox_ptr3(QPaintDevice * ptr) {
  return static_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr29(QFontComboBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QFontComboBox * ctr_qt_widgets_ffi_dynamic_cast_QFontComboBox_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QFontComboBox * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_static_cast_QFontDialog_ptr(QDialog * ptr) {
  return static_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr6(QFontDialog * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_dynamic_cast_QFontDialog_ptr(QDialog * ptr) {
  return dynamic_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_static_cast_QFontDialog_ptr1(QWidget * ptr) {
  return static_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr31(QFontDialog * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_dynamic_cast_QFontDialog_ptr1(QWidget * ptr) {
  return dynamic_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_static_cast_QFontDialog_ptr2(QObject * ptr) {
  return static_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr46(QFontDialog * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_dynamic_cast_QFontDialog_ptr2(QObject * ptr) {
  return dynamic_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_static_cast_QFontDialog_ptr3(QPaintDevice * ptr) {
  return static_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr30(QFontDialog * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QFontDialog * ctr_qt_widgets_ffi_dynamic_cast_QFontDialog_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QFontDialog * >(ptr);
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_static_cast_QFormLayout_ptr(QLayout * ptr) {
  return static_cast< QFormLayout * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr6(QFormLayout * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_dynamic_cast_QFormLayout_ptr(QLayout * ptr) {
  return dynamic_cast< QFormLayout * >(ptr);
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_static_cast_QFormLayout_ptr1(QObject * ptr) {
  return static_cast< QFormLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr47(QFormLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_dynamic_cast_QFormLayout_ptr1(QObject * ptr) {
  return dynamic_cast< QFormLayout * >(ptr);
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_static_cast_QFormLayout_ptr2(QLayoutItem * ptr) {
  return static_cast< QFormLayout * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr7(QFormLayout * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QFormLayout * ctr_qt_widgets_ffi_dynamic_cast_QFormLayout_ptr2(QLayoutItem * ptr) {
  return dynamic_cast< QFormLayout * >(ptr);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_static_cast_QGesture_ptr(QObject * ptr) {
  return static_cast< QGesture * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr48(QGesture * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_dynamic_cast_QGesture_ptr(QObject * ptr) {
  return dynamic_cast< QGesture * >(ptr);
}


RITUAL_EXPORT QPanGesture * ctr_qt_widgets_ffi_static_cast_QPanGesture_ptr(QGesture * ptr) {
  return static_cast< QPanGesture * >(ptr);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_static_cast_QGesture_ptr1(QPanGesture * ptr) {
  return static_cast< QGesture * >(ptr);
}


RITUAL_EXPORT QPanGesture * ctr_qt_widgets_ffi_dynamic_cast_QPanGesture_ptr(QGesture * ptr) {
  return dynamic_cast< QPanGesture * >(ptr);
}


RITUAL_EXPORT QPanGesture * ctr_qt_widgets_ffi_static_cast_QPanGesture_ptr1(QObject * ptr) {
  return static_cast< QPanGesture * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr49(QPanGesture * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QPanGesture * ctr_qt_widgets_ffi_dynamic_cast_QPanGesture_ptr1(QObject * ptr) {
  return dynamic_cast< QPanGesture * >(ptr);
}


RITUAL_EXPORT QPinchGesture * ctr_qt_widgets_ffi_static_cast_QPinchGesture_ptr(QGesture * ptr) {
  return static_cast< QPinchGesture * >(ptr);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_static_cast_QGesture_ptr2(QPinchGesture * ptr) {
  return static_cast< QGesture * >(ptr);
}


RITUAL_EXPORT QPinchGesture * ctr_qt_widgets_ffi_dynamic_cast_QPinchGesture_ptr(QGesture * ptr) {
  return dynamic_cast< QPinchGesture * >(ptr);
}


RITUAL_EXPORT QPinchGesture * ctr_qt_widgets_ffi_static_cast_QPinchGesture_ptr1(QObject * ptr) {
  return static_cast< QPinchGesture * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr50(QPinchGesture * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QPinchGesture * ctr_qt_widgets_ffi_dynamic_cast_QPinchGesture_ptr1(QObject * ptr) {
  return dynamic_cast< QPinchGesture * >(ptr);
}


RITUAL_EXPORT QSwipeGesture * ctr_qt_widgets_ffi_static_cast_QSwipeGesture_ptr(QGesture * ptr) {
  return static_cast< QSwipeGesture * >(ptr);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_static_cast_QGesture_ptr3(QSwipeGesture * ptr) {
  return static_cast< QGesture * >(ptr);
}


RITUAL_EXPORT QSwipeGesture * ctr_qt_widgets_ffi_dynamic_cast_QSwipeGesture_ptr(QGesture * ptr) {
  return dynamic_cast< QSwipeGesture * >(ptr);
}


RITUAL_EXPORT QSwipeGesture * ctr_qt_widgets_ffi_static_cast_QSwipeGesture_ptr1(QObject * ptr) {
  return static_cast< QSwipeGesture * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr51(QSwipeGesture * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSwipeGesture * ctr_qt_widgets_ffi_dynamic_cast_QSwipeGesture_ptr1(QObject * ptr) {
  return dynamic_cast< QSwipeGesture * >(ptr);
}


RITUAL_EXPORT QTapGesture * ctr_qt_widgets_ffi_static_cast_QTapGesture_ptr(QGesture * ptr) {
  return static_cast< QTapGesture * >(ptr);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_static_cast_QGesture_ptr4(QTapGesture * ptr) {
  return static_cast< QGesture * >(ptr);
}


RITUAL_EXPORT QTapGesture * ctr_qt_widgets_ffi_dynamic_cast_QTapGesture_ptr(QGesture * ptr) {
  return dynamic_cast< QTapGesture * >(ptr);
}


RITUAL_EXPORT QTapGesture * ctr_qt_widgets_ffi_static_cast_QTapGesture_ptr1(QObject * ptr) {
  return static_cast< QTapGesture * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr52(QTapGesture * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTapGesture * ctr_qt_widgets_ffi_dynamic_cast_QTapGesture_ptr1(QObject * ptr) {
  return dynamic_cast< QTapGesture * >(ptr);
}


RITUAL_EXPORT QTapAndHoldGesture * ctr_qt_widgets_ffi_static_cast_QTapAndHoldGesture_ptr(QGesture * ptr) {
  return static_cast< QTapAndHoldGesture * >(ptr);
}


RITUAL_EXPORT QGesture * ctr_qt_widgets_ffi_static_cast_QGesture_ptr5(QTapAndHoldGesture * ptr) {
  return static_cast< QGesture * >(ptr);
}


RITUAL_EXPORT QTapAndHoldGesture * ctr_qt_widgets_ffi_dynamic_cast_QTapAndHoldGesture_ptr(QGesture * ptr) {
  return dynamic_cast< QTapAndHoldGesture * >(ptr);
}


RITUAL_EXPORT QTapAndHoldGesture * ctr_qt_widgets_ffi_static_cast_QTapAndHoldGesture_ptr1(QObject * ptr) {
  return static_cast< QTapAndHoldGesture * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr53(QTapAndHoldGesture * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTapAndHoldGesture * ctr_qt_widgets_ffi_dynamic_cast_QTapAndHoldGesture_ptr1(QObject * ptr) {
  return dynamic_cast< QTapAndHoldGesture * >(ptr);
}


RITUAL_EXPORT QGestureEvent * ctr_qt_widgets_ffi_static_cast_QGestureEvent_ptr(QEvent * ptr) {
  return static_cast< QGestureEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr(QGestureEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGestureEvent * ctr_qt_widgets_ffi_dynamic_cast_QGestureEvent_ptr(QEvent * ptr) {
  return dynamic_cast< QGestureEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_static_cast_QGraphicsObject_ptr(QObject * ptr) {
  return static_cast< QGraphicsObject * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr54(QGraphicsObject * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsObject_ptr(QObject * ptr) {
  return dynamic_cast< QGraphicsObject * >(ptr);
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_static_cast_QGraphicsObject_ptr1(QGraphicsItem * ptr) {
  return static_cast< QGraphicsObject * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr(QGraphicsObject * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsObject_ptr1(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsObject * >(ptr);
}


RITUAL_EXPORT QAbstractGraphicsShapeItem * ctr_qt_widgets_ffi_static_cast_QAbstractGraphicsShapeItem_ptr(QGraphicsItem * ptr) {
  return static_cast< QAbstractGraphicsShapeItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr1(QAbstractGraphicsShapeItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QAbstractGraphicsShapeItem * ctr_qt_widgets_ffi_dynamic_cast_QAbstractGraphicsShapeItem_ptr(QGraphicsItem * ptr) {
  return dynamic_cast< QAbstractGraphicsShapeItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_static_cast_QGraphicsPathItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return static_cast< QGraphicsPathItem * >(ptr);
}


RITUAL_EXPORT QAbstractGraphicsShapeItem * ctr_qt_widgets_ffi_static_cast_QAbstractGraphicsShapeItem_ptr1(QGraphicsPathItem * ptr) {
  return static_cast< QAbstractGraphicsShapeItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsPathItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return dynamic_cast< QGraphicsPathItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_static_cast_QGraphicsPathItem_ptr1(QGraphicsItem * ptr) {
  return static_cast< QGraphicsPathItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr2(QGraphicsPathItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPathItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsPathItem_ptr1(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsPathItem * >(ptr);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_static_cast_QGraphicsRectItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return static_cast< QGraphicsRectItem * >(ptr);
}


RITUAL_EXPORT QAbstractGraphicsShapeItem * ctr_qt_widgets_ffi_static_cast_QAbstractGraphicsShapeItem_ptr2(QGraphicsRectItem * ptr) {
  return static_cast< QAbstractGraphicsShapeItem * >(ptr);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsRectItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return dynamic_cast< QGraphicsRectItem * >(ptr);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_static_cast_QGraphicsRectItem_ptr1(QGraphicsItem * ptr) {
  return static_cast< QGraphicsRectItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr3(QGraphicsRectItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsRectItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsRectItem_ptr1(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsRectItem * >(ptr);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_static_cast_QGraphicsEllipseItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return static_cast< QGraphicsEllipseItem * >(ptr);
}


RITUAL_EXPORT QAbstractGraphicsShapeItem * ctr_qt_widgets_ffi_static_cast_QAbstractGraphicsShapeItem_ptr3(QGraphicsEllipseItem * ptr) {
  return static_cast< QAbstractGraphicsShapeItem * >(ptr);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsEllipseItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return dynamic_cast< QGraphicsEllipseItem * >(ptr);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_static_cast_QGraphicsEllipseItem_ptr1(QGraphicsItem * ptr) {
  return static_cast< QGraphicsEllipseItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr4(QGraphicsEllipseItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsEllipseItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsEllipseItem_ptr1(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsEllipseItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_static_cast_QGraphicsPolygonItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return static_cast< QGraphicsPolygonItem * >(ptr);
}


RITUAL_EXPORT QAbstractGraphicsShapeItem * ctr_qt_widgets_ffi_static_cast_QAbstractGraphicsShapeItem_ptr4(QGraphicsPolygonItem * ptr) {
  return static_cast< QAbstractGraphicsShapeItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsPolygonItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return dynamic_cast< QGraphicsPolygonItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_static_cast_QGraphicsPolygonItem_ptr1(QGraphicsItem * ptr) {
  return static_cast< QGraphicsPolygonItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr5(QGraphicsPolygonItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPolygonItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsPolygonItem_ptr1(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsPolygonItem * >(ptr);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_static_cast_QGraphicsLineItem_ptr(QGraphicsItem * ptr) {
  return static_cast< QGraphicsLineItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr6(QGraphicsLineItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsLineItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsLineItem_ptr(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsLineItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPixmapItem * ctr_qt_widgets_ffi_static_cast_QGraphicsPixmapItem_ptr(QGraphicsItem * ptr) {
  return static_cast< QGraphicsPixmapItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr7(QGraphicsPixmapItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsPixmapItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsPixmapItem_ptr(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsPixmapItem * >(ptr);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_static_cast_QGraphicsTextItem_ptr(QGraphicsObject * ptr) {
  return static_cast< QGraphicsTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_static_cast_QGraphicsObject_ptr2(QGraphicsTextItem * ptr) {
  return static_cast< QGraphicsObject * >(ptr);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsTextItem_ptr(QGraphicsObject * ptr) {
  return dynamic_cast< QGraphicsTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_static_cast_QGraphicsTextItem_ptr1(QObject * ptr) {
  return static_cast< QGraphicsTextItem * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr55(QGraphicsTextItem * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsTextItem_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_static_cast_QGraphicsTextItem_ptr2(QGraphicsItem * ptr) {
  return static_cast< QGraphicsTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr8(QGraphicsTextItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsTextItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsTextItem_ptr2(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_static_cast_QGraphicsSimpleTextItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return static_cast< QGraphicsSimpleTextItem * >(ptr);
}


RITUAL_EXPORT QAbstractGraphicsShapeItem * ctr_qt_widgets_ffi_static_cast_QAbstractGraphicsShapeItem_ptr5(QGraphicsSimpleTextItem * ptr) {
  return static_cast< QAbstractGraphicsShapeItem * >(ptr);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSimpleTextItem_ptr(QAbstractGraphicsShapeItem * ptr) {
  return dynamic_cast< QGraphicsSimpleTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_static_cast_QGraphicsSimpleTextItem_ptr1(QGraphicsItem * ptr) {
  return static_cast< QGraphicsSimpleTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr9(QGraphicsSimpleTextItem * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsSimpleTextItem * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSimpleTextItem_ptr1(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsSimpleTextItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItemGroup * ctr_qt_widgets_ffi_static_cast_QGraphicsItemGroup_ptr(QGraphicsItem * ptr) {
  return static_cast< QGraphicsItemGroup * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr10(QGraphicsItemGroup * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsItemGroup * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsItemGroup_ptr(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsItemGroup * >(ptr);
}


RITUAL_EXPORT QGraphicsLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsLayout_ptr(QGraphicsLayoutItem * ptr) {
  return static_cast< QGraphicsLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_static_cast_QGraphicsLayoutItem_ptr(QGraphicsLayout * ptr) {
  return static_cast< QGraphicsLayoutItem * >(ptr);
}


RITUAL_EXPORT QGraphicsLayout * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsLayout_ptr(QGraphicsLayoutItem * ptr) {
  return dynamic_cast< QGraphicsLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsAnchor * ctr_qt_widgets_ffi_static_cast_QGraphicsAnchor_ptr(QObject * ptr) {
  return static_cast< QGraphicsAnchor * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr56(QGraphicsAnchor * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsAnchor * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsAnchor_ptr(QObject * ptr) {
  return dynamic_cast< QGraphicsAnchor * >(ptr);
}


RITUAL_EXPORT QGraphicsAnchorLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsAnchorLayout_ptr(QGraphicsLayout * ptr) {
  return static_cast< QGraphicsAnchorLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsLayout_ptr1(QGraphicsAnchorLayout * ptr) {
  return static_cast< QGraphicsLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsAnchorLayout * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsAnchorLayout_ptr(QGraphicsLayout * ptr) {
  return dynamic_cast< QGraphicsAnchorLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsAnchorLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsAnchorLayout_ptr1(QGraphicsLayoutItem * ptr) {
  return static_cast< QGraphicsAnchorLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_static_cast_QGraphicsLayoutItem_ptr1(QGraphicsAnchorLayout * ptr) {
  return static_cast< QGraphicsLayoutItem * >(ptr);
}


RITUAL_EXPORT QGraphicsAnchorLayout * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsAnchorLayout_ptr1(QGraphicsLayoutItem * ptr) {
  return dynamic_cast< QGraphicsAnchorLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsEffect_ptr(QObject * ptr) {
  return static_cast< QGraphicsEffect * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr57(QGraphicsEffect * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsEffect_ptr(QObject * ptr) {
  return dynamic_cast< QGraphicsEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsColorizeEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsColorizeEffect_ptr(QGraphicsEffect * ptr) {
  return static_cast< QGraphicsColorizeEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsEffect_ptr1(QGraphicsColorizeEffect * ptr) {
  return static_cast< QGraphicsEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsColorizeEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsColorizeEffect_ptr(QGraphicsEffect * ptr) {
  return dynamic_cast< QGraphicsColorizeEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsColorizeEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsColorizeEffect_ptr1(QObject * ptr) {
  return static_cast< QGraphicsColorizeEffect * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr58(QGraphicsColorizeEffect * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsColorizeEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsColorizeEffect_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsColorizeEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsBlurEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsBlurEffect_ptr(QGraphicsEffect * ptr) {
  return static_cast< QGraphicsBlurEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsEffect_ptr2(QGraphicsBlurEffect * ptr) {
  return static_cast< QGraphicsEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsBlurEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsBlurEffect_ptr(QGraphicsEffect * ptr) {
  return dynamic_cast< QGraphicsBlurEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsBlurEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsBlurEffect_ptr1(QObject * ptr) {
  return static_cast< QGraphicsBlurEffect * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr59(QGraphicsBlurEffect * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsBlurEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsBlurEffect_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsBlurEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsDropShadowEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsDropShadowEffect_ptr(QGraphicsEffect * ptr) {
  return static_cast< QGraphicsDropShadowEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsEffect_ptr3(QGraphicsDropShadowEffect * ptr) {
  return static_cast< QGraphicsEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsDropShadowEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsDropShadowEffect_ptr(QGraphicsEffect * ptr) {
  return dynamic_cast< QGraphicsDropShadowEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsDropShadowEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsDropShadowEffect_ptr1(QObject * ptr) {
  return static_cast< QGraphicsDropShadowEffect * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr60(QGraphicsDropShadowEffect * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsDropShadowEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsDropShadowEffect_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsDropShadowEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsOpacityEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsOpacityEffect_ptr(QGraphicsEffect * ptr) {
  return static_cast< QGraphicsOpacityEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsEffect_ptr4(QGraphicsOpacityEffect * ptr) {
  return static_cast< QGraphicsEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsOpacityEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsOpacityEffect_ptr(QGraphicsEffect * ptr) {
  return dynamic_cast< QGraphicsOpacityEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsOpacityEffect * ctr_qt_widgets_ffi_static_cast_QGraphicsOpacityEffect_ptr1(QObject * ptr) {
  return static_cast< QGraphicsOpacityEffect * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr61(QGraphicsOpacityEffect * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsOpacityEffect * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsOpacityEffect_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsOpacityEffect * >(ptr);
}


RITUAL_EXPORT QGraphicsGridLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsGridLayout_ptr(QGraphicsLayout * ptr) {
  return static_cast< QGraphicsGridLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsLayout_ptr2(QGraphicsGridLayout * ptr) {
  return static_cast< QGraphicsLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsGridLayout * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsGridLayout_ptr(QGraphicsLayout * ptr) {
  return dynamic_cast< QGraphicsGridLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsGridLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsGridLayout_ptr1(QGraphicsLayoutItem * ptr) {
  return static_cast< QGraphicsGridLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_static_cast_QGraphicsLayoutItem_ptr2(QGraphicsGridLayout * ptr) {
  return static_cast< QGraphicsLayoutItem * >(ptr);
}


RITUAL_EXPORT QGraphicsGridLayout * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsGridLayout_ptr1(QGraphicsLayoutItem * ptr) {
  return dynamic_cast< QGraphicsGridLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsItemAnimation * ctr_qt_widgets_ffi_static_cast_QGraphicsItemAnimation_ptr(QObject * ptr) {
  return static_cast< QGraphicsItemAnimation * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr62(QGraphicsItemAnimation * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsItemAnimation * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsItemAnimation_ptr(QObject * ptr) {
  return dynamic_cast< QGraphicsItemAnimation * >(ptr);
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsLinearLayout_ptr(QGraphicsLayout * ptr) {
  return static_cast< QGraphicsLinearLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsLayout_ptr3(QGraphicsLinearLayout * ptr) {
  return static_cast< QGraphicsLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsLinearLayout_ptr(QGraphicsLayout * ptr) {
  return dynamic_cast< QGraphicsLinearLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_static_cast_QGraphicsLinearLayout_ptr1(QGraphicsLayoutItem * ptr) {
  return static_cast< QGraphicsLinearLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_static_cast_QGraphicsLayoutItem_ptr3(QGraphicsLinearLayout * ptr) {
  return static_cast< QGraphicsLayoutItem * >(ptr);
}


RITUAL_EXPORT QGraphicsLinearLayout * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsLinearLayout_ptr1(QGraphicsLayoutItem * ptr) {
  return dynamic_cast< QGraphicsLinearLayout * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsWidget_ptr(QGraphicsObject * ptr) {
  return static_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_static_cast_QGraphicsObject_ptr3(QGraphicsWidget * ptr) {
  return static_cast< QGraphicsObject * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsWidget_ptr(QGraphicsObject * ptr) {
  return dynamic_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsWidget_ptr1(QObject * ptr) {
  return static_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr63(QGraphicsWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsWidget_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsWidget_ptr2(QGraphicsItem * ptr) {
  return static_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr11(QGraphicsWidget * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsWidget_ptr2(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsWidget_ptr3(QGraphicsLayoutItem * ptr) {
  return static_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_static_cast_QGraphicsLayoutItem_ptr4(QGraphicsWidget * ptr) {
  return static_cast< QGraphicsLayoutItem * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsWidget_ptr3(QGraphicsLayoutItem * ptr) {
  return dynamic_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsProxyWidget_ptr(QGraphicsWidget * ptr) {
  return static_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsWidget_ptr4(QGraphicsProxyWidget * ptr) {
  return static_cast< QGraphicsWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsProxyWidget_ptr(QGraphicsWidget * ptr) {
  return dynamic_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsProxyWidget_ptr1(QGraphicsObject * ptr) {
  return static_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsObject * ctr_qt_widgets_ffi_static_cast_QGraphicsObject_ptr4(QGraphicsProxyWidget * ptr) {
  return static_cast< QGraphicsObject * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsProxyWidget_ptr1(QGraphicsObject * ptr) {
  return dynamic_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsProxyWidget_ptr2(QObject * ptr) {
  return static_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr64(QGraphicsProxyWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsProxyWidget_ptr2(QObject * ptr) {
  return dynamic_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsProxyWidget_ptr3(QGraphicsItem * ptr) {
  return static_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsItem * ctr_qt_widgets_ffi_static_cast_QGraphicsItem_ptr12(QGraphicsProxyWidget * ptr) {
  return static_cast< QGraphicsItem * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsProxyWidget_ptr3(QGraphicsItem * ptr) {
  return dynamic_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_static_cast_QGraphicsProxyWidget_ptr4(QGraphicsLayoutItem * ptr) {
  return static_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsLayoutItem * ctr_qt_widgets_ffi_static_cast_QGraphicsLayoutItem_ptr5(QGraphicsProxyWidget * ptr) {
  return static_cast< QGraphicsLayoutItem * >(ptr);
}


RITUAL_EXPORT QGraphicsProxyWidget * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsProxyWidget_ptr4(QGraphicsLayoutItem * ptr) {
  return dynamic_cast< QGraphicsProxyWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_static_cast_QGraphicsScene_ptr(QObject * ptr) {
  return static_cast< QGraphicsScene * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr65(QGraphicsScene * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsScene * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsScene_ptr(QObject * ptr) {
  return dynamic_cast< QGraphicsScene * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr(QEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr1(QGraphicsSceneEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneEvent_ptr(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMouseEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneMouseEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneMouseEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr1(QGraphicsSceneMouseEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMouseEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneMouseEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneMouseEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMouseEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneMouseEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneMouseEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr2(QGraphicsSceneMouseEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMouseEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneMouseEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneMouseEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneWheelEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneWheelEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneWheelEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr2(QGraphicsSceneWheelEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneWheelEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneWheelEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneWheelEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneWheelEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneWheelEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneWheelEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr3(QGraphicsSceneWheelEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneWheelEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneWheelEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneWheelEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneContextMenuEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneContextMenuEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneContextMenuEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr3(QGraphicsSceneContextMenuEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneContextMenuEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneContextMenuEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneContextMenuEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneContextMenuEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneContextMenuEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneContextMenuEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr4(QGraphicsSceneContextMenuEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneContextMenuEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneContextMenuEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneContextMenuEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHoverEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneHoverEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneHoverEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr4(QGraphicsSceneHoverEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHoverEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneHoverEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneHoverEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHoverEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneHoverEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneHoverEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr5(QGraphicsSceneHoverEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHoverEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneHoverEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneHoverEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHelpEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneHelpEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneHelpEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr5(QGraphicsSceneHelpEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHelpEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneHelpEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneHelpEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHelpEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneHelpEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneHelpEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr6(QGraphicsSceneHelpEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneHelpEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneHelpEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneHelpEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneDragDropEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneDragDropEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneDragDropEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr6(QGraphicsSceneDragDropEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneDragDropEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneDragDropEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneDragDropEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneDragDropEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneDragDropEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneDragDropEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr7(QGraphicsSceneDragDropEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneDragDropEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneDragDropEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneDragDropEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneResizeEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneResizeEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneResizeEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr7(QGraphicsSceneResizeEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneResizeEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneResizeEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneResizeEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneResizeEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneResizeEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneResizeEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr8(QGraphicsSceneResizeEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneResizeEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneResizeEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneResizeEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMoveEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneMoveEvent_ptr(QGraphicsSceneEvent * ptr) {
  return static_cast< QGraphicsSceneMoveEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneEvent_ptr8(QGraphicsSceneMoveEvent * ptr) {
  return static_cast< QGraphicsSceneEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMoveEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneMoveEvent_ptr(QGraphicsSceneEvent * ptr) {
  return dynamic_cast< QGraphicsSceneMoveEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMoveEvent * ctr_qt_widgets_ffi_static_cast_QGraphicsSceneMoveEvent_ptr1(QEvent * ptr) {
  return static_cast< QGraphicsSceneMoveEvent * >(ptr);
}


RITUAL_EXPORT QEvent * ctr_qt_widgets_ffi_static_cast_QEvent_ptr9(QGraphicsSceneMoveEvent * ptr) {
  return static_cast< QEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsSceneMoveEvent * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsSceneMoveEvent_ptr1(QEvent * ptr) {
  return dynamic_cast< QGraphicsSceneMoveEvent * >(ptr);
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_static_cast_QGraphicsTransform_ptr(QObject * ptr) {
  return static_cast< QGraphicsTransform * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr66(QGraphicsTransform * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsTransform_ptr(QObject * ptr) {
  return dynamic_cast< QGraphicsTransform * >(ptr);
}


RITUAL_EXPORT QGraphicsScale * ctr_qt_widgets_ffi_static_cast_QGraphicsScale_ptr(QGraphicsTransform * ptr) {
  return static_cast< QGraphicsScale * >(ptr);
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_static_cast_QGraphicsTransform_ptr1(QGraphicsScale * ptr) {
  return static_cast< QGraphicsTransform * >(ptr);
}


RITUAL_EXPORT QGraphicsScale * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsScale_ptr(QGraphicsTransform * ptr) {
  return dynamic_cast< QGraphicsScale * >(ptr);
}


RITUAL_EXPORT QGraphicsScale * ctr_qt_widgets_ffi_static_cast_QGraphicsScale_ptr1(QObject * ptr) {
  return static_cast< QGraphicsScale * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr67(QGraphicsScale * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsScale * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsScale_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsScale * >(ptr);
}


RITUAL_EXPORT QGraphicsRotation * ctr_qt_widgets_ffi_static_cast_QGraphicsRotation_ptr(QGraphicsTransform * ptr) {
  return static_cast< QGraphicsRotation * >(ptr);
}


RITUAL_EXPORT QGraphicsTransform * ctr_qt_widgets_ffi_static_cast_QGraphicsTransform_ptr2(QGraphicsRotation * ptr) {
  return static_cast< QGraphicsTransform * >(ptr);
}


RITUAL_EXPORT QGraphicsRotation * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsRotation_ptr(QGraphicsTransform * ptr) {
  return dynamic_cast< QGraphicsRotation * >(ptr);
}


RITUAL_EXPORT QGraphicsRotation * ctr_qt_widgets_ffi_static_cast_QGraphicsRotation_ptr1(QObject * ptr) {
  return static_cast< QGraphicsRotation * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr68(QGraphicsRotation * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsRotation * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsRotation_ptr1(QObject * ptr) {
  return dynamic_cast< QGraphicsRotation * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_static_cast_QScrollArea_ptr(QAbstractScrollArea * ptr) {
  return static_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr6(QScrollArea * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QScrollArea_ptr(QAbstractScrollArea * ptr) {
  return dynamic_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_static_cast_QScrollArea_ptr1(QFrame * ptr) {
  return static_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr6(QScrollArea * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QScrollArea_ptr1(QFrame * ptr) {
  return dynamic_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_static_cast_QScrollArea_ptr2(QWidget * ptr) {
  return static_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr32(QScrollArea * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QScrollArea_ptr2(QWidget * ptr) {
  return dynamic_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_static_cast_QScrollArea_ptr3(QObject * ptr) {
  return static_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr69(QScrollArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QScrollArea_ptr3(QObject * ptr) {
  return dynamic_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_static_cast_QScrollArea_ptr4(QPaintDevice * ptr) {
  return static_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr31(QScrollArea * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QScrollArea * ctr_qt_widgets_ffi_dynamic_cast_QScrollArea_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QScrollArea * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_static_cast_QGraphicsView_ptr(QAbstractScrollArea * ptr) {
  return static_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr7(QGraphicsView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsView_ptr(QAbstractScrollArea * ptr) {
  return dynamic_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_static_cast_QGraphicsView_ptr1(QFrame * ptr) {
  return static_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr7(QGraphicsView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsView_ptr1(QFrame * ptr) {
  return dynamic_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_static_cast_QGraphicsView_ptr2(QWidget * ptr) {
  return static_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr33(QGraphicsView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsView_ptr2(QWidget * ptr) {
  return dynamic_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_static_cast_QGraphicsView_ptr3(QObject * ptr) {
  return static_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr70(QGraphicsView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsView_ptr3(QObject * ptr) {
  return dynamic_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_static_cast_QGraphicsView_ptr4(QPaintDevice * ptr) {
  return static_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr32(QGraphicsView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QGraphicsView * ctr_qt_widgets_ffi_dynamic_cast_QGraphicsView_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QGraphicsView * >(ptr);
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_static_cast_QGroupBox_ptr(QWidget * ptr) {
  return static_cast< QGroupBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr34(QGroupBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_dynamic_cast_QGroupBox_ptr(QWidget * ptr) {
  return dynamic_cast< QGroupBox * >(ptr);
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_static_cast_QGroupBox_ptr1(QObject * ptr) {
  return static_cast< QGroupBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr71(QGroupBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_dynamic_cast_QGroupBox_ptr1(QObject * ptr) {
  return dynamic_cast< QGroupBox * >(ptr);
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_static_cast_QGroupBox_ptr2(QPaintDevice * ptr) {
  return static_cast< QGroupBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr33(QGroupBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QGroupBox * ctr_qt_widgets_ffi_dynamic_cast_QGroupBox_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QGroupBox * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_static_cast_QHeaderView_ptr(QAbstractItemView * ptr) {
  return static_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr6(QHeaderView * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_dynamic_cast_QHeaderView_ptr(QAbstractItemView * ptr) {
  return dynamic_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_static_cast_QHeaderView_ptr1(QAbstractScrollArea * ptr) {
  return static_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr8(QHeaderView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_dynamic_cast_QHeaderView_ptr1(QAbstractScrollArea * ptr) {
  return dynamic_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_static_cast_QHeaderView_ptr2(QFrame * ptr) {
  return static_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr8(QHeaderView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_dynamic_cast_QHeaderView_ptr2(QFrame * ptr) {
  return dynamic_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_static_cast_QHeaderView_ptr3(QWidget * ptr) {
  return static_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr35(QHeaderView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_dynamic_cast_QHeaderView_ptr3(QWidget * ptr) {
  return dynamic_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_static_cast_QHeaderView_ptr4(QObject * ptr) {
  return static_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr72(QHeaderView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_dynamic_cast_QHeaderView_ptr4(QObject * ptr) {
  return dynamic_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_static_cast_QHeaderView_ptr5(QPaintDevice * ptr) {
  return static_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr34(QHeaderView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QHeaderView * ctr_qt_widgets_ffi_dynamic_cast_QHeaderView_ptr5(QPaintDevice * ptr) {
  return dynamic_cast< QHeaderView * >(ptr);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_static_cast_QLineEdit_ptr(QWidget * ptr) {
  return static_cast< QLineEdit * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr36(QLineEdit * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_dynamic_cast_QLineEdit_ptr(QWidget * ptr) {
  return dynamic_cast< QLineEdit * >(ptr);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_static_cast_QLineEdit_ptr1(QObject * ptr) {
  return static_cast< QLineEdit * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr73(QLineEdit * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_dynamic_cast_QLineEdit_ptr1(QObject * ptr) {
  return dynamic_cast< QLineEdit * >(ptr);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_static_cast_QLineEdit_ptr2(QPaintDevice * ptr) {
  return static_cast< QLineEdit * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr35(QLineEdit * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QLineEdit * ctr_qt_widgets_ffi_dynamic_cast_QLineEdit_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QLineEdit * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_static_cast_QInputDialog_ptr(QDialog * ptr) {
  return static_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr7(QInputDialog * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_dynamic_cast_QInputDialog_ptr(QDialog * ptr) {
  return dynamic_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_static_cast_QInputDialog_ptr1(QWidget * ptr) {
  return static_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr37(QInputDialog * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_dynamic_cast_QInputDialog_ptr1(QWidget * ptr) {
  return dynamic_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_static_cast_QInputDialog_ptr2(QObject * ptr) {
  return static_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr74(QInputDialog * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_dynamic_cast_QInputDialog_ptr2(QObject * ptr) {
  return dynamic_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_static_cast_QInputDialog_ptr3(QPaintDevice * ptr) {
  return static_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr36(QInputDialog * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QInputDialog * ctr_qt_widgets_ffi_dynamic_cast_QInputDialog_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QInputDialog * >(ptr);
}


RITUAL_EXPORT QItemDelegate * ctr_qt_widgets_ffi_static_cast_QItemDelegate_ptr(QAbstractItemDelegate * ptr) {
  return static_cast< QItemDelegate * >(ptr);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_static_cast_QAbstractItemDelegate_ptr1(QItemDelegate * ptr) {
  return static_cast< QAbstractItemDelegate * >(ptr);
}


RITUAL_EXPORT QItemDelegate * ctr_qt_widgets_ffi_dynamic_cast_QItemDelegate_ptr(QAbstractItemDelegate * ptr) {
  return dynamic_cast< QItemDelegate * >(ptr);
}


RITUAL_EXPORT QItemDelegate * ctr_qt_widgets_ffi_static_cast_QItemDelegate_ptr1(QObject * ptr) {
  return static_cast< QItemDelegate * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr75(QItemDelegate * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QItemDelegate * ctr_qt_widgets_ffi_dynamic_cast_QItemDelegate_ptr1(QObject * ptr) {
  return dynamic_cast< QItemDelegate * >(ptr);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_static_cast_QKeyEventTransition_ptr(QEventTransition * ptr) {
  return static_cast< QKeyEventTransition * >(ptr);
}


RITUAL_EXPORT QEventTransition * ctr_qt_widgets_ffi_static_cast_QEventTransition_ptr(QKeyEventTransition * ptr) {
  return static_cast< QEventTransition * >(ptr);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_dynamic_cast_QKeyEventTransition_ptr(QEventTransition * ptr) {
  return dynamic_cast< QKeyEventTransition * >(ptr);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_static_cast_QKeyEventTransition_ptr1(QAbstractTransition * ptr) {
  return static_cast< QKeyEventTransition * >(ptr);
}


RITUAL_EXPORT QAbstractTransition * ctr_qt_widgets_ffi_static_cast_QAbstractTransition_ptr(QKeyEventTransition * ptr) {
  return static_cast< QAbstractTransition * >(ptr);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_dynamic_cast_QKeyEventTransition_ptr1(QAbstractTransition * ptr) {
  return dynamic_cast< QKeyEventTransition * >(ptr);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_static_cast_QKeyEventTransition_ptr2(QObject * ptr) {
  return static_cast< QKeyEventTransition * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr76(QKeyEventTransition * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QKeyEventTransition * ctr_qt_widgets_ffi_dynamic_cast_QKeyEventTransition_ptr2(QObject * ptr) {
  return dynamic_cast< QKeyEventTransition * >(ptr);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_static_cast_QKeySequenceEdit_ptr(QWidget * ptr) {
  return static_cast< QKeySequenceEdit * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr38(QKeySequenceEdit * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_dynamic_cast_QKeySequenceEdit_ptr(QWidget * ptr) {
  return dynamic_cast< QKeySequenceEdit * >(ptr);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_static_cast_QKeySequenceEdit_ptr1(QObject * ptr) {
  return static_cast< QKeySequenceEdit * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr77(QKeySequenceEdit * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_dynamic_cast_QKeySequenceEdit_ptr1(QObject * ptr) {
  return dynamic_cast< QKeySequenceEdit * >(ptr);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_static_cast_QKeySequenceEdit_ptr2(QPaintDevice * ptr) {
  return static_cast< QKeySequenceEdit * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr37(QKeySequenceEdit * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QKeySequenceEdit * ctr_qt_widgets_ffi_dynamic_cast_QKeySequenceEdit_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QKeySequenceEdit * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_static_cast_QLabel_ptr(QFrame * ptr) {
  return static_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr9(QLabel * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_dynamic_cast_QLabel_ptr(QFrame * ptr) {
  return dynamic_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_static_cast_QLabel_ptr1(QWidget * ptr) {
  return static_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr39(QLabel * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_dynamic_cast_QLabel_ptr1(QWidget * ptr) {
  return dynamic_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_static_cast_QLabel_ptr2(QObject * ptr) {
  return static_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr78(QLabel * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_dynamic_cast_QLabel_ptr2(QObject * ptr) {
  return dynamic_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_static_cast_QLabel_ptr3(QPaintDevice * ptr) {
  return static_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr38(QLabel * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QLabel * ctr_qt_widgets_ffi_dynamic_cast_QLabel_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QLabel * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_static_cast_QLCDNumber_ptr(QFrame * ptr) {
  return static_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr10(QLCDNumber * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_dynamic_cast_QLCDNumber_ptr(QFrame * ptr) {
  return dynamic_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_static_cast_QLCDNumber_ptr1(QWidget * ptr) {
  return static_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr40(QLCDNumber * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_dynamic_cast_QLCDNumber_ptr1(QWidget * ptr) {
  return dynamic_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_static_cast_QLCDNumber_ptr2(QObject * ptr) {
  return static_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr79(QLCDNumber * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_dynamic_cast_QLCDNumber_ptr2(QObject * ptr) {
  return dynamic_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_static_cast_QLCDNumber_ptr3(QPaintDevice * ptr) {
  return static_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr39(QLCDNumber * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QLCDNumber * ctr_qt_widgets_ffi_dynamic_cast_QLCDNumber_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QLCDNumber * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr(QAbstractItemView * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr7(QListView * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_dynamic_cast_QListView_ptr(QAbstractItemView * ptr) {
  return dynamic_cast< QListView * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr1(QAbstractScrollArea * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr9(QListView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_dynamic_cast_QListView_ptr1(QAbstractScrollArea * ptr) {
  return dynamic_cast< QListView * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr2(QFrame * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr11(QListView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_dynamic_cast_QListView_ptr2(QFrame * ptr) {
  return dynamic_cast< QListView * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr3(QWidget * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr41(QListView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_dynamic_cast_QListView_ptr3(QWidget * ptr) {
  return dynamic_cast< QListView * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr4(QObject * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr80(QListView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_dynamic_cast_QListView_ptr4(QObject * ptr) {
  return dynamic_cast< QListView * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr5(QPaintDevice * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr40(QListView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_dynamic_cast_QListView_ptr5(QPaintDevice * ptr) {
  return dynamic_cast< QListView * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_static_cast_QListWidget_ptr(QListView * ptr) {
  return static_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr6(QListWidget * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_dynamic_cast_QListWidget_ptr(QListView * ptr) {
  return dynamic_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_static_cast_QListWidget_ptr1(QAbstractItemView * ptr) {
  return static_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr8(QListWidget * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_dynamic_cast_QListWidget_ptr1(QAbstractItemView * ptr) {
  return dynamic_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_static_cast_QListWidget_ptr2(QAbstractScrollArea * ptr) {
  return static_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr10(QListWidget * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_dynamic_cast_QListWidget_ptr2(QAbstractScrollArea * ptr) {
  return dynamic_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_static_cast_QListWidget_ptr3(QFrame * ptr) {
  return static_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr12(QListWidget * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_dynamic_cast_QListWidget_ptr3(QFrame * ptr) {
  return dynamic_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_static_cast_QListWidget_ptr4(QWidget * ptr) {
  return static_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr42(QListWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_dynamic_cast_QListWidget_ptr4(QWidget * ptr) {
  return dynamic_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_static_cast_QListWidget_ptr5(QObject * ptr) {
  return static_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr81(QListWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_dynamic_cast_QListWidget_ptr5(QObject * ptr) {
  return dynamic_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_static_cast_QListWidget_ptr6(QPaintDevice * ptr) {
  return static_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr41(QListWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QListWidget * ctr_qt_widgets_ffi_dynamic_cast_QListWidget_ptr6(QPaintDevice * ptr) {
  return dynamic_cast< QListWidget * >(ptr);
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_static_cast_QMainWindow_ptr(QWidget * ptr) {
  return static_cast< QMainWindow * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr43(QMainWindow * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_dynamic_cast_QMainWindow_ptr(QWidget * ptr) {
  return dynamic_cast< QMainWindow * >(ptr);
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_static_cast_QMainWindow_ptr1(QObject * ptr) {
  return static_cast< QMainWindow * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr82(QMainWindow * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_dynamic_cast_QMainWindow_ptr1(QObject * ptr) {
  return dynamic_cast< QMainWindow * >(ptr);
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_static_cast_QMainWindow_ptr2(QPaintDevice * ptr) {
  return static_cast< QMainWindow * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr42(QMainWindow * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QMainWindow * ctr_qt_widgets_ffi_dynamic_cast_QMainWindow_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QMainWindow * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_static_cast_QMdiArea_ptr(QAbstractScrollArea * ptr) {
  return static_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr11(QMdiArea * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_dynamic_cast_QMdiArea_ptr(QAbstractScrollArea * ptr) {
  return dynamic_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_static_cast_QMdiArea_ptr1(QFrame * ptr) {
  return static_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr13(QMdiArea * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_dynamic_cast_QMdiArea_ptr1(QFrame * ptr) {
  return dynamic_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_static_cast_QMdiArea_ptr2(QWidget * ptr) {
  return static_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr44(QMdiArea * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_dynamic_cast_QMdiArea_ptr2(QWidget * ptr) {
  return dynamic_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_static_cast_QMdiArea_ptr3(QObject * ptr) {
  return static_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr83(QMdiArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_dynamic_cast_QMdiArea_ptr3(QObject * ptr) {
  return dynamic_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_static_cast_QMdiArea_ptr4(QPaintDevice * ptr) {
  return static_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr43(QMdiArea * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QMdiArea * ctr_qt_widgets_ffi_dynamic_cast_QMdiArea_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QMdiArea * >(ptr);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_static_cast_QMdiSubWindow_ptr(QWidget * ptr) {
  return static_cast< QMdiSubWindow * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr45(QMdiSubWindow * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_dynamic_cast_QMdiSubWindow_ptr(QWidget * ptr) {
  return dynamic_cast< QMdiSubWindow * >(ptr);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_static_cast_QMdiSubWindow_ptr1(QObject * ptr) {
  return static_cast< QMdiSubWindow * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr84(QMdiSubWindow * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_dynamic_cast_QMdiSubWindow_ptr1(QObject * ptr) {
  return dynamic_cast< QMdiSubWindow * >(ptr);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_static_cast_QMdiSubWindow_ptr2(QPaintDevice * ptr) {
  return static_cast< QMdiSubWindow * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr44(QMdiSubWindow * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QMdiSubWindow * ctr_qt_widgets_ffi_dynamic_cast_QMdiSubWindow_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QMdiSubWindow * >(ptr);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_static_cast_QMenu_ptr(QWidget * ptr) {
  return static_cast< QMenu * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr46(QMenu * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_dynamic_cast_QMenu_ptr(QWidget * ptr) {
  return dynamic_cast< QMenu * >(ptr);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_static_cast_QMenu_ptr1(QObject * ptr) {
  return static_cast< QMenu * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr85(QMenu * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_dynamic_cast_QMenu_ptr1(QObject * ptr) {
  return dynamic_cast< QMenu * >(ptr);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_static_cast_QMenu_ptr2(QPaintDevice * ptr) {
  return static_cast< QMenu * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr45(QMenu * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QMenu * ctr_qt_widgets_ffi_dynamic_cast_QMenu_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QMenu * >(ptr);
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_static_cast_QMenuBar_ptr(QWidget * ptr) {
  return static_cast< QMenuBar * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr47(QMenuBar * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_dynamic_cast_QMenuBar_ptr(QWidget * ptr) {
  return dynamic_cast< QMenuBar * >(ptr);
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_static_cast_QMenuBar_ptr1(QObject * ptr) {
  return static_cast< QMenuBar * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr86(QMenuBar * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_dynamic_cast_QMenuBar_ptr1(QObject * ptr) {
  return dynamic_cast< QMenuBar * >(ptr);
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_static_cast_QMenuBar_ptr2(QPaintDevice * ptr) {
  return static_cast< QMenuBar * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr46(QMenuBar * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QMenuBar * ctr_qt_widgets_ffi_dynamic_cast_QMenuBar_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QMenuBar * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_static_cast_QMessageBox_ptr(QDialog * ptr) {
  return static_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr8(QMessageBox * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_dynamic_cast_QMessageBox_ptr(QDialog * ptr) {
  return dynamic_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_static_cast_QMessageBox_ptr1(QWidget * ptr) {
  return static_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr48(QMessageBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_dynamic_cast_QMessageBox_ptr1(QWidget * ptr) {
  return dynamic_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_static_cast_QMessageBox_ptr2(QObject * ptr) {
  return static_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr87(QMessageBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_dynamic_cast_QMessageBox_ptr2(QObject * ptr) {
  return dynamic_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_static_cast_QMessageBox_ptr3(QPaintDevice * ptr) {
  return static_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr47(QMessageBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QMessageBox * ctr_qt_widgets_ffi_dynamic_cast_QMessageBox_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QMessageBox * >(ptr);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_static_cast_QMouseEventTransition_ptr(QEventTransition * ptr) {
  return static_cast< QMouseEventTransition * >(ptr);
}


RITUAL_EXPORT QEventTransition * ctr_qt_widgets_ffi_static_cast_QEventTransition_ptr1(QMouseEventTransition * ptr) {
  return static_cast< QEventTransition * >(ptr);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_dynamic_cast_QMouseEventTransition_ptr(QEventTransition * ptr) {
  return dynamic_cast< QMouseEventTransition * >(ptr);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_static_cast_QMouseEventTransition_ptr1(QAbstractTransition * ptr) {
  return static_cast< QMouseEventTransition * >(ptr);
}


RITUAL_EXPORT QAbstractTransition * ctr_qt_widgets_ffi_static_cast_QAbstractTransition_ptr1(QMouseEventTransition * ptr) {
  return static_cast< QAbstractTransition * >(ptr);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_dynamic_cast_QMouseEventTransition_ptr1(QAbstractTransition * ptr) {
  return dynamic_cast< QMouseEventTransition * >(ptr);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_static_cast_QMouseEventTransition_ptr2(QObject * ptr) {
  return static_cast< QMouseEventTransition * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr88(QMouseEventTransition * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QMouseEventTransition * ctr_qt_widgets_ffi_dynamic_cast_QMouseEventTransition_ptr2(QObject * ptr) {
  return dynamic_cast< QMouseEventTransition * >(ptr);
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_static_cast_QOpenGLWidget_ptr(QWidget * ptr) {
  return static_cast< QOpenGLWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr49(QOpenGLWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_dynamic_cast_QOpenGLWidget_ptr(QWidget * ptr) {
  return dynamic_cast< QOpenGLWidget * >(ptr);
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_static_cast_QOpenGLWidget_ptr1(QObject * ptr) {
  return static_cast< QOpenGLWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr89(QOpenGLWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_dynamic_cast_QOpenGLWidget_ptr1(QObject * ptr) {
  return dynamic_cast< QOpenGLWidget * >(ptr);
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_static_cast_QOpenGLWidget_ptr2(QPaintDevice * ptr) {
  return static_cast< QOpenGLWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr48(QOpenGLWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QOpenGLWidget * ctr_qt_widgets_ffi_dynamic_cast_QOpenGLWidget_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QOpenGLWidget * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_static_cast_QTextEdit_ptr(QAbstractScrollArea * ptr) {
  return static_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr12(QTextEdit * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QTextEdit_ptr(QAbstractScrollArea * ptr) {
  return dynamic_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_static_cast_QTextEdit_ptr1(QFrame * ptr) {
  return static_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr14(QTextEdit * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QTextEdit_ptr1(QFrame * ptr) {
  return dynamic_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_static_cast_QTextEdit_ptr2(QWidget * ptr) {
  return static_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr50(QTextEdit * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QTextEdit_ptr2(QWidget * ptr) {
  return dynamic_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_static_cast_QTextEdit_ptr3(QObject * ptr) {
  return static_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr90(QTextEdit * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QTextEdit_ptr3(QObject * ptr) {
  return dynamic_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_static_cast_QTextEdit_ptr4(QPaintDevice * ptr) {
  return static_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr49(QTextEdit * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QTextEdit_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_static_cast_QPlainTextEdit_ptr(QAbstractScrollArea * ptr) {
  return static_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr13(QPlainTextEdit * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QPlainTextEdit_ptr(QAbstractScrollArea * ptr) {
  return dynamic_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_static_cast_QPlainTextEdit_ptr1(QFrame * ptr) {
  return static_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr15(QPlainTextEdit * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QPlainTextEdit_ptr1(QFrame * ptr) {
  return dynamic_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_static_cast_QPlainTextEdit_ptr2(QWidget * ptr) {
  return static_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr51(QPlainTextEdit * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QPlainTextEdit_ptr2(QWidget * ptr) {
  return dynamic_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_static_cast_QPlainTextEdit_ptr3(QObject * ptr) {
  return static_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr91(QPlainTextEdit * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QPlainTextEdit_ptr3(QObject * ptr) {
  return dynamic_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_static_cast_QPlainTextEdit_ptr4(QPaintDevice * ptr) {
  return static_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr50(QPlainTextEdit * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QPlainTextEdit * ctr_qt_widgets_ffi_dynamic_cast_QPlainTextEdit_ptr4(QPaintDevice * ptr) {
  return dynamic_cast< QPlainTextEdit * >(ptr);
}


RITUAL_EXPORT QPlainTextDocumentLayout * ctr_qt_widgets_ffi_static_cast_QPlainTextDocumentLayout_ptr(QAbstractTextDocumentLayout * ptr) {
  return static_cast< QPlainTextDocumentLayout * >(ptr);
}


RITUAL_EXPORT QAbstractTextDocumentLayout * ctr_qt_widgets_ffi_static_cast_QAbstractTextDocumentLayout_ptr(QPlainTextDocumentLayout * ptr) {
  return static_cast< QAbstractTextDocumentLayout * >(ptr);
}


RITUAL_EXPORT QPlainTextDocumentLayout * ctr_qt_widgets_ffi_dynamic_cast_QPlainTextDocumentLayout_ptr(QAbstractTextDocumentLayout * ptr) {
  return dynamic_cast< QPlainTextDocumentLayout * >(ptr);
}


RITUAL_EXPORT QPlainTextDocumentLayout * ctr_qt_widgets_ffi_static_cast_QPlainTextDocumentLayout_ptr1(QObject * ptr) {
  return static_cast< QPlainTextDocumentLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr92(QPlainTextDocumentLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QPlainTextDocumentLayout * ctr_qt_widgets_ffi_dynamic_cast_QPlainTextDocumentLayout_ptr1(QObject * ptr) {
  return dynamic_cast< QPlainTextDocumentLayout * >(ptr);
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_static_cast_QProgressBar_ptr(QWidget * ptr) {
  return static_cast< QProgressBar * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr52(QProgressBar * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_dynamic_cast_QProgressBar_ptr(QWidget * ptr) {
  return dynamic_cast< QProgressBar * >(ptr);
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_static_cast_QProgressBar_ptr1(QObject * ptr) {
  return static_cast< QProgressBar * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr93(QProgressBar * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_dynamic_cast_QProgressBar_ptr1(QObject * ptr) {
  return dynamic_cast< QProgressBar * >(ptr);
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_static_cast_QProgressBar_ptr2(QPaintDevice * ptr) {
  return static_cast< QProgressBar * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr51(QProgressBar * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QProgressBar * ctr_qt_widgets_ffi_dynamic_cast_QProgressBar_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QProgressBar * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_static_cast_QProgressDialog_ptr(QDialog * ptr) {
  return static_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr9(QProgressDialog * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_dynamic_cast_QProgressDialog_ptr(QDialog * ptr) {
  return dynamic_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_static_cast_QProgressDialog_ptr1(QWidget * ptr) {
  return static_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr53(QProgressDialog * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_dynamic_cast_QProgressDialog_ptr1(QWidget * ptr) {
  return dynamic_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_static_cast_QProgressDialog_ptr2(QObject * ptr) {
  return static_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr94(QProgressDialog * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_dynamic_cast_QProgressDialog_ptr2(QObject * ptr) {
  return dynamic_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_static_cast_QProgressDialog_ptr3(QPaintDevice * ptr) {
  return static_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr52(QProgressDialog * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QProgressDialog * ctr_qt_widgets_ffi_dynamic_cast_QProgressDialog_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QProgressDialog * >(ptr);
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_static_cast_QProxyStyle_ptr(QCommonStyle * ptr) {
  return static_cast< QProxyStyle * >(ptr);
}


RITUAL_EXPORT QCommonStyle * ctr_qt_widgets_ffi_static_cast_QCommonStyle_ptr2(QProxyStyle * ptr) {
  return static_cast< QCommonStyle * >(ptr);
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_dynamic_cast_QProxyStyle_ptr(QCommonStyle * ptr) {
  return dynamic_cast< QProxyStyle * >(ptr);
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_static_cast_QProxyStyle_ptr1(QStyle * ptr) {
  return static_cast< QProxyStyle * >(ptr);
}


RITUAL_EXPORT QStyle * ctr_qt_widgets_ffi_static_cast_QStyle_ptr2(QProxyStyle * ptr) {
  return static_cast< QStyle * >(ptr);
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_dynamic_cast_QProxyStyle_ptr1(QStyle * ptr) {
  return dynamic_cast< QProxyStyle * >(ptr);
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_static_cast_QProxyStyle_ptr2(QObject * ptr) {
  return static_cast< QProxyStyle * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr95(QProxyStyle * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QProxyStyle * ctr_qt_widgets_ffi_dynamic_cast_QProxyStyle_ptr2(QObject * ptr) {
  return dynamic_cast< QProxyStyle * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_static_cast_QRadioButton_ptr(QAbstractButton * ptr) {
  return static_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr6(QRadioButton * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_dynamic_cast_QRadioButton_ptr(QAbstractButton * ptr) {
  return dynamic_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_static_cast_QRadioButton_ptr1(QWidget * ptr) {
  return static_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr54(QRadioButton * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_dynamic_cast_QRadioButton_ptr1(QWidget * ptr) {
  return dynamic_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_static_cast_QRadioButton_ptr2(QObject * ptr) {
  return static_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr96(QRadioButton * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_dynamic_cast_QRadioButton_ptr2(QObject * ptr) {
  return dynamic_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_static_cast_QRadioButton_ptr3(QPaintDevice * ptr) {
  return static_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr53(QRadioButton * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QRadioButton * ctr_qt_widgets_ffi_dynamic_cast_QRadioButton_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QRadioButton * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_static_cast_QScrollBar_ptr(QAbstractSlider * ptr) {
  return static_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QAbstractSlider * ctr_qt_widgets_ffi_static_cast_QAbstractSlider_ptr5(QScrollBar * ptr) {
  return static_cast< QAbstractSlider * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_dynamic_cast_QScrollBar_ptr(QAbstractSlider * ptr) {
  return dynamic_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_static_cast_QScrollBar_ptr1(QWidget * ptr) {
  return static_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr55(QScrollBar * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_dynamic_cast_QScrollBar_ptr1(QWidget * ptr) {
  return dynamic_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_static_cast_QScrollBar_ptr2(QObject * ptr) {
  return static_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr97(QScrollBar * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_dynamic_cast_QScrollBar_ptr2(QObject * ptr) {
  return dynamic_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_static_cast_QScrollBar_ptr3(QPaintDevice * ptr) {
  return static_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr54(QScrollBar * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QScrollBar * ctr_qt_widgets_ffi_dynamic_cast_QScrollBar_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QScrollBar * >(ptr);
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_static_cast_QScroller_ptr(QObject * ptr) {
  return static_cast< QScroller * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr98(QScroller * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QScroller * ctr_qt_widgets_ffi_dynamic_cast_QScroller_ptr(QObject * ptr) {
  return dynamic_cast< QScroller * >(ptr);
}


RITUAL_EXPORT QShortcut * ctr_qt_widgets_ffi_static_cast_QShortcut_ptr(QObject * ptr) {
  return static_cast< QShortcut * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr99(QShortcut * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QShortcut * ctr_qt_widgets_ffi_dynamic_cast_QShortcut_ptr(QObject * ptr) {
  return dynamic_cast< QShortcut * >(ptr);
}


RITUAL_EXPORT QSizeGrip * ctr_qt_widgets_ffi_static_cast_QSizeGrip_ptr(QWidget * ptr) {
  return static_cast< QSizeGrip * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr56(QSizeGrip * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QSizeGrip * ctr_qt_widgets_ffi_dynamic_cast_QSizeGrip_ptr(QWidget * ptr) {
  return dynamic_cast< QSizeGrip * >(ptr);
}


RITUAL_EXPORT QSizeGrip * ctr_qt_widgets_ffi_static_cast_QSizeGrip_ptr1(QObject * ptr) {
  return static_cast< QSizeGrip * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr100(QSizeGrip * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSizeGrip * ctr_qt_widgets_ffi_dynamic_cast_QSizeGrip_ptr1(QObject * ptr) {
  return dynamic_cast< QSizeGrip * >(ptr);
}


RITUAL_EXPORT QSizeGrip * ctr_qt_widgets_ffi_static_cast_QSizeGrip_ptr2(QPaintDevice * ptr) {
  return static_cast< QSizeGrip * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr55(QSizeGrip * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QSizeGrip * ctr_qt_widgets_ffi_dynamic_cast_QSizeGrip_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QSizeGrip * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_static_cast_QSpinBox_ptr(QAbstractSpinBox * ptr) {
  return static_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr6(QSpinBox * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QSpinBox_ptr(QAbstractSpinBox * ptr) {
  return dynamic_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_static_cast_QSpinBox_ptr1(QWidget * ptr) {
  return static_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr57(QSpinBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QSpinBox_ptr1(QWidget * ptr) {
  return dynamic_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_static_cast_QSpinBox_ptr2(QObject * ptr) {
  return static_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr101(QSpinBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QSpinBox_ptr2(QObject * ptr) {
  return dynamic_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_static_cast_QSpinBox_ptr3(QPaintDevice * ptr) {
  return static_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr56(QSpinBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QSpinBox_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QSpinBox * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_static_cast_QDoubleSpinBox_ptr(QAbstractSpinBox * ptr) {
  return static_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QAbstractSpinBox * ctr_qt_widgets_ffi_static_cast_QAbstractSpinBox_ptr7(QDoubleSpinBox * ptr) {
  return static_cast< QAbstractSpinBox * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QDoubleSpinBox_ptr(QAbstractSpinBox * ptr) {
  return dynamic_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_static_cast_QDoubleSpinBox_ptr1(QWidget * ptr) {
  return static_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr58(QDoubleSpinBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QDoubleSpinBox_ptr1(QWidget * ptr) {
  return dynamic_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_static_cast_QDoubleSpinBox_ptr2(QObject * ptr) {
  return static_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr102(QDoubleSpinBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QDoubleSpinBox_ptr2(QObject * ptr) {
  return dynamic_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_static_cast_QDoubleSpinBox_ptr3(QPaintDevice * ptr) {
  return static_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr57(QDoubleSpinBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QDoubleSpinBox * ctr_qt_widgets_ffi_dynamic_cast_QDoubleSpinBox_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QDoubleSpinBox * >(ptr);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_static_cast_QSplashScreen_ptr(QWidget * ptr) {
  return static_cast< QSplashScreen * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr59(QSplashScreen * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_dynamic_cast_QSplashScreen_ptr(QWidget * ptr) {
  return dynamic_cast< QSplashScreen * >(ptr);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_static_cast_QSplashScreen_ptr1(QObject * ptr) {
  return static_cast< QSplashScreen * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr103(QSplashScreen * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_dynamic_cast_QSplashScreen_ptr1(QObject * ptr) {
  return dynamic_cast< QSplashScreen * >(ptr);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_static_cast_QSplashScreen_ptr2(QPaintDevice * ptr) {
  return static_cast< QSplashScreen * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr58(QSplashScreen * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QSplashScreen * ctr_qt_widgets_ffi_dynamic_cast_QSplashScreen_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QSplashScreen * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_static_cast_QSplitter_ptr(QFrame * ptr) {
  return static_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr16(QSplitter * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_dynamic_cast_QSplitter_ptr(QFrame * ptr) {
  return dynamic_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_static_cast_QSplitter_ptr1(QWidget * ptr) {
  return static_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr60(QSplitter * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_dynamic_cast_QSplitter_ptr1(QWidget * ptr) {
  return dynamic_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_static_cast_QSplitter_ptr2(QObject * ptr) {
  return static_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr104(QSplitter * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_dynamic_cast_QSplitter_ptr2(QObject * ptr) {
  return dynamic_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_static_cast_QSplitter_ptr3(QPaintDevice * ptr) {
  return static_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr59(QSplitter * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QSplitter * ctr_qt_widgets_ffi_dynamic_cast_QSplitter_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QSplitter * >(ptr);
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_static_cast_QSplitterHandle_ptr(QWidget * ptr) {
  return static_cast< QSplitterHandle * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr61(QSplitterHandle * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_dynamic_cast_QSplitterHandle_ptr(QWidget * ptr) {
  return dynamic_cast< QSplitterHandle * >(ptr);
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_static_cast_QSplitterHandle_ptr1(QObject * ptr) {
  return static_cast< QSplitterHandle * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr105(QSplitterHandle * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_dynamic_cast_QSplitterHandle_ptr1(QObject * ptr) {
  return dynamic_cast< QSplitterHandle * >(ptr);
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_static_cast_QSplitterHandle_ptr2(QPaintDevice * ptr) {
  return static_cast< QSplitterHandle * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr60(QSplitterHandle * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QSplitterHandle * ctr_qt_widgets_ffi_dynamic_cast_QSplitterHandle_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QSplitterHandle * >(ptr);
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_static_cast_QStackedLayout_ptr(QLayout * ptr) {
  return static_cast< QStackedLayout * >(ptr);
}


RITUAL_EXPORT QLayout * ctr_qt_widgets_ffi_static_cast_QLayout_ptr7(QStackedLayout * ptr) {
  return static_cast< QLayout * >(ptr);
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_dynamic_cast_QStackedLayout_ptr(QLayout * ptr) {
  return dynamic_cast< QStackedLayout * >(ptr);
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_static_cast_QStackedLayout_ptr1(QObject * ptr) {
  return static_cast< QStackedLayout * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr106(QStackedLayout * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_dynamic_cast_QStackedLayout_ptr1(QObject * ptr) {
  return dynamic_cast< QStackedLayout * >(ptr);
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_static_cast_QStackedLayout_ptr2(QLayoutItem * ptr) {
  return static_cast< QStackedLayout * >(ptr);
}


RITUAL_EXPORT QLayoutItem * ctr_qt_widgets_ffi_static_cast_QLayoutItem_ptr8(QStackedLayout * ptr) {
  return static_cast< QLayoutItem * >(ptr);
}


RITUAL_EXPORT QStackedLayout * ctr_qt_widgets_ffi_dynamic_cast_QStackedLayout_ptr2(QLayoutItem * ptr) {
  return dynamic_cast< QStackedLayout * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_static_cast_QStackedWidget_ptr(QFrame * ptr) {
  return static_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr17(QStackedWidget * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_dynamic_cast_QStackedWidget_ptr(QFrame * ptr) {
  return dynamic_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_static_cast_QStackedWidget_ptr1(QWidget * ptr) {
  return static_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr62(QStackedWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_dynamic_cast_QStackedWidget_ptr1(QWidget * ptr) {
  return dynamic_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_static_cast_QStackedWidget_ptr2(QObject * ptr) {
  return static_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr107(QStackedWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_dynamic_cast_QStackedWidget_ptr2(QObject * ptr) {
  return dynamic_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_static_cast_QStackedWidget_ptr3(QPaintDevice * ptr) {
  return static_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr61(QStackedWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QStackedWidget * ctr_qt_widgets_ffi_dynamic_cast_QStackedWidget_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QStackedWidget * >(ptr);
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_static_cast_QStatusBar_ptr(QWidget * ptr) {
  return static_cast< QStatusBar * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr63(QStatusBar * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_dynamic_cast_QStatusBar_ptr(QWidget * ptr) {
  return dynamic_cast< QStatusBar * >(ptr);
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_static_cast_QStatusBar_ptr1(QObject * ptr) {
  return static_cast< QStatusBar * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr108(QStatusBar * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_dynamic_cast_QStatusBar_ptr1(QObject * ptr) {
  return dynamic_cast< QStatusBar * >(ptr);
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_static_cast_QStatusBar_ptr2(QPaintDevice * ptr) {
  return static_cast< QStatusBar * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr62(QStatusBar * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QStatusBar * ctr_qt_widgets_ffi_dynamic_cast_QStatusBar_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QStatusBar * >(ptr);
}


RITUAL_EXPORT QStyledItemDelegate * ctr_qt_widgets_ffi_static_cast_QStyledItemDelegate_ptr(QAbstractItemDelegate * ptr) {
  return static_cast< QStyledItemDelegate * >(ptr);
}


RITUAL_EXPORT QAbstractItemDelegate * ctr_qt_widgets_ffi_static_cast_QAbstractItemDelegate_ptr2(QStyledItemDelegate * ptr) {
  return static_cast< QAbstractItemDelegate * >(ptr);
}


RITUAL_EXPORT QStyledItemDelegate * ctr_qt_widgets_ffi_dynamic_cast_QStyledItemDelegate_ptr(QAbstractItemDelegate * ptr) {
  return dynamic_cast< QStyledItemDelegate * >(ptr);
}


RITUAL_EXPORT QStyledItemDelegate * ctr_qt_widgets_ffi_static_cast_QStyledItemDelegate_ptr1(QObject * ptr) {
  return static_cast< QStyledItemDelegate * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr109(QStyledItemDelegate * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QStyledItemDelegate * ctr_qt_widgets_ffi_dynamic_cast_QStyledItemDelegate_ptr1(QObject * ptr) {
  return dynamic_cast< QStyledItemDelegate * >(ptr);
}


RITUAL_EXPORT QStylePainter * ctr_qt_widgets_ffi_static_cast_QStylePainter_ptr(QPainter * ptr) {
  return static_cast< QStylePainter * >(ptr);
}


RITUAL_EXPORT QPainter * ctr_qt_widgets_ffi_static_cast_QPainter_ptr(QStylePainter * ptr) {
  return static_cast< QPainter * >(ptr);
}


RITUAL_EXPORT QStylePlugin * ctr_qt_widgets_ffi_static_cast_QStylePlugin_ptr(QObject * ptr) {
  return static_cast< QStylePlugin * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr110(QStylePlugin * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QStylePlugin * ctr_qt_widgets_ffi_dynamic_cast_QStylePlugin_ptr(QObject * ptr) {
  return dynamic_cast< QStylePlugin * >(ptr);
}


RITUAL_EXPORT QSystemTrayIcon * ctr_qt_widgets_ffi_static_cast_QSystemTrayIcon_ptr(QObject * ptr) {
  return static_cast< QSystemTrayIcon * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr111(QSystemTrayIcon * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QSystemTrayIcon * ctr_qt_widgets_ffi_dynamic_cast_QSystemTrayIcon_ptr(QObject * ptr) {
  return dynamic_cast< QSystemTrayIcon * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_static_cast_QTableView_ptr(QAbstractItemView * ptr) {
  return static_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr9(QTableView * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_dynamic_cast_QTableView_ptr(QAbstractItemView * ptr) {
  return dynamic_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_static_cast_QTableView_ptr1(QAbstractScrollArea * ptr) {
  return static_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr14(QTableView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_dynamic_cast_QTableView_ptr1(QAbstractScrollArea * ptr) {
  return dynamic_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_static_cast_QTableView_ptr2(QFrame * ptr) {
  return static_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr18(QTableView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_dynamic_cast_QTableView_ptr2(QFrame * ptr) {
  return dynamic_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_static_cast_QTableView_ptr3(QWidget * ptr) {
  return static_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr64(QTableView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_dynamic_cast_QTableView_ptr3(QWidget * ptr) {
  return dynamic_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_static_cast_QTableView_ptr4(QObject * ptr) {
  return static_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr112(QTableView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_dynamic_cast_QTableView_ptr4(QObject * ptr) {
  return dynamic_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_static_cast_QTableView_ptr5(QPaintDevice * ptr) {
  return static_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr63(QTableView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_dynamic_cast_QTableView_ptr5(QPaintDevice * ptr) {
  return dynamic_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_static_cast_QTableWidget_ptr(QTableView * ptr) {
  return static_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTableView * ctr_qt_widgets_ffi_static_cast_QTableView_ptr6(QTableWidget * ptr) {
  return static_cast< QTableView * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_dynamic_cast_QTableWidget_ptr(QTableView * ptr) {
  return dynamic_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_static_cast_QTableWidget_ptr1(QAbstractItemView * ptr) {
  return static_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr10(QTableWidget * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_dynamic_cast_QTableWidget_ptr1(QAbstractItemView * ptr) {
  return dynamic_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_static_cast_QTableWidget_ptr2(QAbstractScrollArea * ptr) {
  return static_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr15(QTableWidget * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_dynamic_cast_QTableWidget_ptr2(QAbstractScrollArea * ptr) {
  return dynamic_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_static_cast_QTableWidget_ptr3(QFrame * ptr) {
  return static_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr19(QTableWidget * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_dynamic_cast_QTableWidget_ptr3(QFrame * ptr) {
  return dynamic_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_static_cast_QTableWidget_ptr4(QWidget * ptr) {
  return static_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr65(QTableWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_dynamic_cast_QTableWidget_ptr4(QWidget * ptr) {
  return dynamic_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_static_cast_QTableWidget_ptr5(QObject * ptr) {
  return static_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr113(QTableWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_dynamic_cast_QTableWidget_ptr5(QObject * ptr) {
  return dynamic_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_static_cast_QTableWidget_ptr6(QPaintDevice * ptr) {
  return static_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr64(QTableWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTableWidget * ctr_qt_widgets_ffi_dynamic_cast_QTableWidget_ptr6(QPaintDevice * ptr) {
  return dynamic_cast< QTableWidget * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_static_cast_QTextBrowser_ptr(QTextEdit * ptr) {
  return static_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QTextEdit * ctr_qt_widgets_ffi_static_cast_QTextEdit_ptr5(QTextBrowser * ptr) {
  return static_cast< QTextEdit * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_dynamic_cast_QTextBrowser_ptr(QTextEdit * ptr) {
  return dynamic_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_static_cast_QTextBrowser_ptr1(QAbstractScrollArea * ptr) {
  return static_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr16(QTextBrowser * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_dynamic_cast_QTextBrowser_ptr1(QAbstractScrollArea * ptr) {
  return dynamic_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_static_cast_QTextBrowser_ptr2(QFrame * ptr) {
  return static_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr20(QTextBrowser * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_dynamic_cast_QTextBrowser_ptr2(QFrame * ptr) {
  return dynamic_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_static_cast_QTextBrowser_ptr3(QWidget * ptr) {
  return static_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr66(QTextBrowser * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_dynamic_cast_QTextBrowser_ptr3(QWidget * ptr) {
  return dynamic_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_static_cast_QTextBrowser_ptr4(QObject * ptr) {
  return static_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr114(QTextBrowser * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_dynamic_cast_QTextBrowser_ptr4(QObject * ptr) {
  return dynamic_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_static_cast_QTextBrowser_ptr5(QPaintDevice * ptr) {
  return static_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr65(QTextBrowser * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTextBrowser * ctr_qt_widgets_ffi_dynamic_cast_QTextBrowser_ptr5(QPaintDevice * ptr) {
  return dynamic_cast< QTextBrowser * >(ptr);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_static_cast_QToolBar_ptr(QWidget * ptr) {
  return static_cast< QToolBar * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr67(QToolBar * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_dynamic_cast_QToolBar_ptr(QWidget * ptr) {
  return dynamic_cast< QToolBar * >(ptr);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_static_cast_QToolBar_ptr1(QObject * ptr) {
  return static_cast< QToolBar * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr115(QToolBar * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_dynamic_cast_QToolBar_ptr1(QObject * ptr) {
  return dynamic_cast< QToolBar * >(ptr);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_static_cast_QToolBar_ptr2(QPaintDevice * ptr) {
  return static_cast< QToolBar * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr66(QToolBar * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QToolBar * ctr_qt_widgets_ffi_dynamic_cast_QToolBar_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QToolBar * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_static_cast_QToolBox_ptr(QFrame * ptr) {
  return static_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr21(QToolBox * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_dynamic_cast_QToolBox_ptr(QFrame * ptr) {
  return dynamic_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_static_cast_QToolBox_ptr1(QWidget * ptr) {
  return static_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr68(QToolBox * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_dynamic_cast_QToolBox_ptr1(QWidget * ptr) {
  return dynamic_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_static_cast_QToolBox_ptr2(QObject * ptr) {
  return static_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr116(QToolBox * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_dynamic_cast_QToolBox_ptr2(QObject * ptr) {
  return dynamic_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_static_cast_QToolBox_ptr3(QPaintDevice * ptr) {
  return static_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr67(QToolBox * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QToolBox * ctr_qt_widgets_ffi_dynamic_cast_QToolBox_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QToolBox * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_static_cast_QToolButton_ptr(QAbstractButton * ptr) {
  return static_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QAbstractButton * ctr_qt_widgets_ffi_static_cast_QAbstractButton_ptr7(QToolButton * ptr) {
  return static_cast< QAbstractButton * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_dynamic_cast_QToolButton_ptr(QAbstractButton * ptr) {
  return dynamic_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_static_cast_QToolButton_ptr1(QWidget * ptr) {
  return static_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr69(QToolButton * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_dynamic_cast_QToolButton_ptr1(QWidget * ptr) {
  return dynamic_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_static_cast_QToolButton_ptr2(QObject * ptr) {
  return static_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr117(QToolButton * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_dynamic_cast_QToolButton_ptr2(QObject * ptr) {
  return dynamic_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_static_cast_QToolButton_ptr3(QPaintDevice * ptr) {
  return static_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr68(QToolButton * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QToolButton * ctr_qt_widgets_ffi_dynamic_cast_QToolButton_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QToolButton * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_static_cast_QTreeView_ptr(QAbstractItemView * ptr) {
  return static_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr11(QTreeView * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_dynamic_cast_QTreeView_ptr(QAbstractItemView * ptr) {
  return dynamic_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_static_cast_QTreeView_ptr1(QAbstractScrollArea * ptr) {
  return static_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr17(QTreeView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_dynamic_cast_QTreeView_ptr1(QAbstractScrollArea * ptr) {
  return dynamic_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_static_cast_QTreeView_ptr2(QFrame * ptr) {
  return static_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr22(QTreeView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_dynamic_cast_QTreeView_ptr2(QFrame * ptr) {
  return dynamic_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_static_cast_QTreeView_ptr3(QWidget * ptr) {
  return static_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr70(QTreeView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_dynamic_cast_QTreeView_ptr3(QWidget * ptr) {
  return dynamic_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_static_cast_QTreeView_ptr4(QObject * ptr) {
  return static_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr118(QTreeView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_dynamic_cast_QTreeView_ptr4(QObject * ptr) {
  return dynamic_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_static_cast_QTreeView_ptr5(QPaintDevice * ptr) {
  return static_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr69(QTreeView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_dynamic_cast_QTreeView_ptr5(QPaintDevice * ptr) {
  return dynamic_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_static_cast_QTreeWidget_ptr(QTreeView * ptr) {
  return static_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QTreeView * ctr_qt_widgets_ffi_static_cast_QTreeView_ptr6(QTreeWidget * ptr) {
  return static_cast< QTreeView * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_dynamic_cast_QTreeWidget_ptr(QTreeView * ptr) {
  return dynamic_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_static_cast_QTreeWidget_ptr1(QAbstractItemView * ptr) {
  return static_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr12(QTreeWidget * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_dynamic_cast_QTreeWidget_ptr1(QAbstractItemView * ptr) {
  return dynamic_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_static_cast_QTreeWidget_ptr2(QAbstractScrollArea * ptr) {
  return static_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr18(QTreeWidget * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_dynamic_cast_QTreeWidget_ptr2(QAbstractScrollArea * ptr) {
  return dynamic_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_static_cast_QTreeWidget_ptr3(QFrame * ptr) {
  return static_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr23(QTreeWidget * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_dynamic_cast_QTreeWidget_ptr3(QFrame * ptr) {
  return dynamic_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_static_cast_QTreeWidget_ptr4(QWidget * ptr) {
  return static_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr71(QTreeWidget * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_dynamic_cast_QTreeWidget_ptr4(QWidget * ptr) {
  return dynamic_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_static_cast_QTreeWidget_ptr5(QObject * ptr) {
  return static_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr119(QTreeWidget * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_dynamic_cast_QTreeWidget_ptr5(QObject * ptr) {
  return dynamic_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_static_cast_QTreeWidget_ptr6(QPaintDevice * ptr) {
  return static_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr70(QTreeWidget * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QTreeWidget * ctr_qt_widgets_ffi_dynamic_cast_QTreeWidget_ptr6(QPaintDevice * ptr) {
  return dynamic_cast< QTreeWidget * >(ptr);
}


RITUAL_EXPORT QUndoGroup * ctr_qt_widgets_ffi_static_cast_QUndoGroup_ptr(QObject * ptr) {
  return static_cast< QUndoGroup * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr120(QUndoGroup * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QUndoGroup * ctr_qt_widgets_ffi_dynamic_cast_QUndoGroup_ptr(QObject * ptr) {
  return dynamic_cast< QUndoGroup * >(ptr);
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_static_cast_QUndoStack_ptr(QObject * ptr) {
  return static_cast< QUndoStack * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr121(QUndoStack * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QUndoStack * ctr_qt_widgets_ffi_dynamic_cast_QUndoStack_ptr(QObject * ptr) {
  return dynamic_cast< QUndoStack * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_static_cast_QUndoView_ptr(QListView * ptr) {
  return static_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QListView * ctr_qt_widgets_ffi_static_cast_QListView_ptr7(QUndoView * ptr) {
  return static_cast< QListView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_dynamic_cast_QUndoView_ptr(QListView * ptr) {
  return dynamic_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_static_cast_QUndoView_ptr1(QAbstractItemView * ptr) {
  return static_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QAbstractItemView * ctr_qt_widgets_ffi_static_cast_QAbstractItemView_ptr13(QUndoView * ptr) {
  return static_cast< QAbstractItemView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_dynamic_cast_QUndoView_ptr1(QAbstractItemView * ptr) {
  return dynamic_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_static_cast_QUndoView_ptr2(QAbstractScrollArea * ptr) {
  return static_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QAbstractScrollArea * ctr_qt_widgets_ffi_static_cast_QAbstractScrollArea_ptr19(QUndoView * ptr) {
  return static_cast< QAbstractScrollArea * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_dynamic_cast_QUndoView_ptr2(QAbstractScrollArea * ptr) {
  return dynamic_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_static_cast_QUndoView_ptr3(QFrame * ptr) {
  return static_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QFrame * ctr_qt_widgets_ffi_static_cast_QFrame_ptr24(QUndoView * ptr) {
  return static_cast< QFrame * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_dynamic_cast_QUndoView_ptr3(QFrame * ptr) {
  return dynamic_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_static_cast_QUndoView_ptr4(QWidget * ptr) {
  return static_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr72(QUndoView * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_dynamic_cast_QUndoView_ptr4(QWidget * ptr) {
  return dynamic_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_static_cast_QUndoView_ptr5(QObject * ptr) {
  return static_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr122(QUndoView * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_dynamic_cast_QUndoView_ptr5(QObject * ptr) {
  return dynamic_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_static_cast_QUndoView_ptr6(QPaintDevice * ptr) {
  return static_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr71(QUndoView * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QUndoView * ctr_qt_widgets_ffi_dynamic_cast_QUndoView_ptr6(QPaintDevice * ptr) {
  return dynamic_cast< QUndoView * >(ptr);
}


RITUAL_EXPORT QWidgetAction * ctr_qt_widgets_ffi_static_cast_QWidgetAction_ptr(QAction * ptr) {
  return static_cast< QWidgetAction * >(ptr);
}


RITUAL_EXPORT QAction * ctr_qt_widgets_ffi_static_cast_QAction_ptr1(QWidgetAction * ptr) {
  return static_cast< QAction * >(ptr);
}


RITUAL_EXPORT QWidgetAction * ctr_qt_widgets_ffi_dynamic_cast_QWidgetAction_ptr(QAction * ptr) {
  return dynamic_cast< QWidgetAction * >(ptr);
}


RITUAL_EXPORT QWidgetAction * ctr_qt_widgets_ffi_static_cast_QWidgetAction_ptr1(QObject * ptr) {
  return static_cast< QWidgetAction * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr123(QWidgetAction * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QWidgetAction * ctr_qt_widgets_ffi_dynamic_cast_QWidgetAction_ptr1(QObject * ptr) {
  return dynamic_cast< QWidgetAction * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_static_cast_QWizard_ptr(QDialog * ptr) {
  return static_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QDialog * ctr_qt_widgets_ffi_static_cast_QDialog_ptr10(QWizard * ptr) {
  return static_cast< QDialog * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_dynamic_cast_QWizard_ptr(QDialog * ptr) {
  return dynamic_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_static_cast_QWizard_ptr1(QWidget * ptr) {
  return static_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr73(QWizard * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_dynamic_cast_QWizard_ptr1(QWidget * ptr) {
  return dynamic_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_static_cast_QWizard_ptr2(QObject * ptr) {
  return static_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr124(QWizard * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_dynamic_cast_QWizard_ptr2(QObject * ptr) {
  return dynamic_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_static_cast_QWizard_ptr3(QPaintDevice * ptr) {
  return static_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr72(QWizard * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QWizard * ctr_qt_widgets_ffi_dynamic_cast_QWizard_ptr3(QPaintDevice * ptr) {
  return dynamic_cast< QWizard * >(ptr);
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_static_cast_QWizardPage_ptr(QWidget * ptr) {
  return static_cast< QWizardPage * >(ptr);
}


RITUAL_EXPORT QWidget * ctr_qt_widgets_ffi_static_cast_QWidget_ptr74(QWizardPage * ptr) {
  return static_cast< QWidget * >(ptr);
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_dynamic_cast_QWizardPage_ptr(QWidget * ptr) {
  return dynamic_cast< QWizardPage * >(ptr);
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_static_cast_QWizardPage_ptr1(QObject * ptr) {
  return static_cast< QWizardPage * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr125(QWizardPage * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_dynamic_cast_QWizardPage_ptr1(QObject * ptr) {
  return dynamic_cast< QWizardPage * >(ptr);
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_static_cast_QWizardPage_ptr2(QPaintDevice * ptr) {
  return static_cast< QWizardPage * >(ptr);
}


RITUAL_EXPORT QPaintDevice * ctr_qt_widgets_ffi_static_cast_QPaintDevice_ptr73(QWizardPage * ptr) {
  return static_cast< QPaintDevice * >(ptr);
}


RITUAL_EXPORT QWizardPage * ctr_qt_widgets_ffi_dynamic_cast_QWizardPage_ptr2(QPaintDevice * ptr) {
  return dynamic_cast< QWizardPage * >(ptr);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr(QObject * parent, void (*callback)(void *, QTableWidgetItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * this_ptr, void (*callback)(void *, QTableWidgetItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * this_ptr, QTableWidgetItem * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * this_ptr, QTableWidgetItem * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref(QObject * parent, void (*callback)(void *, QScrollerProperties const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * this_ptr, void (*callback)(void *, QScrollerProperties const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * this_ptr, QScrollerProperties const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * this_ptr, QScrollerProperties const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref(QObject * parent, void (*callback)(void *, QBrush const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * this_ptr, void (*callback)(void *, QBrush const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * this_ptr, QBrush const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * this_ptr, QBrush const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr(QObject * parent, void (*callback)(void *, QListWidgetItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * this_ptr, void (*callback)(void *, QListWidgetItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * this_ptr, QListWidgetItem * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * this_ptr, QListWidgetItem * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref(QObject * parent, void (*callback)(void *, QDate const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * this_ptr, void (*callback)(void *, QDate const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * this_ptr, QDate const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * this_ptr, QDate const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_metaObject(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle(QObject * parent, void (*callback)(void *, Qt::ToolButtonStyle), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_set(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * this_ptr, void (*callback)(void *, Qt::ToolButtonStyle), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_slot_(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * this_ptr, Qt::ToolButtonStyle arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_metaObject(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle() {
  return new ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_emit_(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * this_ptr, Qt::ToolButtonStyle arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref(QObject * parent, void (*callback)(void *, QString const *, QString const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * this_ptr, void (*callback)(void *, QString const *, QString const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * this_ptr, QString const * arg0, QString const * arg1) {
  this_ptr->slot_(*arg0, *arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * this_ptr, QString const * arg0, QString const * arg1) {
  this_ptr->emit_(*arg0, *arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref(QObject * parent, void (*callback)(void *, QStringList const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * this_ptr, void (*callback)(void *, QStringList const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * this_ptr, QStringList const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * this_ptr, QStringList const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_slot_(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * this_ptr, QRect const * arg0, QPointF const * arg1, QPointF const * arg2) {
  this_ptr->slot_(*arg0, *arg1, *arg2);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_emit_(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * this_ptr, QRect const * arg0, QPointF const * arg1, QPointF const * arg2) {
  this_ptr->emit_(*arg0, *arg1, *arg2);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr(QObject * parent, void (*callback)(void *, QUndoStack *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * this_ptr, void (*callback)(void *, QUndoStack *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * this_ptr, QUndoStack * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * this_ptr, QUndoStack * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref(QObject * parent, void (*callback)(void *, QString const *, QString const *, QString const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr, void (*callback)(void *, QString const *, QString const *, QString const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr, QString const * arg0, QString const * arg1, QString const * arg2) {
  this_ptr->slot_(*arg0, *arg1, *arg2);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr, QString const * arg0, QString const * arg1, QString const * arg2) {
  this_ptr->emit_(*arg0, *arg1, *arg2);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref(QObject * parent, void (*callback)(void *, QPoint const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * this_ptr, void (*callback)(void *, QPoint const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * this_ptr, QPoint const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * this_ptr, QPoint const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref(QObject * parent, void (*callback)(void *, QIcon const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * this_ptr, void (*callback)(void *, QIcon const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * this_ptr, QIcon const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * this_ptr, QIcon const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea(QObject * parent, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_set(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * this_ptr, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_slot_(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * this_ptr, int arg0) {
  this_ptr->slot_(QFlags< Qt::DockWidgetArea >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_emit_(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * this_ptr, int arg0) {
  this_ptr->emit_(QFlags< Qt::DockWidgetArea >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature(QObject * parent, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_set(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_slot_(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr, int arg0) {
  this_ptr->slot_(QFlags< QDockWidget::DockWidgetFeature >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_emit_(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr, int arg0) {
  this_ptr->emit_(QFlags< QDockWidget::DockWidgetFeature >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr(QObject * parent, void (*callback)(void *, QMdiSubWindow *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * this_ptr, void (*callback)(void *, QMdiSubWindow *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * this_ptr, QMdiSubWindow * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * this_ptr, QMdiSubWindow * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea(QObject * parent, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_set(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * this_ptr, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_slot_(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * this_ptr, int arg0) {
  this_ptr->slot_(QFlags< Qt::ToolBarArea >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_emit_(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * this_ptr, int arg0) {
  this_ptr->emit_(QFlags< Qt::ToolBarArea >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref(QObject * parent, void (*callback)(void *, QList< QModelIndex > const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * this_ptr, void (*callback)(void *, QList< QModelIndex > const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * this_ptr, QList< QModelIndex > const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * this_ptr, QList< QModelIndex > const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint(QObject * parent, void (*callback)(void *, QWidget *, QAbstractItemDelegate::EndEditHint), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_set(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr, void (*callback)(void *, QWidget *, QAbstractItemDelegate::EndEditHint), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_slot_(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr, QWidget * arg0, QAbstractItemDelegate::EndEditHint arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_emit_(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr, QWidget * arg0, QAbstractItemDelegate::EndEditHint arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr(QObject * parent, void (*callback)(void *, QAbstractButton *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * this_ptr, void (*callback)(void *, QAbstractButton *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * this_ptr, QAbstractButton * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * this_ptr, QAbstractButton * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QScroller_State::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State(QObject * parent, void (*callback)(void *, QScroller::State), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QScroller_State(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_set(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * this_ptr, void (*callback)(void *, QScroller::State), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_slot_(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * this_ptr, QScroller::State arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QScroller_State::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QScroller_State();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_emit_(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * this_ptr, QScroller::State arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_slot_(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * this_ptr, QRect const * arg0, QPointF const * arg1) {
  this_ptr->slot_(*arg0, *arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_emit_(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * this_ptr, QRect const * arg0, QPointF const * arg1) {
  this_ptr->emit_(*arg0, *arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr(QObject * parent, void (*callback)(void *, QWidget *, QWidget *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * this_ptr, void (*callback)(void *, QWidget *, QWidget *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * this_ptr, QWidget * arg0, QWidget * arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * this_ptr, QWidget * arg0, QWidget * arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_metaObject(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder(QObject * parent, void (*callback)(void *, int, Qt::SortOrder), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_set(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * this_ptr, void (*callback)(void *, int, Qt::SortOrder), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_slot_(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * this_ptr, int arg0, Qt::SortOrder arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_metaObject(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder() {
  return new ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_emit_(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * this_ptr, int arg0, Qt::SortOrder arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason(QObject * parent, void (*callback)(void *, QSystemTrayIcon::ActivationReason), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_set(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * this_ptr, void (*callback)(void *, QSystemTrayIcon::ActivationReason), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_slot_(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * this_ptr, QSystemTrayIcon::ActivationReason arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_emit_(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * this_ptr, QSystemTrayIcon::ActivationReason arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState(QObject * parent, void (*callback)(void *, int, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_set(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr, void (*callback)(void *, int, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_slot_(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr, int arg0, int arg1) {
  this_ptr->slot_(QFlags< Qt::WindowState >(arg0), QFlags< Qt::WindowState >(arg1));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_emit_(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr, int arg0, int arg1) {
  this_ptr->emit_(QFlags< Qt::WindowState >(arg0), QFlags< Qt::WindowState >(arg1));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool(QObject * parent, void (*callback)(void *, QAbstractButton *, bool), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_set(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * this_ptr, void (*callback)(void *, QAbstractButton *, bool), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_slot_(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * this_ptr, QAbstractButton * arg0, bool arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_emit_(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * this_ptr, QAbstractButton * arg0, bool arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref(QObject * parent, void (*callback)(void *, QPointF const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * this_ptr, void (*callback)(void *, QPointF const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * this_ptr, QPointF const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * this_ptr, QPointF const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr(QObject * parent, void (*callback)(void *, QTableWidgetItem *, QTableWidgetItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr, void (*callback)(void *, QTableWidgetItem *, QTableWidgetItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr, QTableWidgetItem * arg0, QTableWidgetItem * arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr, QTableWidgetItem * arg0, QTableWidgetItem * arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr(QObject * parent, void (*callback)(void *, QGraphicsItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * this_ptr, void (*callback)(void *, QGraphicsItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * this_ptr, QGraphicsItem * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * this_ptr, QGraphicsItem * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref(QObject * parent, void (*callback)(void *, QTime const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * this_ptr, void (*callback)(void *, QTime const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * this_ptr, QTime const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * this_ptr, QTime const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr(QObject * parent, void (*callback)(void *, QGraphicsItem *, QGraphicsItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr, void (*callback)(void *, QGraphicsItem *, QGraphicsItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr, QGraphicsItem * arg0, QGraphicsItem * arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr, QGraphicsItem * arg0, QGraphicsItem * arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QRect::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QRect const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QRect * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QRect * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect::trUtf8(s, c, n));
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_slot_(ctr_qt_widgets_ffi_slot_wrapper_QRect * this_ptr, QRect const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QRect::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QRect const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QRect * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QRect * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_ctr_qt_widgets_ffi_signal_wrapper_QRect() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QRect();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_emit_(ctr_qt_widgets_ffi_signal_wrapper_QRect * this_ptr, QRect const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref(QObject * parent, void (*callback)(void *, QList< QRectF > const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * this_ptr, void (*callback)(void *, QList< QRectF > const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * this_ptr, QList< QRectF > const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * this_ptr, QList< QRectF > const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int(QObject * parent, void (*callback)(void *, QRect const *, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_set(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * this_ptr, void (*callback)(void *, QRect const *, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_slot_(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * this_ptr, QRect const * arg0, int arg1) {
  this_ptr->slot_(*arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_emit_(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * this_ptr, QRect const * arg0, int arg1) {
  this_ptr->emit_(*arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref(QObject * parent, void (*callback)(void *, QDateTime const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * this_ptr, void (*callback)(void *, QDateTime const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * this_ptr, QDateTime const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * this_ptr, QDateTime const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref(QObject * parent, void (*callback)(void *, QKeySequence const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * this_ptr, void (*callback)(void *, QKeySequence const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * this_ptr, QKeySequence const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * this_ptr, QKeySequence const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr(QObject * parent, void (*callback)(void *, QTreeWidgetItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * this_ptr, void (*callback)(void *, QTreeWidgetItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * this_ptr, QTreeWidgetItem * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * this_ptr, QTreeWidgetItem * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint(QObject * parent, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_set(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_slot_(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr, int arg0) {
  this_ptr->slot_(QFlags< QGraphicsBlurEffect::BlurHint >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_emit_(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr, int arg0) {
  this_ptr->emit_(QFlags< QGraphicsBlurEffect::BlurHint >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr(QObject * parent, void (*callback)(void *, QAction *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * this_ptr, void (*callback)(void *, QAction *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * this_ptr, QAction * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * this_ptr, QAction * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason(QObject * parent, void (*callback)(void *, QGraphicsItem *, QGraphicsItem *, Qt::FocusReason), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_set(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr, void (*callback)(void *, QGraphicsItem *, QGraphicsItem *, Qt::FocusReason), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_slot_(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr, QGraphicsItem * arg0, QGraphicsItem * arg1, Qt::FocusReason arg2) {
  this_ptr->slot_(arg0, arg1, arg2);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_emit_(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr, QGraphicsItem * arg0, QGraphicsItem * arg1, Qt::FocusReason arg2) {
  this_ptr->emit_(arg0, arg1, arg2);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr(QObject * parent, void (*callback)(void *, QListWidgetItem *, QListWidgetItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr, void (*callback)(void *, QListWidgetItem *, QListWidgetItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr, QListWidgetItem * arg0, QListWidgetItem * arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr, QListWidgetItem * arg0, QListWidgetItem * arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr(QObject * parent, void (*callback)(void *, QDockWidget *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * this_ptr, void (*callback)(void *, QDockWidget *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * this_ptr, QDockWidget * arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * this_ptr, QDockWidget * arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref(QObject * parent, void (*callback)(void *, QTextCharFormat const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * this_ptr, void (*callback)(void *, QTextCharFormat const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * this_ptr, QTextCharFormat const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * this_ptr, QTextCharFormat const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref(QObject * parent, void (*callback)(void *, QColor const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * this_ptr, void (*callback)(void *, QColor const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * this_ptr, QColor const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * this_ptr, QColor const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr(QObject * parent, void (*callback)(void *, QTreeWidgetItem *, QTreeWidgetItem *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_set(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr, void (*callback)(void *, QTreeWidgetItem *, QTreeWidgetItem *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_slot_(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr, QTreeWidgetItem * arg0, QTreeWidgetItem * arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_emit_(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr, QTreeWidgetItem * arg0, QTreeWidgetItem * arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState(QObject * parent, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_set(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * this_ptr, void (*callback)(void *, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_slot_(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * this_ptr, int arg0) {
  this_ptr->slot_(QFlags< Qt::WindowState >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_emit_(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * this_ptr, int arg0) {
  this_ptr->emit_(QFlags< Qt::WindowState >(arg0));
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int(QObject * parent, void (*callback)(void *, QTreeWidgetItem *, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_set(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * this_ptr, void (*callback)(void *, QTreeWidgetItem *, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_slot_(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * this_ptr, QTreeWidgetItem * arg0, int arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_emit_(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * this_ptr, QTreeWidgetItem * arg0, int arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_metaObject(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea(QObject * parent, void (*callback)(void *, Qt::DockWidgetArea), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_set(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * this_ptr, void (*callback)(void *, Qt::DockWidgetArea), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_slot_(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * this_ptr, Qt::DockWidgetArea arg0) {
  this_ptr->slot_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_metaObject(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea() {
  return new ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_emit_(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * this_ptr, Qt::DockWidgetArea arg0) {
  this_ptr->emit_(arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_int_bool::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_metaObject(ctr_qt_widgets_ffi_slot_wrapper_int_bool const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_int_bool * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_int_bool * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_int_bool::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_int_bool::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_bool * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_ctr_qt_widgets_ffi_slot_wrapper_int_bool(QObject * parent, void (*callback)(void *, int, bool), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_int_bool(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_set(ctr_qt_widgets_ffi_slot_wrapper_int_bool * this_ptr, void (*callback)(void *, int, bool), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_slot_(ctr_qt_widgets_ffi_slot_wrapper_int_bool * this_ptr, int arg0, bool arg1) {
  this_ptr->slot_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_int_bool::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_metaObject(ctr_qt_widgets_ffi_signal_wrapper_int_bool const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_int_bool * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_int_bool * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_int_bool::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_int_bool::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_bool * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_ctr_qt_widgets_ffi_signal_wrapper_int_bool() {
  return new ctr_qt_widgets_ffi_signal_wrapper_int_bool();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_emit_(ctr_qt_widgets_ffi_signal_wrapper_int_bool * this_ptr, int arg0, bool arg1) {
  this_ptr->emit_(arg0, arg1);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_metaObject(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref(QObject * parent, void (*callback)(void *, QList< QUrl > const *), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_set(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * this_ptr, void (*callback)(void *, QList< QUrl > const *), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_slot_(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * this_ptr, QList< QUrl > const * arg0) {
  this_ptr->slot_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_metaObject(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref() {
  return new ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_emit_(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * this_ptr, QList< QUrl > const * arg0) {
  this_ptr->emit_(*arg0);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_staticMetaObject() {
  return &ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_metaObject(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_qt_metacast(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_qt_metacall(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int(QObject * parent, void (*callback)(void *, int, int, int, int), void (*deleter)(void *), void * data) {
  return new ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int(parent, callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_set(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * this_ptr, void (*callback)(void *, int, int, int, int), void (*deleter)(void *), void * data) {
  this_ptr->set(callback, deleter, data);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_slot_(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * this_ptr, int arg0, int arg1, int arg2, int arg3) {
  this_ptr->slot_(arg0, arg1, arg2, arg3);
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_staticMetaObject() {
  return &ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int::staticMetaObject;
}


RITUAL_EXPORT QMetaObject const * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_metaObject(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int const * this_ptr) {
  return this_ptr->metaObject();
}


RITUAL_EXPORT void * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_qt_metacast(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * this_ptr, char const * arg1) {
  return this_ptr->qt_metacast(arg1);
}


RITUAL_EXPORT int ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_qt_metacall(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * this_ptr, QMetaObject::Call arg1, int arg2, void * * arg3) {
  return this_ptr->qt_metacall(arg1, arg2, arg3);
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_tr(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int::tr(s, c, n));
}


RITUAL_EXPORT QString * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_trUtf8(char const * s, char const * c, int n) {
  return new QString(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int::trUtf8(s, c, n));
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int() {
  return new ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int();
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_emit_(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * this_ptr, int arg0, int arg1, int arg2, int arg3) {
  this_ptr->emit_(arg0, arg1, arg2, arg3);
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_dctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_dctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_dctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_dctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_dctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_dctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_dctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_dctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_dctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_dctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_dctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_dctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_dctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_dctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_dctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_dctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_dctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_dctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_dctr_qt_widgets_ffi_slot_wrapper_QScroller_State(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_dctr_qt_widgets_ffi_signal_wrapper_QScroller_State(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_dctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_dctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_dctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_dctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_dctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_dctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_dctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_dctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_dctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_dctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_dctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_dctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_dctr_qt_widgets_ffi_slot_wrapper_QRect(ctr_qt_widgets_ffi_slot_wrapper_QRect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_dctr_qt_widgets_ffi_signal_wrapper_QRect(ctr_qt_widgets_ffi_signal_wrapper_QRect * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_dctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_dctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_dctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_dctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_dctr_qt_widgets_ffi_slot_wrapper_QAction_ptr(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_dctr_qt_widgets_ffi_signal_wrapper_QAction_ptr(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_dctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_dctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_dctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_dctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_dctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_dctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_dctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_dctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_dctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_dctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_dctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_dctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_bool_dctr_qt_widgets_ffi_slot_wrapper_int_bool(ctr_qt_widgets_ffi_slot_wrapper_int_bool * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_bool_dctr_qt_widgets_ffi_signal_wrapper_int_bool(ctr_qt_widgets_ffi_signal_wrapper_int_bool * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_dctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_dctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_dctr_qt_widgets_ffi_slot_wrapper_int_int_int_int(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT void ctr_qt_widgets_ffi_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_dctr_qt_widgets_ffi_signal_wrapper_int_int_int_int(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * this_ptr) {
  delete this_ptr;
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr252(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr253(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr254(ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QScrollerProperties_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr255(ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QScrollerProperties_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr256(ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QBrush_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr257(ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QBrush_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr258(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr259(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr260(ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QDate_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr261(ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QDate_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr262(ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_Qt_ToolButtonStyle * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr263(ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_Qt_ToolButtonStyle * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr264(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr265(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr266(ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QStringList_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr267(ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QStringList_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr268(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_QPointF * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr269(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_QPointF * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr270(ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QUndoStack_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr271(ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QUndoStack_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr272(ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr273(ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QString_const_ref_QString_const_ref_QString_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr274(ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QPoint_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr275(ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QPoint_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr276(ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QIcon_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr277(ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QIcon_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr278(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr279(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr280(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_QDockWidget_DockWidgetFeature * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr281(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_QDockWidget_DockWidgetFeature * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr282(ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QMdiSubWindow_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr283(ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QMdiSubWindow_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr284(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_ToolBarArea * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr285(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_ToolBarArea * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr286(ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QList_QModelIndex_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr287(ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QList_QModelIndex_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr288(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr289(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr290(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr291(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr292(ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QScroller_State_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QScroller_State * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr293(ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QScroller_State_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QScroller_State * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr294(ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect_QPointF * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr295(ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect_QPointF * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr296(ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QWidget_ptr_QWidget_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr297(ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QWidget_ptr_QWidget_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr298(ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_int_Qt_SortOrder * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr299(ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_int_Qt_SortOrder * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr300(ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QSystemTrayIcon_ActivationReason * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr301(ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QSystemTrayIcon_ActivationReason * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr302(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr303(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr304(ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QAbstractButton_ptr_bool * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr305(ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QAbstractButton_ptr_bool * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr306(ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QPointF_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr307(ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QPointF_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr308(ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr309(ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr310(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr311(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr312(ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QTime_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr313(ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QTime_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr314(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr315(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr316(ctr_qt_widgets_ffi_slot_wrapper_QRect * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr317(ctr_qt_widgets_ffi_signal_wrapper_QRect * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr318(ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QList_QRectF_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr319(ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QList_QRectF_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr320(ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QRect_const_ref_int * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr321(ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QRect_const_ref_int * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr322(ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QDateTime_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr323(ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QDateTime_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr324(ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QKeySequence_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr325(ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QKeySequence_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr326(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr327(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr328(ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr329(ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_QGraphicsBlurEffect_BlurHint * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr330(ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QAction_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr331(ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QAction_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr332(ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr333(ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr334(ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr335(ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QListWidgetItem_ptr_QListWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr336(ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QDockWidget_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr337(ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QDockWidget_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr338(ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QTextCharFormat_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr339(ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QTextCharFormat_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr340(ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QColor_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr341(ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QColor_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr342(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr343(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr344(ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr345(ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QFlags_Qt_WindowState * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr346(ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QTreeWidgetItem_ptr_int * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr347(ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QTreeWidgetItem_ptr_int * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr348(ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr349(ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_Qt_DockWidgetArea * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_bool * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_int_bool_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_int_bool * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr350(ctr_qt_widgets_ffi_slot_wrapper_int_bool * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_bool * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_int_bool_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_int_bool * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_bool * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_int_bool_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_int_bool * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr351(ctr_qt_widgets_ffi_signal_wrapper_int_bool * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_bool * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_int_bool_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_int_bool * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr352(ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_QList_QUrl_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr353(ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_QList_QUrl_const_ref * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr354(ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_slot_wrapper_int_int_int_int * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * ctr_qt_widgets_ffi_static_cast_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_ptr(QObject * ptr) {
  return static_cast< ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * >(ptr);
}


RITUAL_EXPORT QObject * ctr_qt_widgets_ffi_static_cast_QObject_ptr355(ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * ptr) {
  return static_cast< QObject * >(ptr);
}


RITUAL_EXPORT ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * ctr_qt_widgets_ffi_dynamic_cast_ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int_ptr(QObject * ptr) {
  return dynamic_cast< ctr_qt_widgets_ffi_signal_wrapper_int_int_int_int * >(ptr);
}


} // extern "C"
#include "file1.moc"
